{"version":3,"file":"index.js","sources":["../networks/bitcoincash.js","../networks/groestlcoin.js","../networks/smartcash.js"],"sourcesContent":["import bcoin from 'bcoin'\n\nconst toVarByteString = (hex) => {\n  const len = hex.length / 2\n  const str = len.toString(16)\n  const hexLen = str.length % 2 === 0 ? str : `0${str}`\n  return hexLen + hex\n}\n\nconst scriptProto = bcoin.script.prototype\nconst getPubkey = scriptProto.getPubkey\nscriptProto.getPubkey = function (minimal) {\n  if (this.code.length === 6) {\n    const size = this.getLength(4)\n\n    if (\n      (size === 33 || size === 65) &&\n      this.getOp(5) === parseInt(OP_CHECKSIG, 16)\n    ) {\n      return this.getData(4)\n    }\n  }\n\n  return getPubkey.call(this, minimal)\n}\n\nconst OP_CHECKDATASIGVERIFY = 'bb'\nconst OP_CHECKDATASIG = 'ba'\nconst OP_CHECKSIG = 'ac'\nconst SIGNATURE =\n  '30440220256c12175e809381f97637933ed6ab97737d263eaaebca6add21bced67fd12a402205ce29ecc1369d6fc1b51977ed38faaf41119e3be1d7edfafd7cfaf0b6061bd07'\nconst MESSAGE = ''\nconst PUBKEY =\n  '038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508'\nconst cds = (sig, msg, pubKey, hdKey) => {\n  const cdsSuffix = `${toVarByteString(\n    hdKey ? hdKey.publicKey.toString('hex') : ''\n  )}${OP_CHECKSIG}`\n  const cdsPrefix = `0x${toVarByteString(sig)}${toVarByteString(msg)}${toVarByteString(\n    pubKey\n  )}`\n  return [cdsPrefix, cdsSuffix]\n}\n\nexport const main = {\n  forks: ['bitcoincashsv'],\n  keyPrefix: {\n    coinType: 145\n  },\n  addressPrefix: {\n    cashAddress: 'bitcoincash'\n  },\n  legacyAddressPrefix: {\n    pubkeyhash: 0x00,\n    scripthash: 0x05\n  },\n  replayProtection: {\n    forkSighash: 0x40,\n    forcedMinVersion: 1\n  },\n  scriptTemplates: {\n    replayProtection: (hdKey) =>\n      cds(SIGNATURE, MESSAGE, PUBKEY, hdKey).join(OP_CHECKDATASIGVERIFY),\n    checkdatasig: (hdKey) => (sig = '', msg = '', pubKey = '') =>\n      cds(sig, msg, pubKey, hdKey).join(OP_CHECKDATASIG),\n    checkdatasigverify: (hdKey) => (sig = '', msg = '', pubKey = '') =>\n      cds(sig, msg, pubKey, hdKey).join(OP_CHECKDATASIGVERIFY)\n  }\n}\n","// @flow\nimport bcoin from 'bcoin'\nimport bs58grscheck from 'bs58grscheck'\n\nconst isBech32 = address => {\n  try {\n    const hrp = bcoin.utils.bech32.decode(address).hrp\n    return hrp === 'grs'\n  } catch (e) {\n    return false\n  }\n}\n\nconst base58 = {\n  decode: (address: string) => {\n    if (isBech32(address)) return address\n    return bs58grscheck.decode(address).toString('hex')\n  },\n  encode: (data: Buffer) => {\n    if (isBech32(data)) return data\n    const payload = Buffer.from(data, 'hex')\n    return bs58grscheck.encode(payload)\n  }\n}\n\nconst sha256 = (rawTx: string) => {\n  const buf = Buffer.from(rawTx, 'hex')\n  return bcoin.crypto.digest.sha256(buf)\n}\n\nexport const main = {\n  magic: 0xf9beb4d4,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0x80,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 17\n  },\n  addressPrefix: {\n    pubkeyhash: 0x24,\n    scripthash: 0x05,\n    bech32: 'grs'\n  },\n  serializers: {\n    address: base58,\n    wif: base58,\n    txHash: (rawTx) => sha256(rawTx).toString('hex'),\n    signatureHash: sha256\n  }\n}\n","// @flow\nimport bs58sc from 'bs58smartcheck'\nimport bcoin from 'bcoin'\n\nconst base58 = {\n  decode: (address: string) => bs58sc.decode(address).toString('hex'),\n  encode: (data: Buffer) => bs58sc.encode(Buffer.from(data, 'hex'))\n}\n\nconst sha256 = (rawTx: string) => {\n  const buf = Buffer.from(rawTx, 'hex')\n  return bcoin.crypto.digest.sha256(buf)\n}\n\nexport const main = {\n  magic: 0x5ca1ab1e,\n  keyPrefix: {\n    privkey: 0xbf,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 224\n  },\n  addressPrefix: {\n    pubkeyhash: 0x3f,\n    scripthash: 0x12\n  },\n  serializers: {\n    address: base58,\n    wif: base58,\n    txHash: (rawTx) => sha256(rawTx).toString('hex'),\n    signatureHash: sha256\n  }\n}\n"],"names":["toVarByteString","hex","len","length","str","toString","hexLen","scriptProto","bcoin","script","prototype","getPubkey","minimal","code","size","getLength","getOp","parseInt","OP_CHECKSIG","getData","call","OP_CHECKDATASIGVERIFY","OP_CHECKDATASIG","SIGNATURE","MESSAGE","PUBKEY","cds","sig","msg","pubKey","hdKey","cdsSuffix","publicKey","cdsPrefix","main","forks","keyPrefix","coinType","addressPrefix","cashAddress","legacyAddressPrefix","pubkeyhash","scripthash","replayProtection","forkSighash","forcedMinVersion","scriptTemplates","join","checkdatasig","checkdatasigverify","isBech32","address","hrp","utils","bech32","decode","e","base58","bs58grscheck","encode","data","payload","Buffer","from","sha256","rawTx","buf","crypto","digest","magic","bips","privkey","xpubkey","xprivkey","xpubkey58","xprivkey58","serializers","wif","txHash","signatureHash","bs58sc"],"mappings":"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"}