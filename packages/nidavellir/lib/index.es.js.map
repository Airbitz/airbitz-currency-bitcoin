{"version":3,"file":"index.es.js","sources":["../src/utils/require.js","../src/utils/uintArray.js","../src/utils/hash.js","../src/utils/formatter.js","../src/utils/secp256k1.js","../src/bip32/derive.js","../src/utils/base.js","../src/hd/paths.js","../src/networks/baseInfo.js","../src/networks/bitcoin.js","../src/networks/bitcoingold.js","../src/networks/bitcoinsv.js","../src/networks/dash.js","../src/networks/digibyte.js","../src/networks/dogecoin.js","../src/networks/eboost.js","../src/networks/feathercoin.js","../src/networks/litecoin.js","../src/networks/qtum.js","../src/networks/uniformfiscalobject.js","../src/networks/vertcoin.js","../src/networks/zcoin.js","../src/core/networkInfo.js","../src/core/keyPair.js","../src/bip32/extendedKey.js","../src/bip32/hdKey.js","../src/bip44/paths.js","../src/utils/persister.js","../index.js"],"sourcesContent":["const lazyHandler = activeModule => ({\n  get: (target, prop, receiver) => {\n    // If already loaded return the loaded module\n    if (activeModule) return activeModule[prop]\n    // Try to inject the loaded module\n    if (prop === 'inject') {\n      return loadedModule => {\n        activeModule = loadedModule\n        for (const prop in target) {\n          target[prop].inject(activeModule[prop])\n        }\n      }\n    }\n    // Create a new child proxy if this prop not yet exists\n    if (!target[prop]) {\n      target[prop] = new Proxy(function (...args) {\n        if (!activeModule) target()\n        return activeModule[prop](...args)\n      }, lazyHandler())\n    }\n    return target[prop]\n  }\n})\n\nexport const lazify = unsafeModule => {\n  const parentModule = function (injectedModule = {}, loadUnsafe = true) {\n    const defaultModule = loadUnsafe ? unsafeModule() : {}\n    const loadedModule = Object.assign(defaultModule, injectedModule)\n    parentProxy.inject(loadedModule)\n  }\n  const parentProxy = new Proxy(parentModule, lazyHandler())\n  return parentProxy\n}\n","// @flow\n\nexport const isHexString = (hex: string) =>\n  typeof hex === 'string' && /^[0-9a-f]*$/i.test(hex)\n\nexport const toUint8Array = (hexString: string): Uint8Array => {\n  if (!isHexString(hexString)) {\n    throw new Error(`${hexString} is Not a Hex string`)\n  }\n  if (hexString.length % 2 !== 0) hexString = `0${hexString}`\n  const hex = hexString.match(/.{1,2}/g) || []\n  const bytes = hex.map(byte => parseInt(byte, 16))\n  return new Uint8Array(bytes)\n}\n\nexport const fromUint8Array = (bytes: Uint8Array): string =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '')\n","// @flow\n\nimport { type Hashes } from '../../types/utils.js'\nimport { lazify } from './require.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const hashjs: Hashes<Uint8Array> = (lazify(() =>\n  require('hash.js')\n): any)\n\nexport const digest = (hash: Function) => (data: string) => {\n  const uintArray = toUint8Array(data)\n  const rawRes = hash()\n    .update(uintArray)\n    .digest()\n  const resArray = new Uint8Array(rawRes)\n  return fromUint8Array(resArray)\n}\n\nexport const digestHmac = (hmac: Function, hash: Function) => (\n  data: string,\n  key: string\n) => {\n  const uintKey = toUint8Array(key)\n  const hmacHash = () => hmac(hash, uintKey)\n  return digest(hmacHash)(data)\n}\n\nexport const sha256 = digest(hashjs.sha256)\nexport const sha512 = digest(hashjs.sha512)\nexport const ripemd160 = digest(hashjs.ripemd160)\nexport const sha512Hmac = digestHmac(hashjs.hmac, hashjs.sha512)\n\nexport const hash256 = (data: string) => sha256(sha256(data))\nexport const hash160 = (data: string) => ripemd160(sha256(data))\n","// @flow\n\nimport { type FunctionFormatterOptions } from '../../types/utils.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const formatFunction = (\n  func: Function,\n  opts?: FunctionFormatterOptions = {}\n) => {\n  const { numParams = 1, encoder, results = [], sync } = opts\n  const { input = toUint8Array, output = fromUint8Array } = encoder || {}\n\n  const encode = (i: number, cps = a => a) => {\n    if (!i--) return cps\n    const newCps = (p: any) => {\n      p[i] = input(p[i])\n      return cps(p)\n    }\n    return encode(i, newCps)\n  }\n\n  const paramEncoder = encode(numParams)\n\n  let encodeResult = (res: any) => output(res)\n  if (!results) {\n    encodeResult = (res: any) => res\n  } else if (results.length) {\n    encodeResult = (res: any) => {\n      for (const param of results) {\n        res[param] = output(res[param])\n      }\n      return res\n    }\n  }\n\n  let waitResult = async (res: any) => {\n    res = await res\n    return encodeResult(res)\n  }\n  if (sync) waitResult = (res: any) => encodeResult(res)\n\n  return (...params: any): any => {\n    const result = func(...paramEncoder(params))\n    return waitResult(result)\n  }\n}\n\nexport const formatByteSize = (\n  originalByteSize: number,\n  newByteSize: number,\n  pad: boolean = originalByteSize > newByteSize\n) => (data: Array<number>) => {\n  let acc = 0\n  let bits = 0\n  const ret = []\n  const maxNum = (1 << newByteSize) - 1\n  for (let p = 0; p < data.length; ++p) {\n    const value = data[p]\n    if (value < 0 || value >> originalByteSize !== 0) {\n      throw new Error('Wrong bit value')\n    }\n    acc = (acc << originalByteSize) | value\n    bits += originalByteSize\n    while (bits >= newByteSize) {\n      bits -= newByteSize\n      ret.push((acc >> bits) & maxNum)\n    }\n  }\n  if (pad && bits > 0) {\n    ret.push((acc << (newByteSize - bits)) & maxNum)\n  } else if (\n    bits >= originalByteSize ||\n    (acc << (newByteSize - bits)) & maxNum\n  ) {\n    throw new Error('Wrong bit value')\n  }\n  return ret\n}\n","// @flow\n\nimport { type Secp256k1 } from '../../types/utils.js'\nimport { formatFunction } from './formatter.js'\nimport { lazify } from './require.js'\n\nexport const secp256k1: Secp256k1<Uint8Array> = (lazify(() =>\n  require('secp256k1')\n): any)\n\nconst encoder = {\n  input: a => Buffer.from(a, 'hex'),\n  output: a => a.toString('hex')\n}\n\nexport const publicKeyCreate = formatFunction(secp256k1.publicKeyCreate, {\n  encoder\n})\nexport const signatureNormalize = formatFunction(secp256k1.signatureNormalize, {\n  encoder\n})\nexport const signatureExport = formatFunction(secp256k1.signatureExport, {\n  encoder\n})\nexport const privateKeyTweakAdd = formatFunction(secp256k1.privateKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const publicKeyTweakAdd = formatFunction(secp256k1.publicKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const verify = formatFunction(secp256k1.verify, {\n  encoder,\n  numParams: 3,\n  results: null\n})\nexport const signature = formatFunction(secp256k1.sign, {\n  encoder,\n  numParams: 2,\n  results: ['signature']\n})\n\nexport const sign = (message: string, privateKey: string) =>\n  signature(message, privateKey)\n    .then(({ signature }) => signature)\n    .then(signatureNormalize)\n    .then(signatureExport)\n","// @flow\n\nimport {\n  type DerivedKeyPair,\n  type DerivedMasterKeys,\n  type DerivedPoint,\n  type KeyHmac\n} from '../../types/bip32.js'\nimport { type HexPair } from '../../types/core.js'\nimport { sha512Hmac } from '../utils/hash.js'\nimport * as Secp256k1 from '../utils/secp256k1'\n\nexport const SEED = '426974636f696e2073656564'\nexport const HARDENED = 0x80000000\nexport const MAX_INDEX = 0xffffffff\nexport const TWEAK_OUT_OF_RANGE_ERROR = 'tweak out of range'\n\nconst hmac = (key: string, data: string): KeyHmac => {\n  const hash = sha512Hmac(key, data)\n  const left = hash.slice(0, 64)\n  const right = hash.slice(64, 128)\n  return { left, right }\n}\n\nexport const deriveKeyPoint = async (\n  { privateKey, publicKey }: HexPair = {},\n  entropy: string,\n  index?: number = 0,\n  hardened?: boolean = false\n): Promise<DerivedPoint> => {\n  if (index > MAX_INDEX) throw new Error('Index out of range.')\n  let key = ''\n  if (hardened && index < HARDENED) index += HARDENED\n  if (index >= HARDENED) {\n    if (!privateKey) {\n      throw new Error('Cannot get hardened chainCode without a private key.')\n    }\n    key = `00${privateKey}`\n  } else if (publicKey) {\n    key = publicKey\n  } else if (privateKey) {\n    key = await Secp256k1.publicKeyCreate(privateKey, true)\n  } else {\n    throw new Error('Cannot derive without keys.')\n  }\n  key += index.toString(16).padStart(8, '0')\n  const { left, right } = hmac(key, entropy)\n  return { tweakPoint: left, chainCode: right, childIndex: index }\n}\n\nexport const derivePublic = async (\n  publicKey: string,\n  index: number,\n  entropy: string,\n  hardened: boolean = false\n): Promise<{ publicKey: string } & DerivedKeyPair> => {\n  try {\n    const keyPair = { publicKey }\n    const { tweakPoint, ...rest } = await deriveKeyPoint(\n      keyPair,\n      entropy,\n      index,\n      hardened\n    )\n    const childKey = await Secp256k1.publicKeyTweakAdd(\n      publicKey,\n      tweakPoint,\n      true\n    )\n    return { publicKey: childKey, ...rest }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    return derivePublic(publicKey, index + 1, entropy, hardened)\n  }\n}\n\nexport const derivePrivate = async (\n  privateKey: string,\n  index: number,\n  entropy: string,\n  hardened: boolean = false,\n  publicKey?: string\n): Promise<{ privateKey: string } & DerivedKeyPair> => {\n  try {\n    const keyPair = { privateKey, publicKey }\n    const { tweakPoint, ...rest } = await deriveKeyPoint(\n      keyPair,\n      entropy,\n      index,\n      hardened\n    )\n    const childKey = await Secp256k1.privateKeyTweakAdd(privateKey, tweakPoint)\n    return { privateKey: childKey, ...rest }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    if (index > MAX_INDEX) index -= HARDENED\n    return derivePrivate(privateKey, index + 1, entropy, hardened, publicKey)\n  }\n}\n\nexport const deriveKeyPair = async (\n  parentKeys: DerivedKeyPair,\n  keyIndex?: string = '0'\n): Promise<DerivedKeyPair> => {\n  const hardened = keyIndex[keyIndex.length - 1] === \"'\"\n  const index = hardened ? parseInt(keyIndex.slice(0, -1)) : parseInt(keyIndex)\n  const { chainCode, privateKey } = parentKeys\n  let publicKey = parentKeys.publicKey\n  if ((hardened || index >= HARDENED) && !privateKey) {\n    throw new Error('Cannot derive hardened index without a private key.')\n  }\n  if (privateKey) {\n    const childKey = await derivePrivate(\n      privateKey,\n      index,\n      chainCode,\n      hardened,\n      publicKey\n    )\n    const childPublicKey = await Secp256k1.publicKeyCreate(\n      childKey.privateKey,\n      true\n    )\n    return { ...childKey, publicKey: childPublicKey }\n  }\n  if (!publicKey) {\n    if (!privateKey) throw new Error('Cannot derive without keys.')\n    publicKey = await Secp256k1.publicKeyCreate(privateKey, true)\n  }\n  return derivePublic(publicKey, index, chainCode, hardened)\n}\n\nexport const deriveMasterKeyPair = async (\n  seed: string\n): Promise<DerivedMasterKeys> => {\n  const { left, right } = hmac(seed, SEED)\n  const publicKey = await Secp256k1.publicKeyCreate(left, true)\n  return { privateKey: left, publicKey, chainCode: right, childIndex: 0 }\n}\n","// @flow\n\nimport { Buffer } from 'buffer'\n\nimport basex from 'base-x'\n\nimport {\n  type Alphabet,\n  type BaseCheck,\n  type BaseDecoder,\n  type Bases,\n  type HashFunction\n} from '../../types/utils.js'\nimport { hash256 } from './hash.js'\n\n// The default ALPHABETS, the name of the base codec will be the alphabet's length\nexport const ALPHABETS: Array<Alphabet> = [\n  '01',\n  '01234567',\n  '0123456789a',\n  '0123456789abcdef',\n  '0123456789ABCDEFGHJKMNPQRSTVWXYZ',\n  '0123456789abcdefghijklmnopqrstuvwxyz',\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n]\n\nexport const createCheckSumBase = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseDecoder => ({\n  encode: (hexStr: string): string => {\n    const checksum = (hashFunc || hash256)(hexStr)\n    const checkHex = `${hexStr}${checksum.slice(0, 8)}`\n    return base.encode(checkHex)\n  },\n  decode: (baseString: string): string => {\n    const hexStr = base.decode(baseString)\n    const payload = hexStr.slice(0, -8)\n    const newChecksum = (hashFunc || hash256)(payload)\n    const checksum = hexStr.slice(-8)\n    if (newChecksum.startsWith(checksum)) return payload\n    throw new Error('Invalid checksum')\n  }\n})\n\nexport const createHexEncoder = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseCheck => {\n  const newBase = { ...base }\n  const encode: (buf: Buffer) => string = newBase.encode\n  const decode: (str: string) => Buffer = newBase.decode\n  newBase.encode = a => encode(Buffer.from(a, 'hex'))\n  newBase.decode = a => decode(a).toString('hex')\n  return { ...newBase, check: createCheckSumBase(newBase, hashFunc) }\n}\n\nexport const base: Bases = ALPHABETS.reduce((decoders, alphabet) => {\n  const baseDecoder = createHexEncoder(basex(alphabet))\n  return { ...decoders, [alphabet.length]: baseDecoder }\n}, {})\n","import { base } from '../utils/base.js'\nconst bech32 = base['58'].check\n\nexport const bip32 = {\n  purpose: 32,\n  scriptType: 'P2PKH',\n  xpriv: {\n    stringPrefix: 'xprv',\n    prefix: 0x0488ade4,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'xpub',\n    prefix: 0x0488b21e,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 0x80,\n    decoder: base['58'].check\n  }\n}\n\nexport const bip44 = {\n  purpose: 44,\n  scriptType: 'P2PKH',\n  xpriv: {\n    stringPrefix: 'xprv',\n    prefix: 0x0488ade4,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'xpub',\n    prefix: 0x0488b21e,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 0x80,\n    decoder: base['58'].check\n  }\n}\n\nexport const bip49 = {\n  purpose: 49,\n  scriptType: 'P2WPKH-P2SH',\n  xpriv: {\n    stringPrefix: 'yprv',\n    prefix: 0x049d7878,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'ypub',\n    prefix: 0x049d7cb2,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 0x05,\n    decoder: base['58'].check\n  }\n}\n\nexport const bip84 = {\n  purpose: 84,\n  scriptType: 'P2WPKH',\n  xpriv: {\n    stringPrefix: 'zprv',\n    prefix: 0x04b2430c,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'zpub',\n    prefix: 0x04b24746,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 'bc',\n    decoder: bech32\n  }\n}\n","// @flow\n\nimport { type NetworkInfo } from '../../types/core.js'\nimport { bip32, bip44 } from '../hd/paths.js'\nimport { base } from '../utils/base.js'\nimport { hash256 } from '../utils/hash.js'\n\nexport const main: NetworkInfo = {\n  magic: 0xd9b4bef9,\n  bips: [44, 32],\n  forks: [],\n  keyPrefix: {\n    privkey: 0x80,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 0\n  },\n  addressPrefix: {},\n  legacyAddressPrefix: {},\n  replayProtection: {\n    forkSighash: 0x00,\n    forcedMinVersion: 0,\n    forkId: 0\n  },\n  serializers: {\n    address: base['58'].check,\n    wif: base['58'].check,\n    xkey: base['58'].check,\n    txHash: hash256,\n    sigHash: (str: Buffer) => Buffer.from(hash256(str.toString('hex')), 'hex')\n  },\n  supportedHDPaths: [bip44, bip32],\n}\n","// @flow\n\nexport const main = {\n  bips: [84, 49],\n  forks: ['bitcoincash', 'bitcoingold', 'bitcoindiamond'],\n  addressPrefix: {\n    pubkeyhash: 0x00,\n    scripthash: 0x05,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'bc'\n  }\n}\n\nexport const testnet = {\n  ...main,\n  magic: 0x0709110b,\n  keyPrefix: {\n    privkey: 0xef,\n    xpubkey: 0x043587cf,\n    xprivkey: 0x04358394,\n    xpubkey58: 'tpub',\n    xprivkey58: 'tprv',\n    coinType: 1\n  },\n  addressPrefix: {\n    pubkeyhash: 0x6f,\n    scripthash: 0xc4,\n    witnesspubkeyhash: 0x03,\n    witnessscripthash: 0x28,\n    bech32: 'tb'\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0x0709110b,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0x80,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 156\n  },\n  addressPrefix: {\n    pubkeyhash: 0x26,\n    scripthash: 0x17,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'btg'\n  },\n  replayProtection: {\n    forkSighash: 64,\n    forcedMinVersion: 1,\n    forkId: 79\n  }\n}\n\nexport const testnet = {\n  ...main,\n  keyPrefix: {\n    privkey: 0xef,\n    xpubkey: 0x043587cf,\n    xprivkey: 0x04358394,\n    xpubkey58: 'tpub',\n    xprivkey58: 'tprv',\n    coinType: 156\n  },\n  addressPrefix: {\n    pubkeyhash: 0x6f,\n    scripthash: 0xc4,\n    witnesspubkeyhash: 0x03,\n    witnessscripthash: 0x28,\n    bech32: 'tb'\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  keyPrefix: {\n    coinType: 145\n  },\n  addressPrefix: {\n    cashAddress: 'bitcoincash'\n  },\n  legacyAddressPrefix: {\n    pubkeyhash: 0x00,\n    scripthash: 0x05\n  },\n  replayProtection: {\n    forkSighash: 0x40,\n    forcedMinVersion: 1\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  keyPrefix: {\n    privkey: 0xcc,\n    xpubkey: 0x02fe52cc,\n    xprivkey: 0x02fe52f8,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 5\n  },\n  addressPrefix: {\n    pubkeyhash: 0x4c,\n    scripthash: 0x10\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0x9e,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 20\n  },\n  addressPrefix: {\n    pubkeyhash: 0x1e,\n    scripthash: 0x3f,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'dgb'\n  },\n  legacyAddressPrefix: {\n    scripthash: 0x05\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0x00000000,\n  keyPrefix: {\n    privkey: 0x9e,\n    xpubkey: 0x02facafd,\n    xprivkey: 0x02fac398,\n    xprivkey58: 'xprv',\n    xpubkey58: 'xpub',\n    coinType: 3\n  },\n  addressPrefix: {\n    pubkeyhash: 0x1e,\n    scripthash: 0x16\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0xb0,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 2\n  },\n  addressPrefix: {\n    pubkeyhash: 0x5c,\n    scripthash: 0x0a,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'ebst'\n  },\n  legacyAddressPrefix: {\n    scripthash: 0x05\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0x8e,\n    xpubkey: 0x0488bc26,\n    xprivkey: 0x0488daee,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 8\n  },\n  addressPrefix: {\n    pubkeyhash: 0x0e,\n    scripthash: 0x05,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'fc'\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0xb0,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 2\n  },\n  addressPrefix: {\n    pubkeyhash: 0x30,\n    scripthash: 0x32,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'lc'\n  },\n  legacyAddressPrefix: {\n    scripthash: 0x05\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xf1cfa6d3,\n  keyPrefix: {\n    privkey: 0x80,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 2301\n  },\n  addressPrefix: {\n    pubkeyhash: 0x3a,\n    scripthash: 0x32\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xfcd9b7dd,\n  bips: [84, 49, 44, 32],\n  keyPrefix: {\n    privkey: 0x9b,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 202\n  },\n  addressPrefix: {\n    pubkeyhash: 0x1b,\n    scripthash: 0x44,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'uf'\n  },\n  legacyAddressPrefix: {\n    scripthash: 0x05\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  bips: [84, 49, 44, 32],\n  forks: [],\n  keyPrefix: {\n    privkey: 0x80,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 28\n  },\n  addressPrefix: {\n    pubkeyhash: 0x47,\n    scripthash: 0x05,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'vtc'\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  keyPrefix: {\n    privkey: 0xd2,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 136\n  },\n  addressPrefix: {\n    pubkeyhash: 0x52,\n    scripthash: 0x7\n  }\n}\n","// @flow\n\nimport {\n  type HDPathSetting,\n  type NetworkInfo,\n  type NetworkInfos,\n  type NewNetworks,\n  type PartialInfo\n} from '../../types/core.js'\nimport { main } from '../networks/baseInfo.js'\nimport * as Networks from '../networks/networks.js'\n\nexport const createInfo = (info: PartialInfo): NetworkInfo => {\n  const newNetwork: NetworkInfo = ({}: any)\n\n  for (const set in main) {\n    const mainSet = main[set]\n    const infoSet = info[set]\n\n    if (Array.isArray(mainSet)) {\n      newNetwork[set] = (infoSet || [])\n        .concat(mainSet)\n        .filter((v, i, s) => s.indexOf(v) === i)\n    } else if (typeof mainSet === 'object') {\n      newNetwork[set] = { ...mainSet, ...(infoSet || {}) }\n    } else if (typeof infoSet !== 'undefined') {\n      newNetwork[set] = infoSet\n    } else newNetwork[set] = mainSet\n  }\n\n  return newNetwork\n}\n\nexport const createNetworks = (newInfos: NewNetworks) => {\n  const networks = { main }\n  for (const network in newInfos) {\n    const infos = newInfos[network]\n    for (const networkType in infos) {\n      const partialInfo = infos[networkType]\n      let name = network\n      if (networkType !== 'main') name += networkType.toLowerCase()\n      networks[name] = createInfo(partialInfo)\n    }\n  }\n  return networks\n}\n\nexport const networks: NetworkInfos = createNetworks(Networks)\n\nexport const addNetworks = (newInfos: NewNetworks) =>\n  Object.assign(networks, createNetworks(newInfos))\n\nexport const getExtendedKeyVersion = (\n  hdKey: { privateKey?: any, publicKey?: any },\n  network: string = 'main'\n) => {\n  const { keyPrefix = {} } = networks[network]\n  if (hdKey.privateKey) return keyPrefix.xprivkey\n  if (hdKey.publicKey) return keyPrefix.xpubkey\n  throw new Error(\"Can't get version without a key\")\n}\n\nexport const getNetworkForVersion = (version: number): string => {\n  for (const network in networks) {\n    try {\n      checkVersion(version, network)\n      return network\n    } catch (e) {}\n  }\n  throw new Error('Unknown network version')\n}\n\nexport const checkVersion = (version: number, network: string = 'main') => {\n  const { keyPrefix = {} } = networks[network]\n  if (version) {\n    for (const prefix in keyPrefix) {\n      if (keyPrefix[prefix] === version) return version\n    }\n    throw new Error('Wrong key prefix for network')\n  }\n}\n\nexport const getPrefixType = (prefixNum: number, network: string = 'main') => {\n  const getPrefix = addressPrefix => {\n    for (const prefixType in addressPrefix) {\n      if (addressPrefix[prefixType] === prefixNum) {\n        return prefixType\n      }\n    }\n    return null\n  }\n  const { addressPrefix, legacyAddressPrefix } = networks[network]\n  const type = getPrefix(addressPrefix) || getPrefix(legacyAddressPrefix)\n\n  if (!type) {\n    throw new Error(`Unknown prefix ${prefixNum} for network ${network}`)\n  }\n  return type\n}\n\nexport const getPrefixNum = (type: string, network: string = 'main') => {\n  const { addressPrefix, legacyAddressPrefix } = networks[network]\n  const cashAddress = addressPrefix.cashAddress\n  return !cashAddress ? addressPrefix[type] : legacyAddressPrefix[type]\n}\n\nexport const getHDSetting = (network: string, value: any): HDPathSetting => {\n  const { supportedHDPaths } = networks[network]\n  console.log('getHDSetting network:', network,' supportedHDPaths:',supportedHDPaths)\n  for (const hdSetting of supportedHDPaths) {\n    for (const key in hdSetting) {\n      console.log('getHDSetting purpose:', hdSetting.purpose,' key:', key)\n      const setting = hdSetting[key]\n      // checking if address that has legacy\n      if (Array.isArray(setting)) {\n        return setting.find(\n          ({ prefix, stringPrefix }) =>\n            prefix === value || stringPrefix === value\n        )\n      }\n\n      // checking if xpub, xpriv, or address\n      if (\n        typeof setting === 'object' &&\n        (setting.prefix === value || setting.stringPrefix === value)\n      ) {\n        return hdSetting\n      }\n\n      // if scriptType or purpose\n      if (setting === value) return hdSetting\n    }\n  }\n  throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n\nexport const getScriptType = (prefixNum: number, network: string = 'main') => {\n  const setting = getHDSetting(network, prefixNum)\n  if (!setting) {\n    throw new Error(\n      `Unknown address prefix ${prefixNum} for network ${network}`\n    )\n  }\n  return setting.scriptType\n}\n","// @flow\n\nimport { type HexPair } from '../../types/core.js'\nimport {\n  sign as Sign,\n  verify as Verify,\n  publicKeyCreate\n} from '../utils/secp256k1.js'\nimport { networks } from './networkInfo.js'\n\nexport const fromHex = (keyHex: string): HexPair => {\n  if (keyHex.length !== 66 && keyHex.length !== 132) {\n    throw new Error('Wrong key pair length')\n  }\n  const firstHeaderByte = parseInt(keyHex.slice(0, 2), 16)\n  try {\n    if (firstHeaderByte !== 0) throw new Error('Bad Private key prefix')\n    const keyPair: HexPair = { privateKey: keyHex.slice(2, 66) }\n    if (keyHex.length === 132) {\n      const secondHeaderByte = parseInt(keyHex.slice(66, 68), 16)\n      if (secondHeaderByte !== 2 && secondHeaderByte !== 3) {\n        throw new Error('Bad Public key prefix')\n      }\n      const pub = { publicKey: keyHex.slice(68, 132) }\n      Object.assign(keyPair, pub)\n    }\n    return keyPair\n  } catch (e) {\n    if (firstHeaderByte !== 2 && firstHeaderByte !== 3) {\n      throw new Error('Bad Public key prefix')\n    }\n    return { publicKey: keyHex.slice(0, 66) }\n  }\n}\n\nexport const privateFromWIF = (\n  wif: string,\n  network: string = 'main'\n): { privateKey: string, compress: boolean } => {\n  const { serializers, keyPrefix } = networks[network]\n  const keyHex = serializers.wif.decode(wif)\n  if (parseInt(keyHex.slice(0, 2), 16) !== keyPrefix.privkey) {\n    throw new Error(\n      `Unknown key prefix ${keyHex.slice(0, 2)} for network ${network}`\n    )\n  }\n  const privateKey = keyHex.slice(2, 66)\n  let compress = false\n  if (keyHex.length >= 68) {\n    if (parseInt(keyHex.slice(66, 68), 16) !== 1) {\n      throw new Error(`Unknown compression flag ${keyHex.slice(66, 68)}`)\n    }\n    compress = true\n  }\n  return { privateKey, compress }\n}\n\nexport const fromWif = async (\n  wif: string,\n  network: string = 'main'\n): Promise<HexPair> => {\n  const { privateKey, compress } = privateFromWIF(wif, network)\n  const publicKey = await publicKeyCreate(privateKey, compress)\n  return { privateKey, publicKey }\n}\n\nexport const toHex = (keyPair: HexPair): string => {\n  const publicKey = keyPair.publicKey || ''\n  const privateKey = keyPair.privateKey ? `00${keyPair.privateKey}` : ''\n  return `${privateKey}${publicKey}`\n}\n\nexport const sign = async (keyPair: HexPair, msg: string): Promise<string> => {\n  if (!keyPair.privateKey) throw new Error('Cannot sign without private key.')\n  return Sign(msg, keyPair.privateKey)\n}\n\nexport const verify = async (\n  keyPair: HexPair,\n  msg: string,\n  signature: string\n): Promise<Boolean> => {\n  let publicKey = keyPair.publicKey\n  if (!publicKey && keyPair.privateKey) {\n    publicKey = await publicKeyCreate(keyPair.privateKey, true)\n  } else {\n    throw new Error('Cannot verify without keys.')\n  }\n  const verified = await Verify(msg, signature, publicKey)\n  return verified\n}\n","// @flow\n\nimport {\n  type DerivedKey,\n  type ExtendedKeyPair,\n  type ExtendedMasterKeys\n} from '../../types/bip32.js'\nimport { type HexPair } from '../../types/core.js'\nimport * as KeyPair from '../core/keyPair.js'\nimport {\n  checkVersion,\n  getExtendedKeyVersion,\n  getNetworkForVersion,\n  networks\n} from '../core/networkInfo.js'\nimport { hash160 } from '../utils/hash.js'\nimport { publicKeyCreate } from '../utils/secp256k1.js'\nimport { deriveKeyPair, deriveMasterKeyPair } from './derive.js'\n\nconst MAX_DEPTH = 0xff\n\nexport const fromSeed = async (\n  seed: string,\n  network?: string\n): Promise<ExtendedMasterKeys> => {\n  const masterKeyPair = await deriveMasterKeyPair(seed)\n  return {\n    ...masterKeyPair,\n    parentFingerPrint: 0,\n    version: getExtendedKeyVersion(masterKeyPair, network),\n    depth: 0\n  }\n}\n\nexport const fromIndex = async (\n  parentKeys: ExtendedKeyPair,\n  index: string,\n  network?: string\n): Promise<ExtendedKeyPair> => {\n  if (parentKeys.depth >= MAX_DEPTH) throw new Error('Depth too high.')\n\n  const derivedKey: DerivedKey<string> = await deriveKeyPair(parentKeys, index)\n  if (!parentKeys.publicKey) {\n    if (!parentKeys.privateKey) {\n      throw new Error('Cannot create parentFingerPrint without keys')\n    }\n    parentKeys.publicKey = await publicKeyCreate(parentKeys.privateKey, true)\n  }\n  const parentFingerPrint = await hash160(parentKeys.publicKey)\n  network = network || getNetworkForVersion(parentKeys.version)\n\n  return {\n    ...derivedKey,\n    parentFingerPrint: parseInt(parentFingerPrint.slice(0, 8), 16),\n    version: getExtendedKeyVersion(derivedKey, network),\n    depth: parentKeys.depth + 1\n  }\n}\n\nexport const fromHex = (keyHex: string, network?: string): ExtendedKeyPair => {\n  const version = parseInt(keyHex.slice(0, 8), 16)\n  if (network) checkVersion(version, network)\n  return {\n    version,\n    depth: parseInt(keyHex.slice(9, 10), 16),\n    parentFingerPrint: parseInt(keyHex.slice(10, 18), 16),\n    childIndex: parseInt(keyHex.slice(18, 26), 16),\n    chainCode: keyHex.slice(26, 90),\n    ...KeyPair.fromHex(keyHex.slice(90, 156))\n  }\n}\n\nexport const fromString = (\n  hdKey: string,\n  network: string = 'main'\n): ExtendedKeyPair => {\n  const keyHex = networks[network].serializers['xkey'].decode(hdKey)\n  return fromHex(keyHex, network)\n}\n\nexport const toHex = (\n  hdKey: ExtendedKeyPair,\n  network?: string,\n  forcePublic: boolean = false\n): string => {\n  if (network) checkVersion(hdKey.version, network)\n  const { privateKey, publicKey } = hdKey\n  const keyPair: HexPair = { publicKey }\n  if (!forcePublic) keyPair.privateKey = privateKey\n  return (\n    getExtendedKeyVersion(keyPair, network)\n      .toString(16)\n      .padStart(8, '0') +\n    hdKey.depth.toString(16).padStart(2, '0') +\n    hdKey.parentFingerPrint.toString(16).padStart(8, '0') +\n    hdKey.childIndex.toString(16).padStart(8, '0') +\n    hdKey.chainCode +\n    KeyPair.toHex(keyPair).slice(0, 66)\n  )\n}\n\nexport const toString = (\n  hdKey: ExtendedKeyPair,\n  network: string = 'main',\n  forcePublic: boolean = false\n): string => {\n  const keyHex = toHex(hdKey, network, forcePublic)\n  return networks[network].serializers['xkey'].encode(keyHex)\n}\n","// @flow\n\nimport {\n  type ExtendedKeyPair,\n  type HDKeyPair,\n  type HDPath,\n  type Index,\n  type Path\n} from '../../types/bip32.js'\nimport { HARDENED } from '../bip32/derive.js'\nimport * as ExtendedKey from '../bip32/extendedKey.js'\n\nexport const fromSeed = async (\n  seed: string,\n  network?: string\n): Promise<HDKeyPair> => {\n  const masterKeyPair = await ExtendedKey.fromSeed(seed, network)\n  return {\n    ...masterKeyPair,\n    hardened: false,\n    path: ['m'],\n    children: {}\n  }\n}\n\nexport const fromExtendedKey = (\n  keyPair: ExtendedKeyPair,\n  hdPath?: HDPath\n): HDKeyPair => {\n  const hardened = keyPair.childIndex >= HARDENED\n  const { path: parentPath = [] } = hdPath || {}\n  let indexStr = 'm'\n\n  const path = [...parentPath]\n  if (keyPair.depth) {\n    const index = keyPair.childIndex\n    const adjIndex = hardened ? index - HARDENED : index\n    indexStr = `${adjIndex}${hardened ? \"'\" : ''}`\n  }\n\n  if (path[0] !== 'm') path.unshift('m')\n  if (path.length === keyPair.depth) {\n    path.push(indexStr)\n  }\n  if (path.length !== keyPair.depth + 1) {\n    throw new Error('Wrong path depth for key')\n  }\n  if (path[path.length - 1] !== indexStr) {\n    throw new Error('Wrong index for key')\n  }\n\n  const hdKey: HDKeyPair = { ...keyPair, path, hardened, children: {} }\n  const { scriptType, chain } = hdPath || {}\n  if (scriptType) hdKey.scriptType = scriptType\n  if (chain) hdKey.chain = chain\n\n  return hdKey\n}\n\nexport const fromIndex = async (\n  parentKey: HDKeyPair,\n  index: Index,\n  network?: string\n): Promise<HDKeyPair> => {\n  // Derive an ExtendedKey key from the current parentKey and index\n  const childKey = await ExtendedKey.fromIndex(parentKey, index, network)\n  const childHDPath = {\n    ...parentKey,\n    path: [...parentKey.path, index]\n  }\n  // Create an HD key from the ExtendedKey\n  return fromExtendedKey(childKey, childHDPath)\n}\n\nexport const fromPath = async (\n  parentKeys: HDKeyPair,\n  hdPath: HDPath,\n  network?: string\n): Promise<HDKeyPair> => {\n  // Get the deepest possible parent for this key\n  const parent = getParentKey(parentKeys, hdPath.path)\n  // Set the starting derivation key to be the parent key from before\n  let childHDKey = parent.key\n\n  while (parent.path.length) {\n    // Get next child key\n    const index = parent.path.shift()\n    const childKey = await fromIndex(childHDKey, index, network)\n\n    // Add the new key to the current parent key and change the pointer\n    childHDKey.children[index] = childKey\n    childHDKey = childKey\n  }\n\n  // Set the scriptType and chain for the deepest path\n  childHDKey.scriptType = hdPath.scriptType || 'P2PKH'\n  childHDKey.chain = hdPath.chain || 'external'\n\n  return parentKeys\n}\n\nexport const fromPaths = async (\n  parentKey: HDKeyPair | string,\n  hdPaths: Array<HDPath>,\n  network?: string\n): Promise<HDKeyPair> => {\n  // If we get a seed create a master hd key from it\n  if (typeof parentKey === 'string') {\n    parentKey = await fromSeed(parentKey, network)\n  }\n\n  // Create All missing key paths\n  for (const hdPath of hdPaths) {\n    parentKey = await fromPath(parentKey, hdPath)\n  }\n\n  return parentKey\n}\n\nexport const fromString = (\n  extendedKey: string,\n  hdPath?: HDPath,\n  network?: string\n): HDKeyPair => {\n  const keyPair: ExtendedKeyPair = ExtendedKey.fromString(extendedKey, network)\n  return fromExtendedKey(keyPair, hdPath)\n}\n\nexport const getParentKey = (\n  parentKey: HDKeyPair,\n  path: Path\n): { key: HDKeyPair, path: Path } => {\n  const tempPath = [...path]\n  tempPath.shift()\n  while (parentKey.children[tempPath[0]] && tempPath.length) {\n    parentKey = parentKey.children[tempPath.shift()]\n  }\n  return { key: parentKey, path: tempPath }\n}\n\nexport const getKey = (parentKey: HDKeyPair, path: Path): HDKeyPair | null => {\n  const tempPath = [...path]\n  tempPath.shift()\n  while (parentKey && tempPath.length) {\n    parentKey = parentKey.children[tempPath.shift()]\n  }\n  return parentKey\n}\n\nexport const createPath = (\n  account: number = 0,\n  parent: HDPath = { path: ['m'] },\n  hardened?: boolean\n): HDPath => {\n  const { chain = 'external', scriptType = 'P2PKH' } = parent\n\n  const accountStr = `${account}${hardened ? \"'\" : ''}`\n  const index = chain === 'external' ? '0' : '1'\n  const path = [...parent.path, accountStr, index]\n\n  return { path, chain, scriptType }\n}\n\nexport const toString = ExtendedKey.toString\n","// @flow\n\nimport { type HDPath, type ScriptType } from '../../types/bip32.js'\nimport { createPath } from '../bip32/hdKey.js'\nimport { networks } from '../core/networkInfo.js'\n\nexport const createPaths = (\n  purpose?: number | Array<number>,\n  coinType: number = 0,\n  account: number = 0,\n  network: string = 'main'\n): Array<HDPath> => {\n  if (!purpose) purpose = networks[network].bips\n\n  if (Array.isArray(purpose)) {\n    const paths = []\n    for (const p of purpose) {\n      paths.push(...createPaths(p, coinType, account))\n    }\n    return paths\n  }\n\n  if (purpose === 32) return [createPath(account)]\n\n  const scriptType = ScriptTypes[`${purpose}`]\n  if (!scriptType) throw new Error(`Unknown derivation purpose ${purpose}`)\n\n  const path = ['m', `${purpose}'`, `${coinType || 0}'`]\n  const hdPath = { path, scriptType }\n  const hdPathInt = { ...hdPath, chain: 'internal' }\n\n  return [\n    createPath(account, hdPath, true),\n    createPath(account, hdPathInt, true)\n  ]\n}\n\nexport const ScriptTypes: { [purpose: string]: ScriptType } = {\n  '44': 'P2PKH',\n  '49': 'P2WPKH-P2SH',\n  '84': 'P2WPKH'\n}\n","// @flow\n\nimport {\n  type LoadFunc,\n  type PersistStatus,\n  type SaveFunc\n} from '../../types/utils.js'\n\nexport const persist = (\n  save: SaveFunc,\n  load: LoadFunc | Object,\n  delay: number = 100,\n  cache: Object = {},\n  data: Object = cache,\n  status: PersistStatus = {}\n) => {\n  return new Proxy((Object.assign(() => save(cache), data): any), {\n    apply: async (target, thisArgs, args) => {\n      const updateCache = newCache => {\n        cache = newCache\n        data = newCache\n        for (const key in target) {\n          if (data[key] === undefined) {\n            delete target[key]\n          }\n        }\n        Object.assign(target, newCache)\n      }\n\n      // Try to load the cache from disk in case it never happend before\n      if (!status.loaded) {\n        const rawData = typeof load === 'function' ? await load() : load\n        updateCache({ ...rawData, ...cache })\n        status.loaded = true\n      }\n\n      // Load/Stop the cache based on the argument\n      if (args && args.length) {\n        if (typeof args[0] === 'object') updateCache({ ...args[0] })\n        else if (args[0] === 'stop') {\n          if (status.saving) {\n            clearTimeout(status.saving)\n            status.saving = null\n          }\n          status.changed = false\n          await Reflect.apply(target, target, [])\n          return\n        }\n      }\n\n      // Stop looping in case nothing changed or we already have a save timer\n      if (!status.changed || status.saving) return\n\n      // If something changed, set flags and call save\n      status.changed = false\n\n      // Set save loop after the desired delay\n      status.saving = setTimeout(() => {\n        if (status.saving) {\n          clearTimeout(status.saving)\n          status.saving = null\n        }\n        Reflect.apply(thisArgs, thisArgs, [])\n      }, delay)\n\n      await Reflect.apply(target, target, [])\n    },\n    set: (target: any, prop: string, value: any, receiver: any) => {\n      // Only update/save if the param actually changed\n      if (data[prop] !== value) {\n        Reflect.set(data, prop, value)\n        Reflect.set(target, prop, value)\n        status.changed = true\n        if (!status.saving) Reflect.apply(receiver, receiver, [])\n      }\n      return true\n    },\n    get: (target: any, prop: string) => {\n      if (prop === 'status') return status\n      // Get the value\n      const value = Reflect.get(data, prop)\n      // Return any non object values\n      if (typeof value !== 'object') return value\n      // Create a proxy from the child to trimgger saves on the top parent\n      return persist(save, load, delay, cache, value, status)\n    }\n  })\n}\n","// @flow\n\nimport * as Derive from './src/bip32/derive.js'\nimport * as ExtendedKey from './src/bip32/extendedKey.js'\nimport * as HDKey from './src/bip32/hdKey.js'\nimport * as Paths from './src/bip44/paths.js'\nimport * as KeyPair from './src/core/keyPair.js'\nimport * as NetworkInfo from './src/core/networkInfo.js'\nimport * as Base from './src/utils/base.js'\nimport * as Formatter from './src/utils/formatter.js'\nimport * as Hash from './src/utils/hash.js'\nimport * as Persister from './src/utils/persister.js'\nimport * as Require from './src/utils/require.js'\nimport * as Secp256k1 from './src/utils/secp256k1.js'\nimport * as UintArray from './src/utils/uintArray.js'\n\nconst Networks = NetworkInfo.networks\n\nexport const Core = { KeyPair, Networks, NetworkInfo }\nexport const HD = { Derive, ExtendedKey, HDKey, Paths }\nexport const Utils = {\n  Base,\n  Formatter,\n  Hash,\n  Require,\n  Secp256k1,\n  Persister,\n  UintArray\n}\n\nexport * from './types/types.js'\n"],"names":["lazyHandler","activeModule","get","target","prop","receiver","loadedModule","inject","Proxy","args","lazify","unsafeModule","parentModule","injectedModule","loadUnsafe","defaultModule","Object","assign","parentProxy","isHexString","hex","test","toUint8Array","hexString","Error","length","match","bytes","map","byte","parseInt","Uint8Array","fromUint8Array","reduce","str","toString","padStart","hashjs","require","digest","hash","data","uintArray","rawRes","update","resArray","digestHmac","hmac","key","uintKey","hmacHash","sha256","sha512","ripemd160","sha512Hmac","hash256","hash160","formatFunction","func","opts","numParams","encoder","results","sync","input","output","encode","i","cps","a","newCps","p","paramEncoder","encodeResult","res","param","waitResult","params","result","formatByteSize","originalByteSize","newByteSize","pad","acc","bits","ret","maxNum","value","push","secp256k1","Buffer","from","publicKeyCreate","signatureNormalize","signatureExport","privateKeyTweakAdd","publicKeyTweakAdd","verify","signature","sign","message","privateKey","then","SEED","HARDENED","MAX_INDEX","TWEAK_OUT_OF_RANGE_ERROR","left","slice","right","deriveKeyPoint","publicKey","entropy","index","hardened","Secp256k1","tweakPoint","chainCode","childIndex","derivePublic","keyPair","rest","childKey","e","includes","derivePrivate","deriveKeyPair","parentKeys","keyIndex","childPublicKey","deriveMasterKeyPair","seed","ALPHABETS","createCheckSumBase","base","hashFunc","hexStr","checksum","checkHex","decode","baseString","payload","newChecksum","startsWith","createHexEncoder","newBase","check","decoders","alphabet","baseDecoder","basex","bech32","bip32","purpose","scriptType","xpriv","stringPrefix","prefix","decoder","xpub","address","bip44","bip49","bip84","main","magic","bips","forks","keyPrefix","privkey","xpubkey","xprivkey","xpubkey58","xprivkey58","coinType","addressPrefix","legacyAddressPrefix","replayProtection","forkSighash","forcedMinVersion","forkId","serializers","wif","xkey","txHash","sigHash","supportedHDPaths","pubkeyhash","scripthash","witnesspubkeyhash","witnessscripthash","testnet","cashAddress","createInfo","info","newNetwork","set","mainSet","infoSet","Array","isArray","concat","filter","v","s","indexOf","createNetworks","newInfos","networks","network","infos","networkType","partialInfo","name","toLowerCase","Networks","addNetworks","getExtendedKeyVersion","hdKey","getNetworkForVersion","version","checkVersion","getPrefixType","prefixNum","getPrefix","prefixType","type","getPrefixNum","getHDSetting","console","log","hdSetting","setting","find","getScriptType","fromHex","keyHex","firstHeaderByte","secondHeaderByte","pub","privateFromWIF","compress","fromWif","toHex","msg","Sign","verified","Verify","MAX_DEPTH","fromSeed","masterKeyPair","parentFingerPrint","depth","fromIndex","derivedKey","KeyPair","fromString","forcePublic","ExtendedKey","path","children","fromExtendedKey","hdPath","parentPath","indexStr","adjIndex","unshift","chain","parentKey","childHDPath","fromPath","parent","getParentKey","childHDKey","shift","fromPaths","hdPaths","extendedKey","tempPath","getKey","createPath","account","accountStr","createPaths","paths","ScriptTypes","hdPathInt","persist","save","load","delay","cache","status","apply","thisArgs","updateCache","newCache","undefined","loaded","rawData","saving","clearTimeout","changed","Reflect","setTimeout","NetworkInfo","Core","HD","Derive","HDKey","Paths","Utils","Base","Formatter","Hash","Require","Persister","UintArray"],"mappings":"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"}