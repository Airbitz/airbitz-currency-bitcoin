{
  "stats": {
    "suites": 11,
    "tests": 270,
    "passes": 270,
    "pending": 0,
    "failures": 0,
    "start": "2020-03-03T20:56:41.991Z",
    "end": "2020-03-03T20:56:43.768Z",
    "duration": 1777,
    "testsRegistered": 270,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "fbbc3c48-cce1-4d30-8228-7f35621175e6",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "72257f95-7a60-4a38-8025-31a097578e9e",
        "title": "Testing Key derivation",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Deriving private key without public key e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35 for index 0",
            "fullTitle": "Testing Key derivation Deriving private key without public key e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35 for index 0",
            "timedOut": false,
            "duration": 59,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[47]++;const privateKey=(cov_2ajjpr0ijx.s[224]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[225]++,test[1]);const index=(cov_2ajjpr0ijx.s[226]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[227]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[228]++,{privateKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[229]++,await derivePrivate(privateKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[230]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "c8b24f48-697c-4d05-9766-0fa4fa4380e1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving private key without public key 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368 for index 2",
            "fullTitle": "Testing Key derivation Deriving private key without public key 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368 for index 2",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[47]++;const privateKey=(cov_2ajjpr0ijx.s[224]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[225]++,test[1]);const index=(cov_2ajjpr0ijx.s[226]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[227]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[228]++,{privateKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[229]++,await derivePrivate(privateKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[230]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "99931fef-bb3f-47de-a4ff-c7e9c085e66a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving private key without public key abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e for index 2147483647",
            "fullTitle": "Testing Key derivation Deriving private key without public key abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e for index 2147483647",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[47]++;const privateKey=(cov_2ajjpr0ijx.s[224]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[225]++,test[1]);const index=(cov_2ajjpr0ijx.s[226]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[227]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[228]++,{privateKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[229]++,await derivePrivate(privateKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[230]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "37cf192b-e001-4a68-bbc4-018cf6946604",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving private key without public key 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7 for index 2147483646",
            "fullTitle": "Testing Key derivation Deriving private key without public key 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7 for index 2147483646",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[47]++;const privateKey=(cov_2ajjpr0ijx.s[224]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[225]++,test[1]);const index=(cov_2ajjpr0ijx.s[226]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[227]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[228]++,{privateKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[229]++,await derivePrivate(privateKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[230]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "aefd73f4-d870-4cfe-bc09-702e84c100fe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving private key without public key edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea for index 1",
            "fullTitle": "Testing Key derivation Deriving private key without public key edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea for index 1",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[47]++;const privateKey=(cov_2ajjpr0ijx.s[224]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[225]++,test[1]);const index=(cov_2ajjpr0ijx.s[226]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[227]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[228]++,{privateKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[229]++,await derivePrivate(privateKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[230]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "bb639fd9-da58-4270-b295-e74ec191febe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving private key without public key cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca for index 2",
            "fullTitle": "Testing Key derivation Deriving private key without public key cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca for index 2",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[47]++;const privateKey=(cov_2ajjpr0ijx.s[224]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[225]++,test[1]);const index=(cov_2ajjpr0ijx.s[226]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[227]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[228]++,{privateKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[229]++,await derivePrivate(privateKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[230]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "4b6e7f42-dd08-41c6-813f-5031d47434c0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving private key with public key 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e for index 0",
            "fullTitle": "Testing Key derivation Deriving private key with public key 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e for index 0",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[49]++;const privateKey=(cov_2ajjpr0ijx.s[233]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[234]++,test[1]);const index=(cov_2ajjpr0ijx.s[235]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[236]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[237]++,{privateKey:test[4],chainCode:test[5],childIndex:test[6]});const publicKey=(cov_2ajjpr0ijx.s[238]++,test[7]);const childKey=(cov_2ajjpr0ijx.s[239]++,await derivePrivate(privateKey,index,chainCode,hardened,publicKey));cov_2ajjpr0ijx.s[240]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b80003f2-636e-4ef3-b405-48f6131cd17e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving private key with public key 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93 for index 1",
            "fullTitle": "Testing Key derivation Deriving private key with public key 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93 for index 1",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[49]++;const privateKey=(cov_2ajjpr0ijx.s[233]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[234]++,test[1]);const index=(cov_2ajjpr0ijx.s[235]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[236]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[237]++,{privateKey:test[4],chainCode:test[5],childIndex:test[6]});const publicKey=(cov_2ajjpr0ijx.s[238]++,test[7]);const childKey=(cov_2ajjpr0ijx.s[239]++,await derivePrivate(privateKey,index,chainCode,hardened,publicKey));cov_2ajjpr0ijx.s[240]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "c3eb21fd-1c03-4bde-b2e9-41518ca520e2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving private key with public key f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d for index 2",
            "fullTitle": "Testing Key derivation Deriving private key with public key f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d for index 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[49]++;const privateKey=(cov_2ajjpr0ijx.s[233]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[234]++,test[1]);const index=(cov_2ajjpr0ijx.s[235]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[236]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[237]++,{privateKey:test[4],chainCode:test[5],childIndex:test[6]});const publicKey=(cov_2ajjpr0ijx.s[238]++,test[7]);const childKey=(cov_2ajjpr0ijx.s[239]++,await derivePrivate(privateKey,index,chainCode,hardened,publicKey));cov_2ajjpr0ijx.s[240]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "62de0a4e-2b3e-45ac-a39f-0d9cab9c22bb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving public key 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56 for index 1",
            "fullTitle": "Testing Key derivation Deriving public key 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56 for index 1",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[51]++;const publicKey=(cov_2ajjpr0ijx.s[243]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[244]++,test[1]);const index=(cov_2ajjpr0ijx.s[245]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[246]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[247]++,{publicKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[248]++,await derivePublic(publicKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[249]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "e0b61a66-10c0-4572-846a-b54b9a6ba7a1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving public key 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2 for index 2",
            "fullTitle": "Testing Key derivation Deriving public key 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2 for index 2",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[51]++;const publicKey=(cov_2ajjpr0ijx.s[243]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[244]++,test[1]);const index=(cov_2ajjpr0ijx.s[245]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[246]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[247]++,{publicKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[248]++,await derivePublic(publicKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[249]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "9a532d57-38c8-49ec-bf1d-c49d095b908e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving public key 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29 for index 1000000000",
            "fullTitle": "Testing Key derivation Deriving public key 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29 for index 1000000000",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[51]++;const publicKey=(cov_2ajjpr0ijx.s[243]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[244]++,test[1]);const index=(cov_2ajjpr0ijx.s[245]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[246]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[247]++,{publicKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[248]++,await derivePublic(publicKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[249]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "f6e2f175-3db6-4870-b81c-dbb62054eb82",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving public key 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7 for index 0",
            "fullTitle": "Testing Key derivation Deriving public key 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7 for index 0",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[51]++;const publicKey=(cov_2ajjpr0ijx.s[243]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[244]++,test[1]);const index=(cov_2ajjpr0ijx.s[245]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[246]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[247]++,{publicKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[248]++,await derivePublic(publicKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[249]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "07d8b1ce-d83d-49b1-8d11-f4b7b1a1674b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving public key 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b for index 1",
            "fullTitle": "Testing Key derivation Deriving public key 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b for index 1",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[51]++;const publicKey=(cov_2ajjpr0ijx.s[243]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[244]++,test[1]);const index=(cov_2ajjpr0ijx.s[245]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[246]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[247]++,{publicKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[248]++,await derivePublic(publicKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[249]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b65e3f85-0db5-4ab3-a596-0f67b974e0e0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving public key 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0 for index 2",
            "fullTitle": "Testing Key derivation Deriving public key 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0 for index 2",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[51]++;const publicKey=(cov_2ajjpr0ijx.s[243]++,test[0]);const chainCode=(cov_2ajjpr0ijx.s[244]++,test[1]);const index=(cov_2ajjpr0ijx.s[245]++,test[2]);const hardened=(cov_2ajjpr0ijx.s[246]++,test[3]);const expectedChildKey=(cov_2ajjpr0ijx.s[247]++,{publicKey:test[4],chainCode:test[5],childIndex:test[6]});const childKey=(cov_2ajjpr0ijx.s[248]++,await derivePublic(publicKey,index,chainCode,hardened));cov_2ajjpr0ijx.s[249]++;chai.assert.deepEqual(childKey,expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "ffabbe86-de07-4606-b948-3255d940717b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c8b24f48-697c-4d05-9766-0fa4fa4380e1",
          "99931fef-bb3f-47de-a4ff-c7e9c085e66a",
          "37cf192b-e001-4a68-bbc4-018cf6946604",
          "aefd73f4-d870-4cfe-bc09-702e84c100fe",
          "bb639fd9-da58-4270-b295-e74ec191febe",
          "4b6e7f42-dd08-41c6-813f-5031d47434c0",
          "b80003f2-636e-4ef3-b405-48f6131cd17e",
          "c3eb21fd-1c03-4bde-b2e9-41518ca520e2",
          "62de0a4e-2b3e-45ac-a39f-0d9cab9c22bb",
          "e0b61a66-10c0-4572-846a-b54b9a6ba7a1",
          "9a532d57-38c8-49ec-bf1d-c49d095b908e",
          "f6e2f175-3db6-4870-b81c-dbb62054eb82",
          "07d8b1ce-d83d-49b1-8d11-f4b7b1a1674b",
          "b65e3f85-0db5-4ab3-a596-0f67b974e0e0",
          "ffabbe86-de07-4606-b948-3255d940717b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 99,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "fc5b89e4-6701-429f-b8a8-da21d675f9fe",
        "title": "Testing Extended Key functions",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Extended key from string: xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "5d5a7580-bfe9-4c31-bfc4-d2942c65ebb2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 0339a36013301597daef41fbe593a02cc513d0b55527ec2df1050e2e8ff49c85c2",
            "fullTitle": "Testing Extended Key functions Extended key to string: 0339a36013301597daef41fbe593a02cc513d0b55527ec2df1050e2e8ff49c85c2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "4a2c1109-da5c-4b59-96e6-8df6f74b6ffc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "72df4f79-407c-47c1-8fc9-9ac7a150665a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56",
            "fullTitle": "Testing Extended Key functions Extended key to string: 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "21e1b160-911b-4c7c-9439-128a089f6a47",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub6ASuArnXKPbfEwhqN6e3mwBcDTgzisQN1wXN9BJcM47sSikHjJf3UFHKkNAWbWMiGj7Wf5uMash7SyYq527Hqck2AxYysAA7xmALppuCkwQ",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub6ASuArnXKPbfEwhqN6e3mwBcDTgzisQN1wXN9BJcM47sSikHjJf3UFHKkNAWbWMiGj7Wf5uMash7SyYq527Hqck2AxYysAA7xmALppuCkwQ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "b0bfc824-18a9-49d8-a23c-e666fdc92105",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 03501e454bf00751f24b1b489aa925215d66af2234e3891c3b21a52bedb3cd711c",
            "fullTitle": "Testing Extended Key functions Extended key to string: 03501e454bf00751f24b1b489aa925215d66af2234e3891c3b21a52bedb3cd711c",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "61f7dd5a-207a-428b-9f1a-042ebf0d7b4d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub6D4BDPcP2GT577Vvch3R8wDkScZWzQzMMUm3PWbmWvVJrZwQY4VUNgqFJPMM3No2dFDFGTsxxpG5uJh7n7epu4trkrX7x7DogT5Uv6fcLW5",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub6D4BDPcP2GT577Vvch3R8wDkScZWzQzMMUm3PWbmWvVJrZwQY4VUNgqFJPMM3No2dFDFGTsxxpG5uJh7n7epu4trkrX7x7DogT5Uv6fcLW5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "7b2fa5f0-f52f-46bc-ae82-6cfb37b56916",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2",
            "fullTitle": "Testing Extended Key functions Extended key to string: 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "994ef8a5-562c-43ca-9e07-6784e35fb461",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub6FHa3pjLCk84BayeJxFW2SP4XRrFd1JYnxeLeU8EqN3vDfZmbqBqaGJAyiLjTAwm6ZLRQUMv1ZACTj37sR62cfN7fe5JnJ7dh8zL4fiyLHV",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub6FHa3pjLCk84BayeJxFW2SP4XRrFd1JYnxeLeU8EqN3vDfZmbqBqaGJAyiLjTAwm6ZLRQUMv1ZACTj37sR62cfN7fe5JnJ7dh8zL4fiyLHV",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "c67da086-e9f0-43b5-9088-96e376a3e2ce",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29",
            "fullTitle": "Testing Extended Key functions Extended key to string: 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "2b73a9ae-7fdf-4f39-8394-b25faf6d129d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub6H1LXWLaKsWFhvm6RVpEL9P4KfRZSW7abD2ttkWP3SSQvnyA8FSVqNTEcYFgJS2UaFcxupHiYkro49S8yGasTvXEYBVPamhGW6cFJodrTHy",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub6H1LXWLaKsWFhvm6RVpEL9P4KfRZSW7abD2ttkWP3SSQvnyA8FSVqNTEcYFgJS2UaFcxupHiYkro49S8yGasTvXEYBVPamhGW6cFJodrTHy",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "a3c595b7-c017-41b8-8e27-cfbf2399db17",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 022a471424da5e657499d1ff51cb43c47481a03b1e77f951fe64cec9f5a48f7011",
            "fullTitle": "Testing Extended Key functions Extended key to string: 022a471424da5e657499d1ff51cb43c47481a03b1e77f951fe64cec9f5a48f7011",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "c87ddb8a-ea30-469e-9939-c02ebacd4c04",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "01115533-24fc-483a-9a24-e0754338f89e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7",
            "fullTitle": "Testing Extended Key functions Extended key to string: 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "44c88e33-41bd-4269-85a8-1c8ecc3fb78d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "d4a75658-188b-40a1-a38b-cf6a32f44295",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 02fc9e5af0ac8d9b3cecfe2a888e2117ba3d089d8585886c9c826b6b22a98d12ea",
            "fullTitle": "Testing Extended Key functions Extended key to string: 02fc9e5af0ac8d9b3cecfe2a888e2117ba3d089d8585886c9c826b6b22a98d12ea",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "1f7be20c-aa1d-48ff-8b00-8ef6cf354fc4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub6ASAVgeehLbnwdqV6UKMHVzgqAG8Gr6riv3Fxxpj8ksbH9ebxaEyBLZ85ySDhKiLDBrQSARLq1uNRts8RuJiHjaDMBU4Zn9h8LZNnBC5y4a",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub6ASAVgeehLbnwdqV6UKMHVzgqAG8Gr6riv3Fxxpj8ksbH9ebxaEyBLZ85ySDhKiLDBrQSARLq1uNRts8RuJiHjaDMBU4Zn9h8LZNnBC5y4a",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "0b5dbe14-da0e-4ed7-bfa3-c995430505ff",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b",
            "fullTitle": "Testing Extended Key functions Extended key to string: 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "60b43ed3-6806-4caf-8902-8bb5b5935c88",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub6DF8uhdarytz3FWdA8TvFSvvAh8dP3283MY7p2V4SeE2wyWmG5mg5EwVvmdMVCQcoNJxGoWaU9DCWh89LojfZ537wTfunKau47EL2dhHKon",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub6DF8uhdarytz3FWdA8TvFSvvAh8dP3283MY7p2V4SeE2wyWmG5mg5EwVvmdMVCQcoNJxGoWaU9DCWh89LojfZ537wTfunKau47EL2dhHKon",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "1c3705e0-460a-4487-9156-0ce6f37b7097",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 03a7d1d856deb74c508e05031f9895dab54626251b3806e16b4bd12e781a7df5b9",
            "fullTitle": "Testing Extended Key functions Extended key to string: 03a7d1d856deb74c508e05031f9895dab54626251b3806e16b4bd12e781a7df5b9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "dd68eb7a-47ea-4027-a18a-a238002802ba",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "1e3ca332-9653-463c-96a2-5dcf8771ddbe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0",
            "fullTitle": "Testing Extended Key functions Extended key to string: 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "9a1e5db5-839b-4059-ad90-47008e973ec0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub6FnCn6nSzZAw5Tw7cgR9bi15UV96gLZhjDstkXXxvCLsUXBGXPdSnLFbdpq8p9HmGsApME5hQTZ3emM2rnY5agb9rXpVGyy3bdW6EEgAtqt",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub6FnCn6nSzZAw5Tw7cgR9bi15UV96gLZhjDstkXXxvCLsUXBGXPdSnLFbdpq8p9HmGsApME5hQTZ3emM2rnY5agb9rXpVGyy3bdW6EEgAtqt",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "f670a657-4220-4ff8-8eda-b801ca8106f6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 024d902e1a2fc7a8755ab5b694c575fce742c48d9ff192e63df5193e4c7afe1f9c",
            "fullTitle": "Testing Extended Key functions Extended key to string: 024d902e1a2fc7a8755ab5b694c575fce742c48d9ff192e63df5193e4c7afe1f9c",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "345fbc05-c583-410b-a9ce-481eaeeec198",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub661MyMwAqRbcFa4vkmBVnqhGEgWhewDgAv3xmFRny74D3sGHz6KTTbcskg2vZEMbEwxc4oaR435oczhSu4GdNwhwiVewcewU8A1Rr6HehAU",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub661MyMwAqRbcFa4vkmBVnqhGEgWhewDgAv3xmFRny74D3sGHz6KTTbcskg2vZEMbEwxc4oaR435oczhSu4GdNwhwiVewcewU8A1Rr6HehAU",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "87bb8b31-6b9c-4391-9017-949afe6fee19",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 02fce1b65c7470270fb89e5aa1dda253406b3370b948eae8a2a3539c4f25894283",
            "fullTitle": "Testing Extended Key functions Extended key to string: 02fce1b65c7470270fb89e5aa1dda253406b3370b948eae8a2a3539c4f25894283",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "982cbbae-0b55-49d4-997b-c10ef9f7bc37",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub693MU1BonjMa6Xxar2HQ9r3tRw3AA8yo7BBdvuSZF1D1eet32bVxGr9LYViWMtaLfQaa2StXeUmDG5VELFkU9pc3yfTzCk61WQJdR6ezj7a",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub693MU1BonjMa6Xxar2HQ9r3tRw3AA8yo7BBdvuSZF1D1eet32bVxGr9LYViWMtaLfQaa2StXeUmDG5VELFkU9pc3yfTzCk61WQJdR6ezj7a",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "05818e28-bbea-44a8-b5c8-f1d49a17e6ff",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 0324670e21612d0035d74563b25934ebfe0b1b1ea77ea18719029541aba107228a",
            "fullTitle": "Testing Extended Key functions Extended key to string: 0324670e21612d0035d74563b25934ebfe0b1b1ea77ea18719029541aba107228a",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "1fdbe188-8ac8-41c1-abbe-30201481de71",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "41707d7b-3b3a-417c-9dd0-1f13d87fa824",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "fullTitle": "Testing Extended Key functions Extended key to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "43a2d82a-03a8-4648-b3bb-7a3ddf400722",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "eb95bc3b-558a-459f-9fa6-d051a63baec1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "fullTitle": "Testing Extended Key functions Extended key to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "a281ba69-9def-4b24-9fba-b7a52a56577a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub693MU1BonjMaBynxewXEjDs4n2W9TFUheJ7FriPpa3zdQvQDwbvT9uGsEebvioAcYbtRUU7ge4yVgj8WDLrwtwuXKTWiieFoYX2B1JYUEfK",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub693MU1BonjMaBynxewXEjDs4n2W9TFUheJ7FriPpa3zdQvQDwbvT9uGsEebvioAcYbtRUU7ge4yVgj8WDLrwtwuXKTWiieFoYX2B1JYUEfK",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "881b6177-dc79-4cd0-8906-4662be130aeb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 031cd583c3ffb87477c539012859195f821e33b16435e8f3da0b40247056158618",
            "fullTitle": "Testing Extended Key functions Extended key to string: 031cd583c3ffb87477c539012859195f821e33b16435e8f3da0b40247056158618",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "6487c7d5-a1fb-4401-bdb6-e6f2c7f6144f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub6BZfReuexUYBTRwxFZyshBgF6SvpJ2GPQqFEXZ1ZrCUJrkcJ648DUdeRjx9QiNQxQvPcHYV3rGkvuExFQbVRS4kU5ynx4fAsWWhHgyPh1pP",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub6BZfReuexUYBTRwxFZyshBgF6SvpJ2GPQqFEXZ1ZrCUJrkcJ648DUdeRjx9QiNQxQvPcHYV3rGkvuExFQbVRS4kU5ynx4fAsWWhHgyPh1pP",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "109a944a-a634-485c-b0f0-2a08f7553aa6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 03268cd9af10d8b9d36f9c5da10038286174afc654c06f6aacfeea306b0c7a7637",
            "fullTitle": "Testing Extended Key functions Extended key to string: 03268cd9af10d8b9d36f9c5da10038286174afc654c06f6aacfeea306b0c7a7637",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "156ff17b-075b-48be-82a9-43ba0ac93bfd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xpub6BZfReuexUYBVSENKiuKqKgf9KrMZh4rNoUZ4nqhemJeybd6Webqiu4zndBwa9UB4Jvr5jB5Bcgng6reXAKCuDiVm7zhzJ13BUDBiM8HidZ",
            "fullTitle": "Testing Extended Key functions Extended key from string: xpub6BZfReuexUYBVSENKiuKqKgf9KrMZh4rNoUZ4nqhemJeybd6Webqiu4zndBwa9UB4Jvr5jB5Bcgng6reXAKCuDiVm7zhzJ13BUDBiM8HidZ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "5fc07759-20cc-4ecc-8a98-201ef0d569aa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 03641a1997a3538dd18036b941600b96e0c6229182c7089119894823324a5fff0c",
            "fullTitle": "Testing Extended Key functions Extended key to string: 03641a1997a3538dd18036b941600b96e0c6229182c7089119894823324a5fff0c",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "5ce9ba2d-eda6-4858-ac19-04fa1f9e37f5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "72ea6853-29b1-4644-81f0-c13319f70301",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35",
            "fullTitle": "Testing Extended Key functions Extended key to string: e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "88770a2a-b190-40bf-a9ae-d6aa4520a103",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9uHRZZhk6KAJC1avXpDAp4MDc3sQKNxDiPvvkX8Br5ngLNv1TxvUxt4cV1rGL5hj6KCesnDYUhd7oWgT11eZG7XnxHrnYeSvkzY7d2bhkJ7",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9uHRZZhk6KAJC1avXpDAp4MDc3sQKNxDiPvvkX8Br5ngLNv1TxvUxt4cV1rGL5hj6KCesnDYUhd7oWgT11eZG7XnxHrnYeSvkzY7d2bhkJ7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "1a687956-19d8-45f4-ac85-24eb61946001",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea",
            "fullTitle": "Testing Extended Key functions Extended key to string: edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "6723c73e-e452-4020-be0d-eafc1967f388",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9wTYmMFdV23N2TdNG573QoEsfRrWKQgWeibmLntzniatZvR9BmLnvSxqu53Kw1UmYPxLgboyZQaXwTCg8MSY3H2EU4pWcQDnRnrVA1xe8fs",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9wTYmMFdV23N2TdNG573QoEsfRrWKQgWeibmLntzniatZvR9BmLnvSxqu53Kw1UmYPxLgboyZQaXwTCg8MSY3H2EU4pWcQDnRnrVA1xe8fs",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "611e44f7-8e7a-476a-831a-4938bb5d377d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368",
            "fullTitle": "Testing Extended Key functions Extended key to string: 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "dd11242c-c8bd-44c7-8a4f-a026f3385590",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9z4pot5VBttmtdRTWfWQmoH1taj2axGVzFqSb8C9xaxKymcFzXBDptWmT7FwuEzG3ryjH4ktypQSAewRiNMjANTtpgP4mLTj34bhnZX7UiM",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9z4pot5VBttmtdRTWfWQmoH1taj2axGVzFqSb8C9xaxKymcFzXBDptWmT7FwuEzG3ryjH4ktypQSAewRiNMjANTtpgP4mLTj34bhnZX7UiM",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "18e98d11-b006-4bcd-8a5c-b6c9b672e8bb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca",
            "fullTitle": "Testing Extended Key functions Extended key to string: cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "43b2a275-7f04-424a-8e0b-9ce9a9ac4d52",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprvA2JDeKCSNNZky6uBCviVfJSKyQ1mDYahRjijr5idH2WwLsEd4Hsb2Tyh8RfQMuPh7f7RtyzTtdrbdqqsunu5Mm3wDvUAKRHSC34sJ7in334",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprvA2JDeKCSNNZky6uBCviVfJSKyQ1mDYahRjijr5idH2WwLsEd4Hsb2Tyh8RfQMuPh7f7RtyzTtdrbdqqsunu5Mm3wDvUAKRHSC34sJ7in334",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "603f715f-8228-4b9f-9f0b-da920e8c0edc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 0f479245fb19a38a1954c5c7c0ebab2f9bdfd96a17563ef28a6a4b1a2a764ef4",
            "fullTitle": "Testing Extended Key functions Extended key to string: 0f479245fb19a38a1954c5c7c0ebab2f9bdfd96a17563ef28a6a4b1a2a764ef4",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "768848de-12c1-4d24-9516-be3c857c5b8e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprvA41z7zogVVwxVSgdKUHDy1SKmdb533PjDz7J6N6mV6uS3ze1ai8FHa8kmHScGpWmj4WggLyQjgPie1rFSruoUihUZREPSL39UNdE3BBDu76",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprvA41z7zogVVwxVSgdKUHDy1SKmdb533PjDz7J6N6mV6uS3ze1ai8FHa8kmHScGpWmj4WggLyQjgPie1rFSruoUihUZREPSL39UNdE3BBDu76",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "218bed8e-e1d8-467a-88f1-f451e5472950",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 471b76e389e528d6de6d816857e012c5455051cad6660850e58372a6c3e6e7c8",
            "fullTitle": "Testing Extended Key functions Extended key to string: 471b76e389e528d6de6d816857e012c5455051cad6660850e58372a6c3e6e7c8",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "805e35bb-a920-4531-a123-6377963bdcf4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "2c93f300-8372-43e1-8d54-626bfb3d044c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e",
            "fullTitle": "Testing Extended Key functions Extended key to string: 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "02ce49ae-89a6-4b7e-b5bc-aaed39dcb981",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "6ba9f687-7ba3-433f-a479-dae2441a7c49",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e",
            "fullTitle": "Testing Extended Key functions Extended key to string: abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "4d861d70-9bd9-4365-b05b-e2146c85dc51",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9wSp6B7kry3Vj9m1zSnLvN3xH8RdsPP1Mh7fAaR7aRLcQMKTR2vidYEeEg2mUCTAwCd6vnxVrcjfy2kRgVsFawNzmjuHc2YmYRmagcEPdU9",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9wSp6B7kry3Vj9m1zSnLvN3xH8RdsPP1Mh7fAaR7aRLcQMKTR2vidYEeEg2mUCTAwCd6vnxVrcjfy2kRgVsFawNzmjuHc2YmYRmagcEPdU9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "504579c7-265b-4aa6-bd35-077e375f8a02",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93",
            "fullTitle": "Testing Extended Key functions Extended key to string: 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "62fc801c-3de2-42d3-8fd4-d7aad8b23397",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9zFnWC6h2cLgpmSA46vutJzBcfJ8yaJGg8cX1e5StJh45BBciYTRXSd25UEPVuesF9yog62tGAQtHjXajPPdbRCHuWS6T8XA2ECKADdw4Ef",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9zFnWC6h2cLgpmSA46vutJzBcfJ8yaJGg8cX1e5StJh45BBciYTRXSd25UEPVuesF9yog62tGAQtHjXajPPdbRCHuWS6T8XA2ECKADdw4Ef",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "89fb9459-12d8-4ccd-902d-d167a8f967a5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7",
            "fullTitle": "Testing Extended Key functions Extended key to string: 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "ca0e6368-131e-436d-b687-59de5a5d0dba",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "f2fe1097-4069-4c22-8c6f-c0b2496f6087",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d",
            "fullTitle": "Testing Extended Key functions Extended key to string: f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "4fea8b0d-ee77-4feb-9e8e-e71375921e37",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprvA2nrNbFZABcdryreWet9Ea4LvTJcGsqrMzxHx98MMrotbir7yrKCEXw7nadnHM8Dq38EGfSh6dqA9QWTyefMLEcBYJUuekgW4BYPJcr9E7j",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprvA2nrNbFZABcdryreWet9Ea4LvTJcGsqrMzxHx98MMrotbir7yrKCEXw7nadnHM8Dq38EGfSh6dqA9QWTyefMLEcBYJUuekgW4BYPJcr9E7j",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "545d431d-5a15-45a4-8904-6cfb858d35ab",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: bb7d39bdb83ecf58f2fd82b6d918341cbef428661ef01ab97c28a4842125ac23",
            "fullTitle": "Testing Extended Key functions Extended key to string: bb7d39bdb83ecf58f2fd82b6d918341cbef428661ef01ab97c28a4842125ac23",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "3affbfbe-54de-4e2a-a02a-f723bd47233c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9s21ZrQH143K35zTejeVRhkXgegDFUVpoh8Mxs2BQmXEB4w9SZ1CuoJPuQ2KGQrS1ZF3Pk7V7KWHn7FqR2JbAE9Bh8PURnrFnrmArj4kxos",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9s21ZrQH143K35zTejeVRhkXgegDFUVpoh8Mxs2BQmXEB4w9SZ1CuoJPuQ2KGQrS1ZF3Pk7V7KWHn7FqR2JbAE9Bh8PURnrFnrmArj4kxos",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "0bbdee70-316b-4fab-a293-2e628c2f1fd3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 7bd083869bd02e57786d119a81d406ac1524a765470acee90834c60f841e6236",
            "fullTitle": "Testing Extended Key functions Extended key to string: 7bd083869bd02e57786d119a81d406ac1524a765470acee90834c60f841e6236",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "44829301-8c28-4da5-a9ff-066970c89c50",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9v414VeuxMoGt3t7jzkPni79suCfkgFwjxG38X2wgfg2mrYtV4Bhj3prhDDCcBiJrz9n4xLYoDtBFRuQmreVLKzmiZAqvbGpx5q4yHfzfah",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9v414VeuxMoGt3t7jzkPni79suCfkgFwjxG38X2wgfg2mrYtV4Bhj3prhDDCcBiJrz9n4xLYoDtBFRuQmreVLKzmiZAqvbGpx5q4yHfzfah",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "d8c45105-a616-4965-bc89-ac979940ddae",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 622c81feac4a3bf2d87578edeb3384b8b024184fbc515626c897ea452e7c8f96",
            "fullTitle": "Testing Extended Key functions Extended key to string: 622c81feac4a3bf2d87578edeb3384b8b024184fbc515626c897ea452e7c8f96",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "1269e1ce-2f5e-4fe6-a7f0-6e4d7ae3c419",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9v414VeuxMoGusHLt8GowZuX6hn3Cp3qzAE6Cb2jKPH5MBgLJu2CWuiLKTdWV8WoNFYvpCcBfbpWfeyEQ8zytZW5qy39roTcugBGUkeAvCc",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9v414VeuxMoGusHLt8GowZuX6hn3Cp3qzAE6Cb2jKPH5MBgLJu2CWuiLKTdWV8WoNFYvpCcBfbpWfeyEQ8zytZW5qy39roTcugBGUkeAvCc",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "15d54ea5-172d-434e-8134-41f98b4b273e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: da4b3947e054576f0f353d1a7f4eedd7dbca242a83cba29d3962a2ffd4e30ae5",
            "fullTitle": "Testing Extended Key functions Extended key to string: da4b3947e054576f0f353d1a7f4eedd7dbca242a83cba29d3962a2ffd4e30ae5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "23103632-309e-4110-a64c-612b41bf8aaf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9v414VeuxMoGyViVYuzEN5vLDzff3nkrH5Bf4KzD1iTeY855Q4cCc6xPPNoc6MJcsqqRQiGqR977cEEGK2mhVp7ALKHqY1icEw3Q9UmfQ1v",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9v414VeuxMoGyViVYuzEN5vLDzff3nkrH5Bf4KzD1iTeY855Q4cCc6xPPNoc6MJcsqqRQiGqR977cEEGK2mhVp7ALKHqY1icEw3Q9UmfQ1v",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "5bda9d70-4daa-4aec-9d24-cd9709627c3f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: b7aaa6c8f5b4013e7b1755ae877b9fad530e9b2e86f68cec7420a6cea38e81b0",
            "fullTitle": "Testing Extended Key functions Extended key to string: b7aaa6c8f5b4013e7b1755ae877b9fad530e9b2e86f68cec7420a6cea38e81b0",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "7c79fd2e-9586-4c80-af17-f54c9478aefe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9xaK29Nm86ytEwsV9YSsL3jWYR6KtZYY3cKdjAbxHrwKyxH9YWoxvqKwtgQmExGpxAEDrwB4WK9YG1iukth3XiSgsxXLK1W3NB31gLee8fi",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9xaK29Nm86ytEwsV9YSsL3jWYR6KtZYY3cKdjAbxHrwKyxH9YWoxvqKwtgQmExGpxAEDrwB4WK9YG1iukth3XiSgsxXLK1W3NB31gLee8fi",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "8dae7c69-796b-4426-96ca-3bffd55173fb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: c9ba3ede6230e80cb243e9b20a1bd4846165ea312fde7eafe56fc52dcd583899",
            "fullTitle": "Testing Extended Key functions Extended key to string: c9ba3ede6230e80cb243e9b20a1bd4846165ea312fde7eafe56fc52dcd583899",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "b6859e90-f169-4688-84e1-13994c6a26fe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9xaK29Nm86ytGx9uDhNKUBjvbJ1sAEM11aYxGQS66Rmg6oHwy7HbB6kWwMHvukzdbPpGhfNXhZgePWFHm1DCh5PACPFywJJKr1AnUJTLjUc",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9xaK29Nm86ytGx9uDhNKUBjvbJ1sAEM11aYxGQS66Rmg6oHwy7HbB6kWwMHvukzdbPpGhfNXhZgePWFHm1DCh5PACPFywJJKr1AnUJTLjUc",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "b3f96530-e53c-44a2-a8ac-1c46c8f00953",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: f2039f55285a430162c720126d26e96ec43e5b680a0d71cbabaa28dbea091f43",
            "fullTitle": "Testing Extended Key functions Extended key to string: f2039f55285a430162c720126d26e96ec43e5b680a0d71cbabaa28dbea091f43",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "1e0bea48-5a1a-4bfe-9316-be647a3a386e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from string: xprv9s21ZrQH143K3ckY9DgU79uMTJkQRLdbCCVDh81SnxTgPzLLGax6uHeBULTtaEtcAvKjXfT7ZWtHzKjTpujMkUd9dDb8msDeAfnJxrgAYhr",
            "fullTitle": "Testing Extended Key functions Extended key from string: xprv9s21ZrQH143K3ckY9DgU79uMTJkQRLdbCCVDh81SnxTgPzLLGax6uHeBULTtaEtcAvKjXfT7ZWtHzKjTpujMkUd9dDb8msDeAfnJxrgAYhr",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[78]++;const resultedXkey=(cov_2ajjpr0ijx.s[435]++,fromString(base58Key,network));cov_2ajjpr0ijx.s[436]++;chai.assert.deepEqual(resultedXkey,xkey);",
            "err": {},
            "isRoot": false,
            "uuid": "15e493ce-817b-4514-9a79-2d0a5a9c180a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key to string: 00000055378cf5fafb56c711c674143f9b0ee82ab0ba2924f19b64f5ae7cdbfd",
            "fullTitle": "Testing Extended Key functions Extended key to string: 00000055378cf5fafb56c711c674143f9b0ee82ab0ba2924f19b64f5ae7cdbfd",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[79]++;cov_2ajjpr0ijx.s[438]++;if(!xkey.publicKey){cov_2ajjpr0ijx.b[100][0]++;cov_2ajjpr0ijx.s[439]++;xkey=_objectSpread({},xkey,{publicKey:`02${test[1]}`});}else{cov_2ajjpr0ijx.b[100][1]++;}const resultedBase58Key=(cov_2ajjpr0ijx.s[440]++,toString(xkey,network));cov_2ajjpr0ijx.s[441]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "cc6261d5-21d7-4701-9fb4-bb878d36c044",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5d5a7580-bfe9-4c31-bfc4-d2942c65ebb2",
          "4a2c1109-da5c-4b59-96e6-8df6f74b6ffc",
          "72df4f79-407c-47c1-8fc9-9ac7a150665a",
          "21e1b160-911b-4c7c-9439-128a089f6a47",
          "b0bfc824-18a9-49d8-a23c-e666fdc92105",
          "61f7dd5a-207a-428b-9f1a-042ebf0d7b4d",
          "7b2fa5f0-f52f-46bc-ae82-6cfb37b56916",
          "994ef8a5-562c-43ca-9e07-6784e35fb461",
          "c67da086-e9f0-43b5-9088-96e376a3e2ce",
          "2b73a9ae-7fdf-4f39-8394-b25faf6d129d",
          "a3c595b7-c017-41b8-8e27-cfbf2399db17",
          "c87ddb8a-ea30-469e-9939-c02ebacd4c04",
          "01115533-24fc-483a-9a24-e0754338f89e",
          "44c88e33-41bd-4269-85a8-1c8ecc3fb78d",
          "d4a75658-188b-40a1-a38b-cf6a32f44295",
          "1f7be20c-aa1d-48ff-8b00-8ef6cf354fc4",
          "0b5dbe14-da0e-4ed7-bfa3-c995430505ff",
          "60b43ed3-6806-4caf-8902-8bb5b5935c88",
          "1c3705e0-460a-4487-9156-0ce6f37b7097",
          "dd68eb7a-47ea-4027-a18a-a238002802ba",
          "1e3ca332-9653-463c-96a2-5dcf8771ddbe",
          "9a1e5db5-839b-4059-ad90-47008e973ec0",
          "f670a657-4220-4ff8-8eda-b801ca8106f6",
          "345fbc05-c583-410b-a9ce-481eaeeec198",
          "87bb8b31-6b9c-4391-9017-949afe6fee19",
          "982cbbae-0b55-49d4-997b-c10ef9f7bc37",
          "05818e28-bbea-44a8-b5c8-f1d49a17e6ff",
          "1fdbe188-8ac8-41c1-abbe-30201481de71",
          "41707d7b-3b3a-417c-9dd0-1f13d87fa824",
          "43a2d82a-03a8-4648-b3bb-7a3ddf400722",
          "eb95bc3b-558a-459f-9fa6-d051a63baec1",
          "a281ba69-9def-4b24-9fba-b7a52a56577a",
          "881b6177-dc79-4cd0-8906-4662be130aeb",
          "6487c7d5-a1fb-4401-bdb6-e6f2c7f6144f",
          "109a944a-a634-485c-b0f0-2a08f7553aa6",
          "156ff17b-075b-48be-82a9-43ba0ac93bfd",
          "5fc07759-20cc-4ecc-8a98-201ef0d569aa",
          "5ce9ba2d-eda6-4858-ac19-04fa1f9e37f5",
          "72ea6853-29b1-4644-81f0-c13319f70301",
          "88770a2a-b190-40bf-a9ae-d6aa4520a103",
          "1a687956-19d8-45f4-ac85-24eb61946001",
          "6723c73e-e452-4020-be0d-eafc1967f388",
          "611e44f7-8e7a-476a-831a-4938bb5d377d",
          "dd11242c-c8bd-44c7-8a4f-a026f3385590",
          "18e98d11-b006-4bcd-8a5c-b6c9b672e8bb",
          "43b2a275-7f04-424a-8e0b-9ce9a9ac4d52",
          "603f715f-8228-4b9f-9f0b-da920e8c0edc",
          "768848de-12c1-4d24-9516-be3c857c5b8e",
          "218bed8e-e1d8-467a-88f1-f451e5472950",
          "805e35bb-a920-4531-a123-6377963bdcf4",
          "2c93f300-8372-43e1-8d54-626bfb3d044c",
          "02ce49ae-89a6-4b7e-b5bc-aaed39dcb981",
          "6ba9f687-7ba3-433f-a479-dae2441a7c49",
          "4d861d70-9bd9-4365-b05b-e2146c85dc51",
          "504579c7-265b-4aa6-bd35-077e375f8a02",
          "62fc801c-3de2-42d3-8fd4-d7aad8b23397",
          "89fb9459-12d8-4ccd-902d-d167a8f967a5",
          "ca0e6368-131e-436d-b687-59de5a5d0dba",
          "f2fe1097-4069-4c22-8c6f-c0b2496f6087",
          "4fea8b0d-ee77-4feb-9e8e-e71375921e37",
          "545d431d-5a15-45a4-8904-6cfb858d35ab",
          "3affbfbe-54de-4e2a-a02a-f723bd47233c",
          "0bbdee70-316b-4fab-a293-2e628c2f1fd3",
          "44829301-8c28-4da5-a9ff-066970c89c50",
          "d8c45105-a616-4965-bc89-ac979940ddae",
          "1269e1ce-2f5e-4fe6-a7f0-6e4d7ae3c419",
          "15d54ea5-172d-434e-8134-41f98b4b273e",
          "23103632-309e-4110-a64c-612b41bf8aaf",
          "5bda9d70-4daa-4aec-9d24-cd9709627c3f",
          "7c79fd2e-9586-4c80-af17-f54c9478aefe",
          "8dae7c69-796b-4426-96ca-3bffd55173fb",
          "b6859e90-f169-4688-84e1-13994c6a26fe",
          "b3f96530-e53c-44a2-a8ac-1c46c8f00953",
          "1e0bea48-5a1a-4bfe-9316-be647a3a386e",
          "15e493ce-817b-4514-9a79-2d0a5a9c180a",
          "cc6261d5-21d7-4701-9fb4-bb878d36c044"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 22,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "daf924df-24ed-454d-8b1b-b77d8c2d0522",
        "title": "Testing HD Key",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Creating HD key from phrase source mutual capable tissue tide pudding build cricket joy problem next purity oxygen ugly upset olive shield good merry cram school short benefit disagree",
            "fullTitle": "Testing HD Key Creating HD key from phrase source mutual capable tissue tide pudding build cricket joy problem next purity oxygen ugly upset olive shield good merry cram school short benefit disagree",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[91]++;const childKey=(cov_2ajjpr0ijx.s[517]++,await fromSeed$1(test[1]));const xkey=(cov_2ajjpr0ijx.s[518]++,toString$1(childKey));cov_2ajjpr0ijx.s[519]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "e6316c6b-84e9-4371-912d-507e4f60a986",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from phrase wisdom play manual rigid tip civil much output much hawk aerobic erode kick enable charge",
            "fullTitle": "Testing HD Key Creating HD key from phrase wisdom play manual rigid tip civil much output much hawk aerobic erode kick enable charge",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[91]++;const childKey=(cov_2ajjpr0ijx.s[517]++,await fromSeed$1(test[1]));const xkey=(cov_2ajjpr0ijx.s[518]++,toString$1(childKey));cov_2ajjpr0ijx.s[519]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "282d1308-3996-46b0-a7b9-952cb3abc2ee",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from phrase window raven save select member trigger loud jelly accident vessel such time",
            "fullTitle": "Testing HD Key Creating HD key from phrase window raven save select member trigger loud jelly accident vessel such time",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[91]++;const childKey=(cov_2ajjpr0ijx.s[517]++,await fromSeed$1(test[1]));const xkey=(cov_2ajjpr0ijx.s[518]++,toString$1(childKey));cov_2ajjpr0ijx.s[519]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "74e69359-1e61-46e5-a969-3ad5a8ee0fd7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from phrase strong intact economy injury train garage woman unique wealth profit nasty enter robot egg decorate gain claim local brush disorder hunt staff village jelly",
            "fullTitle": "Testing HD Key Creating HD key from phrase strong intact economy injury train garage woman unique wealth profit nasty enter robot egg decorate gain claim local brush disorder hunt staff village jelly",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[91]++;const childKey=(cov_2ajjpr0ijx.s[517]++,await fromSeed$1(test[1]));const xkey=(cov_2ajjpr0ijx.s[518]++,toString$1(childKey));cov_2ajjpr0ijx.s[519]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "fa93a6e0-22ab-4862-91ce-7e4b9779219d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m",
            "fullTitle": "Testing HD Key Creating HD key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "2bd33236-1b80-4ca7-befc-e1b2bd77f2dc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path ",
            "fullTitle": "Testing HD Key Creating HD key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "1d525c87-3d4b-4953-9ea4-42552fc56234",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xprv9yuCvdvQ5yaRubkg5AXB5ffBWVTjzyPdk6DZWPhjgTHRe8hrt99WKPVYSwg5yi652Jp46W1TadMMwxjBoqFs31gcSGQmo1VYc1CbStCmeZC with path m/44'/0'/0'",
            "fullTitle": "Testing HD Key Creating HD key from xkey xprv9yuCvdvQ5yaRubkg5AXB5ffBWVTjzyPdk6DZWPhjgTHRe8hrt99WKPVYSwg5yi652Jp46W1TadMMwxjBoqFs31gcSGQmo1VYc1CbStCmeZC with path m/44'/0'/0'",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "f44721ea-03bb-40ed-b71e-b88c3dc22f9a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xpub6CtZL9THvM8j85q9BC4BSobv4XJEQS7V7K9AJn7MEnpQWw31RgTksBp2JBsQib9AR1XjFAjnRgbL7jGFyJzNTdk6VATYfVNdSQEC988jXQ6 with path m/44'/0'/0'",
            "fullTitle": "Testing HD Key Creating HD key from xkey xpub6CtZL9THvM8j85q9BC4BSobv4XJEQS7V7K9AJn7MEnpQWw31RgTksBp2JBsQib9AR1XjFAjnRgbL7jGFyJzNTdk6VATYfVNdSQEC988jXQ6 with path m/44'/0'/0'",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "d6d1c051-37f7-4d03-a1f3-7c9f164f7779",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc with path m/44'/0'/0'/0",
            "fullTitle": "Testing HD Key Creating HD key from xkey xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc with path m/44'/0'/0'/0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "d312bb38-acdf-492b-ba1a-4e2f7455faa7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xpub6ECgVgNohfUySdFFrvVw8Aruzv9orYxcbjxdicNBs4Mh71wkjLF87d7ypmLzieGuji5hQ9pNPckjH6YV2mDsJp4riUopwqWaQN8gBKryoTw with path m/44'/0'/0'/0",
            "fullTitle": "Testing HD Key Creating HD key from xkey xpub6ECgVgNohfUySdFFrvVw8Aruzv9orYxcbjxdicNBs4Mh71wkjLF87d7ypmLzieGuji5hQ9pNPckjH6YV2mDsJp4riUopwqWaQN8gBKryoTw with path m/44'/0'/0'/0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "660c65c8-5b92-40e5-bcba-092890276d23",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xprv9yuCvdvQ5yaRubkg5AXB5ffBWVTjzyPdk6DZWPhjgTHRe8hrt99WKPVYSwg5yi652Jp46W1TadMMwxjBoqFs31gcSGQmo1VYc1CbStCmeZC with path m/44'/0'",
            "fullTitle": "Testing HD Key Creating HD key from xkey xprv9yuCvdvQ5yaRubkg5AXB5ffBWVTjzyPdk6DZWPhjgTHRe8hrt99WKPVYSwg5yi652Jp46W1TadMMwxjBoqFs31gcSGQmo1VYc1CbStCmeZC with path m/44'/0'",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "21cf557b-7946-4f86-a4bf-a9ebde60d187",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xpub6CtZL9THvM8j85q9BC4BSobv4XJEQS7V7K9AJn7MEnpQWw31RgTksBp2JBsQib9AR1XjFAjnRgbL7jGFyJzNTdk6VATYfVNdSQEC988jXQ6 with path m/44'/0'",
            "fullTitle": "Testing HD Key Creating HD key from xkey xpub6CtZL9THvM8j85q9BC4BSobv4XJEQS7V7K9AJn7MEnpQWw31RgTksBp2JBsQib9AR1XjFAjnRgbL7jGFyJzNTdk6VATYfVNdSQEC988jXQ6 with path m/44'/0'",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "1396f29f-da7f-4389-a310-5dbecb68c867",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc with path m/44'/0'/0'",
            "fullTitle": "Testing HD Key Creating HD key from xkey xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc with path m/44'/0'/0'",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "1dde4a76-5790-4886-a4a4-cd5538651646",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xpub6ECgVgNohfUySdFFrvVw8Aruzv9orYxcbjxdicNBs4Mh71wkjLF87d7ypmLzieGuji5hQ9pNPckjH6YV2mDsJp4riUopwqWaQN8gBKryoTw with path m/44'/0'/0'",
            "fullTitle": "Testing HD Key Creating HD key from xkey xpub6ECgVgNohfUySdFFrvVw8Aruzv9orYxcbjxdicNBs4Mh71wkjLF87d7ypmLzieGuji5hQ9pNPckjH6YV2mDsJp4riUopwqWaQN8gBKryoTw with path m/44'/0'/0'",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "cbd957e5-2951-4f63-8de9-e7f626b033a2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xprv9yuCvdvQ5yaRubkg5AXB5ffBWVTjzyPdk6DZWPhjgTHRe8hrt99WKPVYSwg5yi652Jp46W1TadMMwxjBoqFs31gcSGQmo1VYc1CbStCmeZC with path 44'/0'",
            "fullTitle": "Testing HD Key Creating HD key from xkey xprv9yuCvdvQ5yaRubkg5AXB5ffBWVTjzyPdk6DZWPhjgTHRe8hrt99WKPVYSwg5yi652Jp46W1TadMMwxjBoqFs31gcSGQmo1VYc1CbStCmeZC with path 44'/0'",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "75a198e8-776b-4774-a907-9da0d1dbc6cb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xpub6CtZL9THvM8j85q9BC4BSobv4XJEQS7V7K9AJn7MEnpQWw31RgTksBp2JBsQib9AR1XjFAjnRgbL7jGFyJzNTdk6VATYfVNdSQEC988jXQ6 with path 44'/0'",
            "fullTitle": "Testing HD Key Creating HD key from xkey xpub6CtZL9THvM8j85q9BC4BSobv4XJEQS7V7K9AJn7MEnpQWw31RgTksBp2JBsQib9AR1XjFAjnRgbL7jGFyJzNTdk6VATYfVNdSQEC988jXQ6 with path 44'/0'",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "4863296c-b696-4fa4-870a-5251d39d8d4d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc with path 44'/0'/0'",
            "fullTitle": "Testing HD Key Creating HD key from xkey xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc with path 44'/0'/0'",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "34601f6b-cb64-43a1-833c-9fc9f13a4ab1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating HD key from xkey xpub6ECgVgNohfUySdFFrvVw8Aruzv9orYxcbjxdicNBs4Mh71wkjLF87d7ypmLzieGuji5hQ9pNPckjH6YV2mDsJp4riUopwqWaQN8gBKryoTw with path 44'/0'/0'",
            "fullTitle": "Testing HD Key Creating HD key from xkey xpub6ECgVgNohfUySdFFrvVw8Aruzv9orYxcbjxdicNBs4Mh71wkjLF87d7ypmLzieGuji5hQ9pNPckjH6YV2mDsJp4riUopwqWaQN8gBKryoTw with path 44'/0'/0'",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[93]++;const opts=(cov_2ajjpr0ijx.s[522]++,{});cov_2ajjpr0ijx.s[523]++;if(test[1]){cov_2ajjpr0ijx.b[124][0]++;cov_2ajjpr0ijx.s[524]++;opts.path=test[1].split('/');}else{cov_2ajjpr0ijx.b[124][1]++;}const hdKey$$1=(cov_2ajjpr0ijx.s[525]++,fromString$1(test[0],opts));cov_2ajjpr0ijx.s[526]++;chai.assert.equal(hdKey$$1.hardened,test[2]);cov_2ajjpr0ijx.s[527]++;chai.assert.equal(hdKey$$1.path.join('/'),test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "94b87f11-5bf0-48f8-9759-f790c499f34e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Error on Creating HD key with error type Wrong path depth for key",
            "fullTitle": "Testing HD Key Error on Creating HD key with error type Wrong path depth for key",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[95]++;cov_2ajjpr0ijx.s[530]++;try{cov_2ajjpr0ijx.s[531]++;fromString$1(test[0],{path:test[1].split('/')});}catch(e){cov_2ajjpr0ijx.s[532]++;chai.assert.equal(e.message,test[2]);}",
            "err": {},
            "isRoot": false,
            "uuid": "ac879da9-f9e7-48ff-8288-a80ce99182be",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Error on Creating HD key with error type Wrong index for key",
            "fullTitle": "Testing HD Key Error on Creating HD key with error type Wrong index for key",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[95]++;cov_2ajjpr0ijx.s[530]++;try{cov_2ajjpr0ijx.s[531]++;fromString$1(test[0],{path:test[1].split('/')});}catch(e){cov_2ajjpr0ijx.s[532]++;chai.assert.equal(e.message,test[2]);}",
            "err": {},
            "isRoot": false,
            "uuid": "345d280b-fb96-4837-b329-f58ac8ab5314",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving HD key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/44'/0'/0'/0",
            "fullTitle": "Testing HD Key Deriving HD key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/44'/0'/0'/0",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[97]++;const path=(cov_2ajjpr0ijx.s[535]++,test[1].split('/'));const parentKey=(cov_2ajjpr0ijx.s[536]++,fromString$1(test[0]));let hdKey$$1=(cov_2ajjpr0ijx.s[537]++,await fromPath(parentKey,{path}));cov_2ajjpr0ijx.s[538]++;path.shift();let testIndex=(cov_2ajjpr0ijx.s[539]++,2);cov_2ajjpr0ijx.s[540]++;while(path.length){const index=(cov_2ajjpr0ijx.s[541]++,path.shift());cov_2ajjpr0ijx.s[542]++;hdKey$$1=hdKey$$1.children[index];const xprivkey=(cov_2ajjpr0ijx.s[543]++,toString$1(hdKey$$1));const xpubkey=(cov_2ajjpr0ijx.s[544]++,toString$1(hdKey$$1,network$1,true));cov_2ajjpr0ijx.s[545]++;chai.assert.equal(xprivkey,test[testIndex][0],'xpriv');cov_2ajjpr0ijx.s[546]++;chai.assert.equal(xpubkey,test[testIndex][1],'xpub');cov_2ajjpr0ijx.s[547]++;testIndex++;}",
            "err": {},
            "isRoot": false,
            "uuid": "a9197e1e-121c-4d9f-97d9-43e8fa0794b5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving HD key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/84'/1'/185'/1",
            "fullTitle": "Testing HD Key Deriving HD key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/84'/1'/185'/1",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[97]++;const path=(cov_2ajjpr0ijx.s[535]++,test[1].split('/'));const parentKey=(cov_2ajjpr0ijx.s[536]++,fromString$1(test[0]));let hdKey$$1=(cov_2ajjpr0ijx.s[537]++,await fromPath(parentKey,{path}));cov_2ajjpr0ijx.s[538]++;path.shift();let testIndex=(cov_2ajjpr0ijx.s[539]++,2);cov_2ajjpr0ijx.s[540]++;while(path.length){const index=(cov_2ajjpr0ijx.s[541]++,path.shift());cov_2ajjpr0ijx.s[542]++;hdKey$$1=hdKey$$1.children[index];const xprivkey=(cov_2ajjpr0ijx.s[543]++,toString$1(hdKey$$1));const xpubkey=(cov_2ajjpr0ijx.s[544]++,toString$1(hdKey$$1,network$1,true));cov_2ajjpr0ijx.s[545]++;chai.assert.equal(xprivkey,test[testIndex][0],'xpriv');cov_2ajjpr0ijx.s[546]++;chai.assert.equal(xpubkey,test[testIndex][1],'xpub');cov_2ajjpr0ijx.s[547]++;testIndex++;}",
            "err": {},
            "isRoot": false,
            "uuid": "7b24c1ad-bda3-4626-a6a4-c7de18b5577e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving HD key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/32/0/1",
            "fullTitle": "Testing HD Key Deriving HD key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/32/0/1",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[97]++;const path=(cov_2ajjpr0ijx.s[535]++,test[1].split('/'));const parentKey=(cov_2ajjpr0ijx.s[536]++,fromString$1(test[0]));let hdKey$$1=(cov_2ajjpr0ijx.s[537]++,await fromPath(parentKey,{path}));cov_2ajjpr0ijx.s[538]++;path.shift();let testIndex=(cov_2ajjpr0ijx.s[539]++,2);cov_2ajjpr0ijx.s[540]++;while(path.length){const index=(cov_2ajjpr0ijx.s[541]++,path.shift());cov_2ajjpr0ijx.s[542]++;hdKey$$1=hdKey$$1.children[index];const xprivkey=(cov_2ajjpr0ijx.s[543]++,toString$1(hdKey$$1));const xpubkey=(cov_2ajjpr0ijx.s[544]++,toString$1(hdKey$$1,network$1,true));cov_2ajjpr0ijx.s[545]++;chai.assert.equal(xprivkey,test[testIndex][0],'xpriv');cov_2ajjpr0ijx.s[546]++;chai.assert.equal(xpubkey,test[testIndex][1],'xpub');cov_2ajjpr0ijx.s[547]++;testIndex++;}",
            "err": {},
            "isRoot": false,
            "uuid": "36a6adef-5447-48cb-a5aa-a93acd39f81f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "e6316c6b-84e9-4371-912d-507e4f60a986",
          "282d1308-3996-46b0-a7b9-952cb3abc2ee",
          "74e69359-1e61-46e5-a969-3ad5a8ee0fd7",
          "fa93a6e0-22ab-4862-91ce-7e4b9779219d",
          "2bd33236-1b80-4ca7-befc-e1b2bd77f2dc",
          "1d525c87-3d4b-4953-9ea4-42552fc56234",
          "f44721ea-03bb-40ed-b71e-b88c3dc22f9a",
          "d6d1c051-37f7-4d03-a1f3-7c9f164f7779",
          "d312bb38-acdf-492b-ba1a-4e2f7455faa7",
          "660c65c8-5b92-40e5-bcba-092890276d23",
          "21cf557b-7946-4f86-a4bf-a9ebde60d187",
          "1396f29f-da7f-4389-a310-5dbecb68c867",
          "1dde4a76-5790-4886-a4a4-cd5538651646",
          "cbd957e5-2951-4f63-8de9-e7f626b033a2",
          "75a198e8-776b-4774-a907-9da0d1dbc6cb",
          "4863296c-b696-4fa4-870a-5251d39d8d4d",
          "34601f6b-cb64-43a1-833c-9fc9f13a4ab1",
          "94b87f11-5bf0-48f8-9759-f790c499f34e",
          "ac879da9-f9e7-48ff-8288-a80ce99182be",
          "345d280b-fb96-4837-b329-f58ac8ab5314",
          "a9197e1e-121c-4d9f-97d9-43e8fa0794b5",
          "7b24c1ad-bda3-4626-a6a4-c7de18b5577e",
          "36a6adef-5447-48cb-a5aa-a93acd39f81f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 37,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "08f82219-d134-44d7-a174-0411ef59578c",
        "title": "Testing Bip44 HD Key path derivation",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Deriving HD key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from HD Settings xprv9wu4xj9HBf23eLtY9AvoQSth3vA4TpE4a4SUBXHD3yK62ikgaRvVH8pMq2SzRVVG63GtPgjTKZY1CYmHkgyucgjeMKGBANpMksxDTPWtqcU",
            "fullTitle": "Testing Bip44 HD Key path derivation Deriving HD key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from HD Settings xprv9wu4xj9HBf23eLtY9AvoQSth3vA4TpE4a4SUBXHD3yK62ikgaRvVH8pMq2SzRVVG63GtPgjTKZY1CYmHkgyucgjeMKGBANpMksxDTPWtqcU",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[101]++;const parentKey=(cov_2ajjpr0ijx.s[572]++,fromString$1(test[0]));let account=(cov_2ajjpr0ijx.s[573]++,0);let coinType=(cov_2ajjpr0ijx.s[574]++,0);cov_2ajjpr0ijx.s[575]++;if(test[1]){cov_2ajjpr0ijx.b[133][0]++;cov_2ajjpr0ijx.s[576]++;account=test[1][0];cov_2ajjpr0ijx.s[577]++;coinType=test[1][1];}else{cov_2ajjpr0ijx.b[133][1]++;}const hdPaths=(cov_2ajjpr0ijx.s[578]++,createPaths(test[2],coinType,account,'bitcoin'));const hdKey=(cov_2ajjpr0ijx.s[579]++,await fromPaths(parentKey,hdPaths,network$2));let testIndex=(cov_2ajjpr0ijx.s[580]++,3);cov_2ajjpr0ijx.s[581]++;for(const hdPath of hdPaths){const key=(cov_2ajjpr0ijx.s[582]++,getKey(hdKey,hdPath.path));cov_2ajjpr0ijx.s[583]++;if(!key){cov_2ajjpr0ijx.b[134][0]++;cov_2ajjpr0ijx.s[584]++;throw new Error('No Key');}else{cov_2ajjpr0ijx.b[134][1]++;}const xprivkey=(cov_2ajjpr0ijx.s[585]++,toString$1(key));const xpubkey=(cov_2ajjpr0ijx.s[586]++,toString$1(key,network$2,true));cov_2ajjpr0ijx.s[587]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_2ajjpr0ijx.s[588]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');}",
            "err": {},
            "isRoot": false,
            "uuid": "cf3263a8-3a68-49e9-843b-e332b0c0d838",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving HD key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from HD Settings xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc",
            "fullTitle": "Testing Bip44 HD Key path derivation Deriving HD key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from HD Settings xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[101]++;const parentKey=(cov_2ajjpr0ijx.s[572]++,fromString$1(test[0]));let account=(cov_2ajjpr0ijx.s[573]++,0);let coinType=(cov_2ajjpr0ijx.s[574]++,0);cov_2ajjpr0ijx.s[575]++;if(test[1]){cov_2ajjpr0ijx.b[133][0]++;cov_2ajjpr0ijx.s[576]++;account=test[1][0];cov_2ajjpr0ijx.s[577]++;coinType=test[1][1];}else{cov_2ajjpr0ijx.b[133][1]++;}const hdPaths=(cov_2ajjpr0ijx.s[578]++,createPaths(test[2],coinType,account,'bitcoin'));const hdKey=(cov_2ajjpr0ijx.s[579]++,await fromPaths(parentKey,hdPaths,network$2));let testIndex=(cov_2ajjpr0ijx.s[580]++,3);cov_2ajjpr0ijx.s[581]++;for(const hdPath of hdPaths){const key=(cov_2ajjpr0ijx.s[582]++,getKey(hdKey,hdPath.path));cov_2ajjpr0ijx.s[583]++;if(!key){cov_2ajjpr0ijx.b[134][0]++;cov_2ajjpr0ijx.s[584]++;throw new Error('No Key');}else{cov_2ajjpr0ijx.b[134][1]++;}const xprivkey=(cov_2ajjpr0ijx.s[585]++,toString$1(key));const xpubkey=(cov_2ajjpr0ijx.s[586]++,toString$1(key,network$2,true));cov_2ajjpr0ijx.s[587]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_2ajjpr0ijx.s[588]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');}",
            "err": {},
            "isRoot": false,
            "uuid": "713ee452-a88a-40c0-b01d-401cb9716186",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving HD key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from HD Settings xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc",
            "fullTitle": "Testing Bip44 HD Key path derivation Deriving HD key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from HD Settings xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[101]++;const parentKey=(cov_2ajjpr0ijx.s[572]++,fromString$1(test[0]));let account=(cov_2ajjpr0ijx.s[573]++,0);let coinType=(cov_2ajjpr0ijx.s[574]++,0);cov_2ajjpr0ijx.s[575]++;if(test[1]){cov_2ajjpr0ijx.b[133][0]++;cov_2ajjpr0ijx.s[576]++;account=test[1][0];cov_2ajjpr0ijx.s[577]++;coinType=test[1][1];}else{cov_2ajjpr0ijx.b[133][1]++;}const hdPaths=(cov_2ajjpr0ijx.s[578]++,createPaths(test[2],coinType,account,'bitcoin'));const hdKey=(cov_2ajjpr0ijx.s[579]++,await fromPaths(parentKey,hdPaths,network$2));let testIndex=(cov_2ajjpr0ijx.s[580]++,3);cov_2ajjpr0ijx.s[581]++;for(const hdPath of hdPaths){const key=(cov_2ajjpr0ijx.s[582]++,getKey(hdKey,hdPath.path));cov_2ajjpr0ijx.s[583]++;if(!key){cov_2ajjpr0ijx.b[134][0]++;cov_2ajjpr0ijx.s[584]++;throw new Error('No Key');}else{cov_2ajjpr0ijx.b[134][1]++;}const xprivkey=(cov_2ajjpr0ijx.s[585]++,toString$1(key));const xpubkey=(cov_2ajjpr0ijx.s[586]++,toString$1(key,network$2,true));cov_2ajjpr0ijx.s[587]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_2ajjpr0ijx.s[588]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');}",
            "err": {},
            "isRoot": false,
            "uuid": "e9719b68-1c60-4210-9ff8-23df34f5e86f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving HD key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from HD Settings xprvA1EHkuHt6M4kCWHv7s6eQCXxCzcusYp4VatT3R6ALQX1vwTnBJRbbRcWn695uBN7LoKyhLfjZ8kE7crcGcoJokPRFmCVKvKhHRo2AGvoty6",
            "fullTitle": "Testing Bip44 HD Key path derivation Deriving HD key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from HD Settings xprvA1EHkuHt6M4kCWHv7s6eQCXxCzcusYp4VatT3R6ALQX1vwTnBJRbbRcWn695uBN7LoKyhLfjZ8kE7crcGcoJokPRFmCVKvKhHRo2AGvoty6",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[101]++;const parentKey=(cov_2ajjpr0ijx.s[572]++,fromString$1(test[0]));let account=(cov_2ajjpr0ijx.s[573]++,0);let coinType=(cov_2ajjpr0ijx.s[574]++,0);cov_2ajjpr0ijx.s[575]++;if(test[1]){cov_2ajjpr0ijx.b[133][0]++;cov_2ajjpr0ijx.s[576]++;account=test[1][0];cov_2ajjpr0ijx.s[577]++;coinType=test[1][1];}else{cov_2ajjpr0ijx.b[133][1]++;}const hdPaths=(cov_2ajjpr0ijx.s[578]++,createPaths(test[2],coinType,account,'bitcoin'));const hdKey=(cov_2ajjpr0ijx.s[579]++,await fromPaths(parentKey,hdPaths,network$2));let testIndex=(cov_2ajjpr0ijx.s[580]++,3);cov_2ajjpr0ijx.s[581]++;for(const hdPath of hdPaths){const key=(cov_2ajjpr0ijx.s[582]++,getKey(hdKey,hdPath.path));cov_2ajjpr0ijx.s[583]++;if(!key){cov_2ajjpr0ijx.b[134][0]++;cov_2ajjpr0ijx.s[584]++;throw new Error('No Key');}else{cov_2ajjpr0ijx.b[134][1]++;}const xprivkey=(cov_2ajjpr0ijx.s[585]++,toString$1(key));const xpubkey=(cov_2ajjpr0ijx.s[586]++,toString$1(key,network$2,true));cov_2ajjpr0ijx.s[587]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_2ajjpr0ijx.s[588]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');}",
            "err": {},
            "isRoot": false,
            "uuid": "c17696eb-45eb-42e3-bdfa-e267a8c2a1eb",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "cf3263a8-3a68-49e9-843b-e332b0c0d838",
          "713ee452-a88a-40c0-b01d-401cb9716186",
          "e9719b68-1c60-4210-9ff8-23df34f5e86f",
          "c17696eb-45eb-42e3-bdfa-e267a8c2a1eb"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 53,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "7cda7c22-0813-49a4-9a3d-0721e7454cc7",
        "title": "Testing HD Key",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Creating Key Pair from WIF L1a6bxpVHJcM9ZEUS58MM1S9NzjxsJ14iFDV4rAdfMnE5TLGDexM",
            "fullTitle": "Testing HD Key Creating Key Pair from WIF L1a6bxpVHJcM9ZEUS58MM1S9NzjxsJ14iFDV4rAdfMnE5TLGDexM",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[104]++;const keyPair$$1=(cov_2ajjpr0ijx.s[596]++,await fromWif(test[0],network$3));cov_2ajjpr0ijx.s[597]++;chai.assert.equal(keyPair$$1.publicKey,test[1]);",
            "err": {},
            "isRoot": false,
            "uuid": "2c0db885-9b42-423d-9717-9d504a8a9a6f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Key Pair from WIF Kwo7LquQnM5Zq7UxDEKoMWTmbAkXLn5YqtWLwaTTbkTeU2pKZ1Yd",
            "fullTitle": "Testing HD Key Creating Key Pair from WIF Kwo7LquQnM5Zq7UxDEKoMWTmbAkXLn5YqtWLwaTTbkTeU2pKZ1Yd",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[104]++;const keyPair$$1=(cov_2ajjpr0ijx.s[596]++,await fromWif(test[0],network$3));cov_2ajjpr0ijx.s[597]++;chai.assert.equal(keyPair$$1.publicKey,test[1]);",
            "err": {},
            "isRoot": false,
            "uuid": "1273ac47-a7ce-42cb-b9de-4000e56d98ac",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Key Pair from WIF L22QEFSQNbnHfRc2s4geN2pDbYYoKLkevrf6okBDUB6rDcXLxeHS",
            "fullTitle": "Testing HD Key Creating Key Pair from WIF L22QEFSQNbnHfRc2s4geN2pDbYYoKLkevrf6okBDUB6rDcXLxeHS",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[104]++;const keyPair$$1=(cov_2ajjpr0ijx.s[596]++,await fromWif(test[0],network$3));cov_2ajjpr0ijx.s[597]++;chai.assert.equal(keyPair$$1.publicKey,test[1]);",
            "err": {},
            "isRoot": false,
            "uuid": "2198e062-779c-421a-9711-fbd63d4fe517",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Key Pair from WIF Kwngkbfm8AKmp1VHEnAdHGJPcmDPVALX4ydrBrEdTzYuNm6M4EpJ",
            "fullTitle": "Testing HD Key Creating Key Pair from WIF Kwngkbfm8AKmp1VHEnAdHGJPcmDPVALX4ydrBrEdTzYuNm6M4EpJ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[104]++;const keyPair$$1=(cov_2ajjpr0ijx.s[596]++,await fromWif(test[0],network$3));cov_2ajjpr0ijx.s[597]++;chai.assert.equal(keyPair$$1.publicKey,test[1]);",
            "err": {},
            "isRoot": false,
            "uuid": "74a003ff-4978-4f21-afaf-f50bb21c50c0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Key Pair from WIF KzC6waAr74TaGJjuYGFQAikbm3H5aCNebV5xStiEKgADzDD4Xi3C",
            "fullTitle": "Testing HD Key Creating Key Pair from WIF KzC6waAr74TaGJjuYGFQAikbm3H5aCNebV5xStiEKgADzDD4Xi3C",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[104]++;const keyPair$$1=(cov_2ajjpr0ijx.s[596]++,await fromWif(test[0],network$3));cov_2ajjpr0ijx.s[597]++;chai.assert.equal(keyPair$$1.publicKey,test[1]);",
            "err": {},
            "isRoot": false,
            "uuid": "04c89204-3848-40ad-bcff-886b66102664",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Key Pair from WIF KzkH8BMjjgmvHbCGTcPfkuBKGPrTE1M2Xs6wKJ92j4DFwbvHyC4D",
            "fullTitle": "Testing HD Key Creating Key Pair from WIF KzkH8BMjjgmvHbCGTcPfkuBKGPrTE1M2Xs6wKJ92j4DFwbvHyC4D",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[104]++;const keyPair$$1=(cov_2ajjpr0ijx.s[596]++,await fromWif(test[0],network$3));cov_2ajjpr0ijx.s[597]++;chai.assert.equal(keyPair$$1.publicKey,test[1]);",
            "err": {},
            "isRoot": false,
            "uuid": "d533e060-bd5c-43b7-a668-e7414619a897",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2c0db885-9b42-423d-9717-9d504a8a9a6f",
          "1273ac47-a7ce-42cb-b9de-4000e56d98ac",
          "2198e062-779c-421a-9711-fbd63d4fe517",
          "74a003ff-4978-4f21-afaf-f50bb21c50c0",
          "04c89204-3848-40ad-bcff-886b66102664",
          "d533e060-bd5c-43b7-a668-e7414619a897"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 6,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "484588a7-fb4d-4626-a082-74c4c101a446",
        "title": "Testing base 58",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Decode valid string: 1AGNa15ZQXAZUgFiqJ2i7Z2DPU2J6hW62i",
            "fullTitle": "Testing base 58 Decode valid string: 1AGNa15ZQXAZUgFiqJ2i7Z2DPU2J6hW62i",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "896f9ca9-6b2a-45d2-b83c-e8eddd69b7aa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 0065a16059864a2fdbc7c99a4723a8395bc6f188eb",
            "fullTitle": "Testing base 58 Encode valid payload: 0065a16059864a2fdbc7c99a4723a8395bc6f188eb",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "9050fd0d-9101-4db3-9034-f028b1a3267a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 3CMNFxN1oHBc4R1EpboAL5yzHGgE611Xou",
            "fullTitle": "Testing base 58 Decode valid string: 3CMNFxN1oHBc4R1EpboAL5yzHGgE611Xou",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "05e9fb5a-bd40-4159-a655-79b28ccd7f87",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 0574f209f6ea907e2ea48f74fae05782ae8a665257",
            "fullTitle": "Testing base 58 Encode valid payload: 0574f209f6ea907e2ea48f74fae05782ae8a665257",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "97b461f6-d0ae-4d28-b4aa-dd276f7f2987",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: mo9ncXisMeAoXwqcV5EWuyncbmCcQN4rVs",
            "fullTitle": "Testing base 58 Decode valid string: mo9ncXisMeAoXwqcV5EWuyncbmCcQN4rVs",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "23235521-87ca-488f-b03d-c0e6f2081ed6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6f53c0307d6851aa0ce7825ba883c6bd9ad242b486",
            "fullTitle": "Testing base 58 Encode valid payload: 6f53c0307d6851aa0ce7825ba883c6bd9ad242b486",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "1146899e-b995-4046-95f7-fe3975e128e3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2N2JD6wb56AfK4tfmM6PwdVmoYk2dCKf4Br",
            "fullTitle": "Testing base 58 Decode valid string: 2N2JD6wb56AfK4tfmM6PwdVmoYk2dCKf4Br",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "b40be441-5fd8-4c8e-83ed-44488cc2ca42",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c46349a418fc4578d10a372b54b45c280cc8c4382f",
            "fullTitle": "Testing base 58 Encode valid payload: c46349a418fc4578d10a372b54b45c280cc8c4382f",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "807abcbd-8c8a-408a-8f4e-f55ff9fccde0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5Kd3NBUAdUnhyzenEwVLy9pBKxSwXvE9FMPyR4UKZvpe6E3AgLr",
            "fullTitle": "Testing base 58 Decode valid string: 5Kd3NBUAdUnhyzenEwVLy9pBKxSwXvE9FMPyR4UKZvpe6E3AgLr",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "d2346090-d0c9-4bf7-8612-033845cfc4a2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80eddbdc1168f1daeadbd3e44c1e3f8f5a284c2029f78ad26af98583a499de5b19",
            "fullTitle": "Testing base 58 Encode valid payload: 80eddbdc1168f1daeadbd3e44c1e3f8f5a284c2029f78ad26af98583a499de5b19",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "7fb8cc9f-832d-459d-acab-b2fe49b525f1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: Kz6UJmQACJmLtaQj5A3JAge4kVTNQ8gbvXuwbmCj7bsaabudb3RD",
            "fullTitle": "Testing base 58 Decode valid string: Kz6UJmQACJmLtaQj5A3JAge4kVTNQ8gbvXuwbmCj7bsaabudb3RD",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "13833053-623c-41dd-9eff-60d86f53f0e5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 8055c9bccb9ed68446d1b75273bbce89d7fe013a8acd1625514420fb2aca1a21c401",
            "fullTitle": "Testing base 58 Encode valid payload: 8055c9bccb9ed68446d1b75273bbce89d7fe013a8acd1625514420fb2aca1a21c401",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "1c425b60-983a-4340-9396-439d2d0108f9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 9213qJab2HNEpMpYNBa7wHGFKKbkDn24jpANDs2huN3yi4J11ko",
            "fullTitle": "Testing base 58 Decode valid string: 9213qJab2HNEpMpYNBa7wHGFKKbkDn24jpANDs2huN3yi4J11ko",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "3bf1b4b3-980f-49ed-bac8-838b3543f41a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: ef36cb93b9ab1bdabf7fb9f2c04f1b9cc879933530ae7842398eef5a63a56800c2",
            "fullTitle": "Testing base 58 Encode valid payload: ef36cb93b9ab1bdabf7fb9f2c04f1b9cc879933530ae7842398eef5a63a56800c2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "726d3d97-bb78-43a2-aea6-9c672c58d999",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cTpB4YiyKiBcPxnefsDpbnDxFDffjqJob8wGCEDXxgQ7zQoMXJdH",
            "fullTitle": "Testing base 58 Decode valid string: cTpB4YiyKiBcPxnefsDpbnDxFDffjqJob8wGCEDXxgQ7zQoMXJdH",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "e1436416-2425-4d89-b8c9-c8a315c86ad9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efb9f4892c9e8282028fea1d2667c4dc5213564d41fc5783896a0d843fc15089f301",
            "fullTitle": "Testing base 58 Encode valid payload: efb9f4892c9e8282028fea1d2667c4dc5213564d41fc5783896a0d843fc15089f301",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "a40e7660-da92-4ea4-a163-4df570f24271",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 1Ax4gZtb7gAit2TivwejZHYtNNLT18PUXJ",
            "fullTitle": "Testing base 58 Decode valid string: 1Ax4gZtb7gAit2TivwejZHYtNNLT18PUXJ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "bc9b80ba-1c9c-4c1a-8d35-417c256eb3df",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 006d23156cbbdcc82a5a47eee4c2c7c583c18b6bf4",
            "fullTitle": "Testing base 58 Encode valid payload: 006d23156cbbdcc82a5a47eee4c2c7c583c18b6bf4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "0cccae4e-cbfe-4326-b67e-11f1ab32100a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 3QjYXhTkvuj8qPaXHTTWb5wjXhdsLAAWVy",
            "fullTitle": "Testing base 58 Decode valid string: 3QjYXhTkvuj8qPaXHTTWb5wjXhdsLAAWVy",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "34498f32-1bf6-48b3-9c7b-29e7b06e9f15",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 05fcc5460dd6e2487c7d75b1963625da0e8f4c5975",
            "fullTitle": "Testing base 58 Encode valid payload: 05fcc5460dd6e2487c7d75b1963625da0e8f4c5975",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "3055e172-d901-4484-a972-0510db3c7c97",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: n3ZddxzLvAY9o7184TB4c6FJasAybsw4HZ",
            "fullTitle": "Testing base 58 Decode valid string: n3ZddxzLvAY9o7184TB4c6FJasAybsw4HZ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "978271b3-7fc1-4c77-837d-ac1190d7f64a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6ff1d470f9b02370fdec2e6b708b08ac431bf7a5f7",
            "fullTitle": "Testing base 58 Encode valid payload: 6ff1d470f9b02370fdec2e6b708b08ac431bf7a5f7",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "67e860e0-5729-4c0d-8291-709929cca4e5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2NBFNJTktNa7GZusGbDbGKRZTxdK9VVez3n",
            "fullTitle": "Testing base 58 Decode valid string: 2NBFNJTktNa7GZusGbDbGKRZTxdK9VVez3n",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "6c8ddc5e-85cb-41ed-b1c5-a9926a4454ee",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c4c579342c2c4c9220205e2cdc285617040c924a0a",
            "fullTitle": "Testing base 58 Encode valid payload: c4c579342c2c4c9220205e2cdc285617040c924a0a",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "ccf8bde1-f6ba-4c67-92c3-1179b0bdeae5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5K494XZwps2bGyeL71pWid4noiSNA2cfCibrvRWqcHSptoFn7rc",
            "fullTitle": "Testing base 58 Decode valid string: 5K494XZwps2bGyeL71pWid4noiSNA2cfCibrvRWqcHSptoFn7rc",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "df39638b-55c2-4777-9a9f-051eba7508cf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80a326b95ebae30164217d7a7f57d72ab2b54e3be64928a19da0210b9568d4015e",
            "fullTitle": "Testing base 58 Encode valid payload: 80a326b95ebae30164217d7a7f57d72ab2b54e3be64928a19da0210b9568d4015e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "4c031747-d9cc-4c83-adee-d096fd918cae",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: L1RrrnXkcKut5DEMwtDthjwRcTTwED36thyL1DebVrKuwvohjMNi",
            "fullTitle": "Testing base 58 Decode valid string: L1RrrnXkcKut5DEMwtDthjwRcTTwED36thyL1DebVrKuwvohjMNi",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "4f1630b8-6eea-4213-a856-7439d0808c5d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 807d998b45c219a1e38e99e7cbd312ef67f77a455a9b50c730c27f02c6f730dfb401",
            "fullTitle": "Testing base 58 Encode valid payload: 807d998b45c219a1e38e99e7cbd312ef67f77a455a9b50c730c27f02c6f730dfb401",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "b106c79d-e4f4-490d-a122-52ef3e96b56b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 93DVKyFYwSN6wEo3E2fCrFPUp17FtrtNi2Lf7n4G3garFb16CRj",
            "fullTitle": "Testing base 58 Decode valid string: 93DVKyFYwSN6wEo3E2fCrFPUp17FtrtNi2Lf7n4G3garFb16CRj",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "10b9848b-be84-4b6d-9ad9-ccd0949ed1ab",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efd6bca256b5abc5602ec2e1c121a08b0da2556587430bcf7e1898af2224885203",
            "fullTitle": "Testing base 58 Encode valid payload: efd6bca256b5abc5602ec2e1c121a08b0da2556587430bcf7e1898af2224885203",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "0e514db0-c3b1-4bb7-82b2-bdc325219971",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cTDVKtMGVYWTHCb1AFjmVbEbWjvKpKqKgMaR3QJxToMSQAhmCeTN",
            "fullTitle": "Testing base 58 Decode valid string: cTDVKtMGVYWTHCb1AFjmVbEbWjvKpKqKgMaR3QJxToMSQAhmCeTN",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "f062b1bb-31b1-4982-8d5a-cfa8aff69bfd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efa81ca4e8f90181ec4b61b6a7eb998af17b2cb04de8a03b504b9e34c4c61db7d901",
            "fullTitle": "Testing base 58 Encode valid payload: efa81ca4e8f90181ec4b61b6a7eb998af17b2cb04de8a03b504b9e34c4c61db7d901",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "9ba2d0d2-4926-4988-bc46-90c0ce886cd8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 1C5bSj1iEGUgSTbziymG7Cn18ENQuT36vv",
            "fullTitle": "Testing base 58 Decode valid string: 1C5bSj1iEGUgSTbziymG7Cn18ENQuT36vv",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "e4c04e3b-792c-4175-9c34-5e5c9f59a0c1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 007987ccaa53d02c8873487ef919677cd3db7a6912",
            "fullTitle": "Testing base 58 Encode valid payload: 007987ccaa53d02c8873487ef919677cd3db7a6912",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "5c5487fe-ca1e-4cc5-b37f-a872f04c80b6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 3AnNxabYGoTxYiTEZwFEnerUoeFXK2Zoks",
            "fullTitle": "Testing base 58 Decode valid string: 3AnNxabYGoTxYiTEZwFEnerUoeFXK2Zoks",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "a3e4d867-091a-474c-aea2-6fdb5a98cce6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 0563bcc565f9e68ee0189dd5cc67f1b0e5f02f45cb",
            "fullTitle": "Testing base 58 Encode valid payload: 0563bcc565f9e68ee0189dd5cc67f1b0e5f02f45cb",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "34964472-5ca7-49fc-9f2f-0e37f60126ce",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: n3LnJXCqbPjghuVs8ph9CYsAe4Sh4j97wk",
            "fullTitle": "Testing base 58 Decode valid string: n3LnJXCqbPjghuVs8ph9CYsAe4Sh4j97wk",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "0a78b0d4-621c-4c6f-84a8-40d239f679fd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6fef66444b5b17f14e8fae6e7e19b045a78c54fd79",
            "fullTitle": "Testing base 58 Encode valid payload: 6fef66444b5b17f14e8fae6e7e19b045a78c54fd79",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "91b215ae-7bb9-448e-8dc2-40c15c18f84f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2NB72XtkjpnATMggui83aEtPawyyKvnbX2o",
            "fullTitle": "Testing base 58 Decode valid string: 2NB72XtkjpnATMggui83aEtPawyyKvnbX2o",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "e67c77a0-0945-4d6d-8d85-132c4e0068ba",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c4c3e55fceceaa4391ed2a9677f4a4d34eacd021a0",
            "fullTitle": "Testing base 58 Encode valid payload: c4c3e55fceceaa4391ed2a9677f4a4d34eacd021a0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "90c481bd-41b4-44fe-ae17-3c9bdf6dd55d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5KaBW9vNtWNhc3ZEDyNCiXLPdVPHCikRxSBWwV9NrpLLa4LsXi9",
            "fullTitle": "Testing base 58 Decode valid string: 5KaBW9vNtWNhc3ZEDyNCiXLPdVPHCikRxSBWwV9NrpLLa4LsXi9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "0ad0adb6-71df-423a-8c48-1ccdfe0dc845",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80e75d936d56377f432f404aabb406601f892fd49da90eb6ac558a733c93b47252",
            "fullTitle": "Testing base 58 Encode valid payload: 80e75d936d56377f432f404aabb406601f892fd49da90eb6ac558a733c93b47252",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "17f56a79-4c59-405d-8eb5-6282d16f122b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: L1axzbSyynNYA8mCAhzxkipKkfHtAXYF4YQnhSKcLV8YXA874fgT",
            "fullTitle": "Testing base 58 Decode valid string: L1axzbSyynNYA8mCAhzxkipKkfHtAXYF4YQnhSKcLV8YXA874fgT",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "ad82c3c6-1a21-478e-8852-49ff49d6033b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 808248bd0375f2f75d7e274ae544fb920f51784480866b102384190b1addfbaa5c01",
            "fullTitle": "Testing base 58 Encode valid payload: 808248bd0375f2f75d7e274ae544fb920f51784480866b102384190b1addfbaa5c01",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "96771ddf-99f3-417c-aef5-1b1aeb8bd601",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 927CnUkUbasYtDwYwVn2j8GdTuACNnKkjZ1rpZd2yBB1CLcnXpo",
            "fullTitle": "Testing base 58 Decode valid string: 927CnUkUbasYtDwYwVn2j8GdTuACNnKkjZ1rpZd2yBB1CLcnXpo",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "bd32c1f4-76b8-4965-a2ab-0fe5fa34f8fe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: ef44c4f6a096eac5238291a94cc24c01e3b19b8d8cef72874a079e00a242237a52",
            "fullTitle": "Testing base 58 Encode valid payload: ef44c4f6a096eac5238291a94cc24c01e3b19b8d8cef72874a079e00a242237a52",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "6251e7b0-604c-4a99-ba12-a8de302d948a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cUcfCMRjiQf85YMzzQEk9d1s5A4K7xL5SmBCLrezqXFuTVefyhY7",
            "fullTitle": "Testing base 58 Decode valid string: cUcfCMRjiQf85YMzzQEk9d1s5A4K7xL5SmBCLrezqXFuTVefyhY7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "d20ced85-8c99-453f-828f-337cbf4d7f33",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efd1de707020a9059d6d3abaf85e17967c6555151143db13dbb06db78df0f15c6901",
            "fullTitle": "Testing base 58 Encode valid payload: efd1de707020a9059d6d3abaf85e17967c6555151143db13dbb06db78df0f15c6901",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "49b7b7cf-be08-4d50-a871-9c2de0601283",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 1Gqk4Tv79P91Cc1STQtU3s1W6277M2CVWu",
            "fullTitle": "Testing base 58 Decode valid string: 1Gqk4Tv79P91Cc1STQtU3s1W6277M2CVWu",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "07ded6e4-1cea-417c-9ddb-388319ce3dc6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 00adc1cc2081a27206fae25792f28bbc55b831549d",
            "fullTitle": "Testing base 58 Encode valid payload: 00adc1cc2081a27206fae25792f28bbc55b831549d",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "d6d1cb04-5582-4c96-85da-3ece9567a84a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 33vt8ViH5jsr115AGkW6cEmEz9MpvJSwDk",
            "fullTitle": "Testing base 58 Decode valid string: 33vt8ViH5jsr115AGkW6cEmEz9MpvJSwDk",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "f9ca0fa1-6400-4323-b84b-8bcd3814720b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 05188f91a931947eddd7432d6e614387e32b244709",
            "fullTitle": "Testing base 58 Encode valid payload: 05188f91a931947eddd7432d6e614387e32b244709",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "f0f44945-e3d3-4e0d-9ea5-71e6711205ad",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: mhaMcBxNh5cqXm4aTQ6EcVbKtfL6LGyK2H",
            "fullTitle": "Testing base 58 Decode valid string: mhaMcBxNh5cqXm4aTQ6EcVbKtfL6LGyK2H",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "13199770-27b8-45fd-a3ae-e4432612d5d4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6f1694f5bc1a7295b600f40018a618a6ea48eeb498",
            "fullTitle": "Testing base 58 Encode valid payload: 6f1694f5bc1a7295b600f40018a618a6ea48eeb498",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "a4448cd2-c495-4b1b-9eff-ca68bf7d581a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2MxgPqX1iThW3oZVk9KoFcE5M4JpiETssVN",
            "fullTitle": "Testing base 58 Decode valid string: 2MxgPqX1iThW3oZVk9KoFcE5M4JpiETssVN",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "5edcdd55-d85b-4801-a1c9-fdc72d3ce6fe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c43b9b3fd7a50d4f08d1a5b0f62f644fa7115ae2f3",
            "fullTitle": "Testing base 58 Encode valid payload: c43b9b3fd7a50d4f08d1a5b0f62f644fa7115ae2f3",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "4f4f9fa3-20cc-46a3-a5b1-632756ec58b8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5HtH6GdcwCJA4ggWEL1B3jzBBUB8HPiBi9SBc5h9i4Wk4PSeApR",
            "fullTitle": "Testing base 58 Decode valid string: 5HtH6GdcwCJA4ggWEL1B3jzBBUB8HPiBi9SBc5h9i4Wk4PSeApR",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "2e1a4556-8c46-415b-8f21-201be383d8f0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80091035445ef105fa1bb125eccfb1882f3fe69592265956ade751fd095033d8d0",
            "fullTitle": "Testing base 58 Encode valid payload: 80091035445ef105fa1bb125eccfb1882f3fe69592265956ade751fd095033d8d0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "94c18e74-89c0-4ddd-912a-aeedab843aea",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: L2xSYmMeVo3Zek3ZTsv9xUrXVAmrWxJ8Ua4cw8pkfbQhcEFhkXT8",
            "fullTitle": "Testing base 58 Decode valid string: L2xSYmMeVo3Zek3ZTsv9xUrXVAmrWxJ8Ua4cw8pkfbQhcEFhkXT8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "e3ac578b-9950-43dc-be30-373f24a1b364",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80ab2b4bcdfc91d34dee0ae2a8c6b6668dadaeb3a88b9859743156f462325187af01",
            "fullTitle": "Testing base 58 Encode valid payload: 80ab2b4bcdfc91d34dee0ae2a8c6b6668dadaeb3a88b9859743156f462325187af01",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "dacd98a0-6c66-4a65-bf2f-a103366f8f70",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 92xFEve1Z9N8Z641KQQS7ByCSb8kGjsDzw6fAmjHN1LZGKQXyMq",
            "fullTitle": "Testing base 58 Decode valid string: 92xFEve1Z9N8Z641KQQS7ByCSb8kGjsDzw6fAmjHN1LZGKQXyMq",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "c899545a-20ff-4f67-bcca-3839156b0b79",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efb4204389cef18bbe2b353623cbf93e8678fbc92a475b664ae98ed594e6cf0856",
            "fullTitle": "Testing base 58 Encode valid payload: efb4204389cef18bbe2b353623cbf93e8678fbc92a475b664ae98ed594e6cf0856",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "02b4740a-bbd3-4619-9ba0-fd1be0dea519",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cVM65tdYu1YK37tNoAyGoJTR13VBYFva1vg9FLuPAsJijGvG6NEA",
            "fullTitle": "Testing base 58 Decode valid string: cVM65tdYu1YK37tNoAyGoJTR13VBYFva1vg9FLuPAsJijGvG6NEA",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "bc670b80-3570-4847-8056-95645ded96c8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efe7b230133f1b5489843260236b06edca25f66adb1be455fbd38d4010d48faeef01",
            "fullTitle": "Testing base 58 Encode valid payload: efe7b230133f1b5489843260236b06edca25f66adb1be455fbd38d4010d48faeef01",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "7ff6dcc2-886b-4b2e-92cf-4a72514b3485",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 1JwMWBVLtiqtscbaRHai4pqHokhFCbtoB4",
            "fullTitle": "Testing base 58 Decode valid string: 1JwMWBVLtiqtscbaRHai4pqHokhFCbtoB4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "27fd06ff-a287-443d-a05b-fad118bca99b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 00c4c1b72491ede1eedaca00618407ee0b772cad0d",
            "fullTitle": "Testing base 58 Encode valid payload: 00c4c1b72491ede1eedaca00618407ee0b772cad0d",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "f5a9f3fc-de67-48af-afd2-9a026057af8f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 3QCzvfL4ZRvmJFiWWBVwxfdaNBT8EtxB5y",
            "fullTitle": "Testing base 58 Decode valid string: 3QCzvfL4ZRvmJFiWWBVwxfdaNBT8EtxB5y",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "f50d0151-3903-4921-9fad-213000fd61e5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 05f6fe69bcb548a829cce4c57bf6fff8af3a5981f9",
            "fullTitle": "Testing base 58 Encode valid payload: 05f6fe69bcb548a829cce4c57bf6fff8af3a5981f9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "0fd2106b-9674-491a-903f-dcf18e51fef0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: mizXiucXRCsEriQCHUkCqef9ph9qtPbZZ6",
            "fullTitle": "Testing base 58 Decode valid string: mizXiucXRCsEriQCHUkCqef9ph9qtPbZZ6",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "3d038648-31ab-43b7-8828-7ee63bb97096",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6f261f83568a098a8638844bd7aeca039d5f2352c0",
            "fullTitle": "Testing base 58 Encode valid payload: 6f261f83568a098a8638844bd7aeca039d5f2352c0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "9b902ffc-7d28-4d31-bde0-0a93bd031342",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2NEWDzHWwY5ZZp8CQWbB7ouNMLqCia6YRda",
            "fullTitle": "Testing base 58 Decode valid string: 2NEWDzHWwY5ZZp8CQWbB7ouNMLqCia6YRda",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "ba72270d-1a75-4d49-aeb2-e6dbc208fd92",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c4e930e1834a4d234702773951d627cce82fbb5d2e",
            "fullTitle": "Testing base 58 Encode valid payload: c4e930e1834a4d234702773951d627cce82fbb5d2e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "9aab0ed2-d421-498d-bc31-045cecccf4f7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5KQmDryMNDcisTzRp3zEq9e4awRmJrEVU1j5vFRTKpRNYPqYrMg",
            "fullTitle": "Testing base 58 Decode valid string: 5KQmDryMNDcisTzRp3zEq9e4awRmJrEVU1j5vFRTKpRNYPqYrMg",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "31c06531-f3b0-404d-9e22-d81c82001772",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80d1fab7ab7385ad26872237f1eb9789aa25cc986bacc695e07ac571d6cdac8bc0",
            "fullTitle": "Testing base 58 Encode valid payload: 80d1fab7ab7385ad26872237f1eb9789aa25cc986bacc695e07ac571d6cdac8bc0",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "4662049a-b9a8-4a2b-a0fe-f38b3ae30051",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: L39Fy7AC2Hhj95gh3Yb2AU5YHh1mQSAHgpNixvm27poizcJyLtUi",
            "fullTitle": "Testing base 58 Decode valid string: L39Fy7AC2Hhj95gh3Yb2AU5YHh1mQSAHgpNixvm27poizcJyLtUi",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "d78999ea-0fdc-4935-9e57-e152818bc2bd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80b0bbede33ef254e8376aceb1510253fc3550efd0fcf84dcd0c9998b288f166b301",
            "fullTitle": "Testing base 58 Encode valid payload: 80b0bbede33ef254e8376aceb1510253fc3550efd0fcf84dcd0c9998b288f166b301",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "83a95701-d611-400d-81b1-bd7a46bdafee",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 91cTVUcgydqyZLgaANpf1fvL55FH53QMm4BsnCADVNYuWuqdVys",
            "fullTitle": "Testing base 58 Decode valid string: 91cTVUcgydqyZLgaANpf1fvL55FH53QMm4BsnCADVNYuWuqdVys",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "b2317e98-3cd2-4124-b2de-d53d23654642",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: ef037f4192c630f399d9271e26c575269b1d15be553ea1a7217f0cb8513cef41cb",
            "fullTitle": "Testing base 58 Encode valid payload: ef037f4192c630f399d9271e26c575269b1d15be553ea1a7217f0cb8513cef41cb",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "a4f1ed84-5c6a-48f2-a632-002802b01394",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cQspfSzsgLeiJGB2u8vrAiWpCU4MxUT6JseWo2SjXy4Qbzn2fwDw",
            "fullTitle": "Testing base 58 Decode valid string: cQspfSzsgLeiJGB2u8vrAiWpCU4MxUT6JseWo2SjXy4Qbzn2fwDw",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "a8796903-59cb-4f1a-be09-6a4861067b32",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: ef6251e205e8ad508bab5596bee086ef16cd4b239e0cc0c5d7c4e6035441e7d5de01",
            "fullTitle": "Testing base 58 Encode valid payload: ef6251e205e8ad508bab5596bee086ef16cd4b239e0cc0c5d7c4e6035441e7d5de01",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "fec7b11d-9d2f-423f-914b-c07ceaffa2b3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 19dcawoKcZdQz365WpXWMhX6QCUpR9SY4r",
            "fullTitle": "Testing base 58 Decode valid string: 19dcawoKcZdQz365WpXWMhX6QCUpR9SY4r",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "edd8bddb-6939-4520-b9ef-379fa2d3a703",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 005eadaf9bb7121f0f192561a5a62f5e5f54210292",
            "fullTitle": "Testing base 58 Encode valid payload: 005eadaf9bb7121f0f192561a5a62f5e5f54210292",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "49019274-e75f-4c99-8766-cf19310eb9cc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 37Sp6Rv3y4kVd1nQ1JV5pfqXccHNyZm1x3",
            "fullTitle": "Testing base 58 Decode valid string: 37Sp6Rv3y4kVd1nQ1JV5pfqXccHNyZm1x3",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "5520454d-9d3c-47e2-a2a8-b87d1dc92e1f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 053f210e7277c899c3a155cc1c90f4106cbddeec6e",
            "fullTitle": "Testing base 58 Encode valid payload: 053f210e7277c899c3a155cc1c90f4106cbddeec6e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "b41c14d5-96b2-4c16-8407-131b538f1293",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: myoqcgYiehufrsnnkqdqbp69dddVDMopJu",
            "fullTitle": "Testing base 58 Decode valid string: myoqcgYiehufrsnnkqdqbp69dddVDMopJu",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "0ae35767-2a00-4604-8e8c-213419415aa3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6fc8a3c2a09a298592c3e180f02487cd91ba3400b5",
            "fullTitle": "Testing base 58 Encode valid payload: 6fc8a3c2a09a298592c3e180f02487cd91ba3400b5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "6c110a2a-bd6e-4c75-9182-076a8913d135",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2N7FuwuUuoTBrDFdrAZ9KxBmtqMLxce9i1C",
            "fullTitle": "Testing base 58 Decode valid string: 2N7FuwuUuoTBrDFdrAZ9KxBmtqMLxce9i1C",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "7b591ef6-187c-4c33-aaf9-6cf065c5c2b9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c499b31df7c9068d1481b596578ddbb4d3bd90baeb",
            "fullTitle": "Testing base 58 Encode valid payload: c499b31df7c9068d1481b596578ddbb4d3bd90baeb",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "109db6db-a98e-43b5-8ede-fe768aee82fb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5KL6zEaMtPRXZKo1bbMq7JDjjo1bJuQcsgL33je3oY8uSJCR5b4",
            "fullTitle": "Testing base 58 Decode valid string: 5KL6zEaMtPRXZKo1bbMq7JDjjo1bJuQcsgL33je3oY8uSJCR5b4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "cec2bec8-5d60-4577-bb03-362785222400",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80c7666842503db6dc6ea061f092cfb9c388448629a6fe868d068c42a488b478ae",
            "fullTitle": "Testing base 58 Encode valid payload: 80c7666842503db6dc6ea061f092cfb9c388448629a6fe868d068c42a488b478ae",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "e534058e-e5d8-41ab-b76a-239c9d768440",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: KwV9KAfwbwt51veZWNscRTeZs9CKpojyu1MsPnaKTF5kz69H1UN2",
            "fullTitle": "Testing base 58 Decode valid string: KwV9KAfwbwt51veZWNscRTeZs9CKpojyu1MsPnaKTF5kz69H1UN2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "4cc1b3a7-9521-44b2-94dc-a8ecafa2708a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 8007f0803fc5399e773555ab1e8939907e9badacc17ca129e67a2f5f2ff84351dd01",
            "fullTitle": "Testing base 58 Encode valid payload: 8007f0803fc5399e773555ab1e8939907e9badacc17ca129e67a2f5f2ff84351dd01",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "b34735b9-e5ac-40c1-8b97-5311df9c77ec",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 93N87D6uxSBzwXvpokpzg8FFmfQPmvX4xHoWQe3pLdYpbiwT5YV",
            "fullTitle": "Testing base 58 Decode valid string: 93N87D6uxSBzwXvpokpzg8FFmfQPmvX4xHoWQe3pLdYpbiwT5YV",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "1404d103-ad64-4c72-93bd-7a8f60bc695b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efea577acfb5d1d14d3b7b195c321566f12f87d2b77ea3a53f68df7ebf8604a801",
            "fullTitle": "Testing base 58 Encode valid payload: efea577acfb5d1d14d3b7b195c321566f12f87d2b77ea3a53f68df7ebf8604a801",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "53f94311-de11-483a-90a8-e90310d6aaa0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cMxXusSihaX58wpJ3tNuuUcZEQGt6DKJ1wEpxys88FFaQCYjku9h",
            "fullTitle": "Testing base 58 Decode valid string: cMxXusSihaX58wpJ3tNuuUcZEQGt6DKJ1wEpxys88FFaQCYjku9h",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "f59e7b48-9f37-48a3-89fe-9638ad7825d5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: ef0b3b34f0958d8a268193a9814da92c3e8b58b4a4378a542863e34ac289cd830c01",
            "fullTitle": "Testing base 58 Encode valid payload: ef0b3b34f0958d8a268193a9814da92c3e8b58b4a4378a542863e34ac289cd830c01",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "e5075519-bbed-4808-b5bb-83c15a8a536c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 13p1ijLwsnrcuyqcTvJXkq2ASdXqcnEBLE",
            "fullTitle": "Testing base 58 Decode valid string: 13p1ijLwsnrcuyqcTvJXkq2ASdXqcnEBLE",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "8708443c-b5fc-4be2-8d0d-e6ec6ff502e0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 001ed467017f043e91ed4c44b4e8dd674db211c4e6",
            "fullTitle": "Testing base 58 Encode valid payload: 001ed467017f043e91ed4c44b4e8dd674db211c4e6",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "19006e0c-5983-4818-b8b0-1bca0b599fb5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 3ALJH9Y951VCGcVZYAdpA3KchoP9McEj1G",
            "fullTitle": "Testing base 58 Decode valid string: 3ALJH9Y951VCGcVZYAdpA3KchoP9McEj1G",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[107]++;const resultedPaylod=(cov_2ajjpr0ijx.s[627]++,fixtureBase.decode(string));cov_2ajjpr0ijx.s[628]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "2084fa67-fdf7-4919-86a4-95594e790cb1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 055ece0cadddc415b1980f001785947120acdb36fc",
            "fullTitle": "Testing base 58 Encode valid payload: 055ece0cadddc415b1980f001785947120acdb36fc",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[108]++;const resultedString=(cov_2ajjpr0ijx.s[630]++,fixtureBase.encode(payload));cov_2ajjpr0ijx.s[631]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "214277b7-1726-4ea2-a587-e7980a9e1d65",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test invalid string: Z9inZq4e2HGQRZQezDjFMmqgUE8NwMRok",
            "fullTitle": "Testing base 58 Test invalid string: Z9inZq4e2HGQRZQezDjFMmqgUE8NwMRok",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[110]++;cov_2ajjpr0ijx.s[634]++;try{cov_2ajjpr0ijx.s[635]++;fixtureBase.decode(string);}catch(e){cov_2ajjpr0ijx.s[636]++;chai.assert.equal(e.message,exception);}",
            "err": {},
            "isRoot": false,
            "uuid": "4ed6a933-6a2e-4012-be88-60e4c7decc41",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test invalid string: 3HK7MezAm6qEZQUMPRf8jX7wDv6zig6Ky8",
            "fullTitle": "Testing base 58 Test invalid string: 3HK7MezAm6qEZQUMPRf8jX7wDv6zig6Ky8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[110]++;cov_2ajjpr0ijx.s[634]++;try{cov_2ajjpr0ijx.s[635]++;fixtureBase.decode(string);}catch(e){cov_2ajjpr0ijx.s[636]++;chai.assert.equal(e.message,exception);}",
            "err": {},
            "isRoot": false,
            "uuid": "05b95aec-2c83-425d-9fb2-2435535b4d2a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test invalid string: 3AW8j12DUk8mgA7kkfZ1BrrzCVFuH1LsXS",
            "fullTitle": "Testing base 58 Test invalid string: 3AW8j12DUk8mgA7kkfZ1BrrzCVFuH1LsXS",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[110]++;cov_2ajjpr0ijx.s[634]++;try{cov_2ajjpr0ijx.s[635]++;fixtureBase.decode(string);}catch(e){cov_2ajjpr0ijx.s[636]++;chai.assert.equal(e.message,exception);}",
            "err": {},
            "isRoot": false,
            "uuid": "5f89724a-b36d-48f1-a6a1-c49f998a7adc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test invalid string: #####",
            "fullTitle": "Testing base 58 Test invalid string: #####",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[110]++;cov_2ajjpr0ijx.s[634]++;try{cov_2ajjpr0ijx.s[635]++;fixtureBase.decode(string);}catch(e){cov_2ajjpr0ijx.s[636]++;chai.assert.equal(e.message,exception);}",
            "err": {},
            "isRoot": false,
            "uuid": "1ee4446c-5e07-4c3e-84e1-e36ccd18a6a5",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "896f9ca9-6b2a-45d2-b83c-e8eddd69b7aa",
          "9050fd0d-9101-4db3-9034-f028b1a3267a",
          "05e9fb5a-bd40-4159-a655-79b28ccd7f87",
          "97b461f6-d0ae-4d28-b4aa-dd276f7f2987",
          "23235521-87ca-488f-b03d-c0e6f2081ed6",
          "1146899e-b995-4046-95f7-fe3975e128e3",
          "b40be441-5fd8-4c8e-83ed-44488cc2ca42",
          "807abcbd-8c8a-408a-8f4e-f55ff9fccde0",
          "d2346090-d0c9-4bf7-8612-033845cfc4a2",
          "7fb8cc9f-832d-459d-acab-b2fe49b525f1",
          "13833053-623c-41dd-9eff-60d86f53f0e5",
          "1c425b60-983a-4340-9396-439d2d0108f9",
          "3bf1b4b3-980f-49ed-bac8-838b3543f41a",
          "726d3d97-bb78-43a2-aea6-9c672c58d999",
          "e1436416-2425-4d89-b8c9-c8a315c86ad9",
          "a40e7660-da92-4ea4-a163-4df570f24271",
          "bc9b80ba-1c9c-4c1a-8d35-417c256eb3df",
          "0cccae4e-cbfe-4326-b67e-11f1ab32100a",
          "34498f32-1bf6-48b3-9c7b-29e7b06e9f15",
          "3055e172-d901-4484-a972-0510db3c7c97",
          "978271b3-7fc1-4c77-837d-ac1190d7f64a",
          "67e860e0-5729-4c0d-8291-709929cca4e5",
          "6c8ddc5e-85cb-41ed-b1c5-a9926a4454ee",
          "ccf8bde1-f6ba-4c67-92c3-1179b0bdeae5",
          "df39638b-55c2-4777-9a9f-051eba7508cf",
          "4c031747-d9cc-4c83-adee-d096fd918cae",
          "4f1630b8-6eea-4213-a856-7439d0808c5d",
          "b106c79d-e4f4-490d-a122-52ef3e96b56b",
          "10b9848b-be84-4b6d-9ad9-ccd0949ed1ab",
          "0e514db0-c3b1-4bb7-82b2-bdc325219971",
          "f062b1bb-31b1-4982-8d5a-cfa8aff69bfd",
          "9ba2d0d2-4926-4988-bc46-90c0ce886cd8",
          "e4c04e3b-792c-4175-9c34-5e5c9f59a0c1",
          "5c5487fe-ca1e-4cc5-b37f-a872f04c80b6",
          "a3e4d867-091a-474c-aea2-6fdb5a98cce6",
          "34964472-5ca7-49fc-9f2f-0e37f60126ce",
          "0a78b0d4-621c-4c6f-84a8-40d239f679fd",
          "91b215ae-7bb9-448e-8dc2-40c15c18f84f",
          "e67c77a0-0945-4d6d-8d85-132c4e0068ba",
          "90c481bd-41b4-44fe-ae17-3c9bdf6dd55d",
          "0ad0adb6-71df-423a-8c48-1ccdfe0dc845",
          "17f56a79-4c59-405d-8eb5-6282d16f122b",
          "ad82c3c6-1a21-478e-8852-49ff49d6033b",
          "96771ddf-99f3-417c-aef5-1b1aeb8bd601",
          "bd32c1f4-76b8-4965-a2ab-0fe5fa34f8fe",
          "6251e7b0-604c-4a99-ba12-a8de302d948a",
          "d20ced85-8c99-453f-828f-337cbf4d7f33",
          "49b7b7cf-be08-4d50-a871-9c2de0601283",
          "07ded6e4-1cea-417c-9ddb-388319ce3dc6",
          "d6d1cb04-5582-4c96-85da-3ece9567a84a",
          "f9ca0fa1-6400-4323-b84b-8bcd3814720b",
          "f0f44945-e3d3-4e0d-9ea5-71e6711205ad",
          "13199770-27b8-45fd-a3ae-e4432612d5d4",
          "a4448cd2-c495-4b1b-9eff-ca68bf7d581a",
          "5edcdd55-d85b-4801-a1c9-fdc72d3ce6fe",
          "4f4f9fa3-20cc-46a3-a5b1-632756ec58b8",
          "2e1a4556-8c46-415b-8f21-201be383d8f0",
          "94c18e74-89c0-4ddd-912a-aeedab843aea",
          "e3ac578b-9950-43dc-be30-373f24a1b364",
          "dacd98a0-6c66-4a65-bf2f-a103366f8f70",
          "c899545a-20ff-4f67-bcca-3839156b0b79",
          "02b4740a-bbd3-4619-9ba0-fd1be0dea519",
          "bc670b80-3570-4847-8056-95645ded96c8",
          "7ff6dcc2-886b-4b2e-92cf-4a72514b3485",
          "27fd06ff-a287-443d-a05b-fad118bca99b",
          "f5a9f3fc-de67-48af-afd2-9a026057af8f",
          "f50d0151-3903-4921-9fad-213000fd61e5",
          "0fd2106b-9674-491a-903f-dcf18e51fef0",
          "3d038648-31ab-43b7-8828-7ee63bb97096",
          "9b902ffc-7d28-4d31-bde0-0a93bd031342",
          "ba72270d-1a75-4d49-aeb2-e6dbc208fd92",
          "9aab0ed2-d421-498d-bc31-045cecccf4f7",
          "31c06531-f3b0-404d-9e22-d81c82001772",
          "4662049a-b9a8-4a2b-a0fe-f38b3ae30051",
          "d78999ea-0fdc-4935-9e57-e152818bc2bd",
          "83a95701-d611-400d-81b1-bd7a46bdafee",
          "b2317e98-3cd2-4124-b2de-d53d23654642",
          "a4f1ed84-5c6a-48f2-a632-002802b01394",
          "a8796903-59cb-4f1a-be09-6a4861067b32",
          "fec7b11d-9d2f-423f-914b-c07ceaffa2b3",
          "edd8bddb-6939-4520-b9ef-379fa2d3a703",
          "49019274-e75f-4c99-8766-cf19310eb9cc",
          "5520454d-9d3c-47e2-a2a8-b87d1dc92e1f",
          "b41c14d5-96b2-4c16-8407-131b538f1293",
          "0ae35767-2a00-4604-8e8c-213419415aa3",
          "6c110a2a-bd6e-4c75-9182-076a8913d135",
          "7b591ef6-187c-4c33-aaf9-6cf065c5c2b9",
          "109db6db-a98e-43b5-8ede-fe768aee82fb",
          "cec2bec8-5d60-4577-bb03-362785222400",
          "e534058e-e5d8-41ab-b76a-239c9d768440",
          "4cc1b3a7-9521-44b2-94dc-a8ecafa2708a",
          "b34735b9-e5ac-40c1-8b97-5311df9c77ec",
          "1404d103-ad64-4c72-93bd-7a8f60bc695b",
          "53f94311-de11-483a-90a8-e90310d6aaa0",
          "f59e7b48-9f37-48a3-89fe-9638ad7825d5",
          "e5075519-bbed-4808-b5bb-83c15a8a536c",
          "8708443c-b5fc-4be2-8d0d-e6ec6ff502e0",
          "19006e0c-5983-4818-b8b0-1bca0b599fb5",
          "2084fa67-fdf7-4919-86a4-95594e790cb1",
          "214277b7-1726-4ea2-a587-e7980a9e1d65",
          "4ed6a933-6a2e-4012-be88-60e4c7decc41",
          "05b95aec-2c83-425d-9fb2-2435535b4d2a",
          "5f89724a-b36d-48f1-a6a1-c49f998a7adc",
          "1ee4446c-5e07-4c3e-84e1-e36ccd18a6a5"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 14,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "17e9ecfa-a82b-441c-ae26-8a328babc21b",
        "title": "Testing persister for scenario 1 with delay of 50ms",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Test using cache as a function",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms \"before all\" hook: Test using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[122]++;cov_2ajjpr0ijx.s[712]++;cbs.stop=false;cov_2ajjpr0ijx.s[713]++;await persistedCache({});cov_2ajjpr0ijx.s[714]++;await persistedCache(cache);",
            "err": {},
            "isRoot": false,
            "uuid": "cdc9095a-f004-4494-af35-f95ec353f59a",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Stop the caceh using cache as a function",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms \"after all\" hook: Stop the caceh using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[126]++;cov_2ajjpr0ijx.s[732]++;cbs.stop=true;cov_2ajjpr0ijx.s[733]++;await persistedCache('stop');",
            "err": {},
            "isRoot": false,
            "uuid": "54d2f7e4-5a01-44e1-869e-80e4a179d1d3",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Set 'a' to 5, after 50 milliseconds",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms Set 'a' to 5, after 50 milliseconds",
            "timedOut": false,
            "duration": 53,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "816136e7-45d7-416f-95a8-660428f9bd6e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 4, after 100 milliseconds",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms Set 'b' to 4, after 100 milliseconds",
            "timedOut": false,
            "duration": 54,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "955ee42b-7831-48ad-a413-e4bf0b641ad0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 3, after 150 milliseconds",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms Set 'c' to 3, after 150 milliseconds",
            "timedOut": false,
            "duration": 53,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "f259e5f8-bff8-4f7f-816c-2dd1780e1e5e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'd' to 2, after 200 milliseconds",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms Set 'd' to 2, after 200 milliseconds",
            "timedOut": false,
            "duration": 54,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "d43618d9-8d12-4dff-be5a-1dc05282656d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'e' to 1, after 250 milliseconds",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms Set 'e' to 1, after 250 milliseconds",
            "timedOut": false,
            "duration": 52,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "610940d1-e26a-41aa-8c2e-c40427dde349",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "816136e7-45d7-416f-95a8-660428f9bd6e",
          "955ee42b-7831-48ad-a413-e4bf0b641ad0",
          "f259e5f8-bff8-4f7f-816c-2dd1780e1e5e",
          "d43618d9-8d12-4dff-be5a-1dc05282656d",
          "610940d1-e26a-41aa-8c2e-c40427dde349"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 266,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      },
      {
        "uuid": "41dd821a-414c-4a5e-8166-7e27fe2463ef",
        "title": "Testing persister for scenario 2 with delay of 50ms",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Test using cache as a function",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms \"before all\" hook: Test using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[122]++;cov_2ajjpr0ijx.s[712]++;cbs.stop=false;cov_2ajjpr0ijx.s[713]++;await persistedCache({});cov_2ajjpr0ijx.s[714]++;await persistedCache(cache);",
            "err": {},
            "isRoot": false,
            "uuid": "8c5f298d-17b9-4c24-b5c4-267fbd3e2c3e",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Stop the caceh using cache as a function",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms \"after all\" hook: Stop the caceh using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[126]++;cov_2ajjpr0ijx.s[732]++;cbs.stop=true;cov_2ajjpr0ijx.s[733]++;await persistedCache('stop');",
            "err": {},
            "isRoot": false,
            "uuid": "de17ab0b-c95c-40aa-bffb-06e21b79a66d",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Set 'a' to 1, after 50 milliseconds",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms Set 'a' to 1, after 50 milliseconds",
            "timedOut": false,
            "duration": 53,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "efa7dfa5-f84f-442e-b280-a17738cf7f25",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 1, after 100 milliseconds",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms Set 'b' to 1, after 100 milliseconds",
            "timedOut": false,
            "duration": 54,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "d1badfdd-64c5-4fee-b61d-d7441a34350c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 1, after 150 milliseconds",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms Set 'a' to 1, after 150 milliseconds",
            "timedOut": false,
            "duration": 51,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "d7abb37c-6f18-4dc4-954b-a62799209946",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 2, after 200 milliseconds",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms Set 'b' to 2, after 200 milliseconds",
            "timedOut": false,
            "duration": 52,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "319d0977-202c-4ef9-9b9c-bc53fe55c027",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 3, after 250 milliseconds",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms Set 'c' to 3, after 250 milliseconds",
            "timedOut": false,
            "duration": 51,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "d9f65f1b-68d0-4f12-b270-3da2a8783509",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "efa7dfa5-f84f-442e-b280-a17738cf7f25",
          "d1badfdd-64c5-4fee-b61d-d7441a34350c",
          "d7abb37c-6f18-4dc4-954b-a62799209946",
          "319d0977-202c-4ef9-9b9c-bc53fe55c027",
          "d9f65f1b-68d0-4f12-b270-3da2a8783509"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 261,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      },
      {
        "uuid": "392fe24a-633d-4560-9715-00869c7bd932",
        "title": "Testing persister for scenario 3 with delay of 100ms",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Test using cache as a function",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms \"before all\" hook: Test using cache as a function",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[122]++;cov_2ajjpr0ijx.s[712]++;cbs.stop=false;cov_2ajjpr0ijx.s[713]++;await persistedCache({});cov_2ajjpr0ijx.s[714]++;await persistedCache(cache);",
            "err": {},
            "isRoot": false,
            "uuid": "86fa3e52-e0f2-471f-a692-b122473639ff",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Stop the caceh using cache as a function",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms \"after all\" hook: Stop the caceh using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[126]++;cov_2ajjpr0ijx.s[732]++;cbs.stop=true;cov_2ajjpr0ijx.s[733]++;await persistedCache('stop');",
            "err": {},
            "isRoot": false,
            "uuid": "03cc1936-9619-460d-ba9f-b2304d41a6b5",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Set 'a' to 10000, after 6 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 10000, after 6 milliseconds",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "33487614-f3e3-428b-a6d2-912721cdea57",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 1000, after 12 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 1000, after 12 milliseconds",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "56b25f25-b94b-4cb5-afa5-a0d8decfe371",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 100, after 18 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 100, after 18 milliseconds",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "d704833c-0b20-4dc6-bc18-96879388ba68",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 10, after 24 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 10, after 24 milliseconds",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "62a45fa2-346a-41b7-99af-57e988219a58",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 1, after 30 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 1, after 30 milliseconds",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "ec8bc51e-cbee-4fda-8201-7eaac511761c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 2, after 40 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'b' to 2, after 40 milliseconds",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "ae8bfc1b-aab8-4d32-9aee-f0049c3998bf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 3, after 60 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'c' to 3, after 60 milliseconds",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "0d936240-9ebc-4765-af8e-9850d55bc3d8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'd' to 4, after 80 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'd' to 4, after 80 milliseconds",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "5057a621-37e9-4034-94c1-c97d3ac33a15",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 10, after 110 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 10, after 110 milliseconds",
            "timedOut": false,
            "duration": 33,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "05e998b5-7171-4aef-a7f7-4424c544c862",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'e' to 5, after 120 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'e' to 5, after 120 milliseconds",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "fd9a1e58-a6b3-4608-86ca-3d7df9565abd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'z.a' to 200, after 150 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'z.a' to 200, after 150 milliseconds",
            "timedOut": false,
            "duration": 33,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "72dfd136-baf8-4972-b935-7fcbd4c0e3e7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'f' to 6, after 170 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'f' to 6, after 170 milliseconds",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "e2f76447-c13f-438c-9624-0740c959ffb8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'f' to 6, after 300 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'f' to 6, after 300 milliseconds",
            "timedOut": false,
            "duration": 130,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "6277fb6d-80c9-4138-a35a-7f0470d9d071",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 2, after 360 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'b' to 2, after 360 milliseconds",
            "timedOut": false,
            "duration": 61,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "f0f54108-f7b0-42d3-8486-fb6fe6798104",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'f' to 6, after 380 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'f' to 6, after 380 milliseconds",
            "timedOut": false,
            "duration": 26,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "2b124f1b-62a5-4234-b6e8-642ddde48179",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'f' to 6, after 420 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'f' to 6, after 420 milliseconds",
            "timedOut": false,
            "duration": 42,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "7d55dac2-8513-4bb8-99ac-fad12207596b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 't' to 7, after 540 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 't' to 7, after 540 milliseconds",
            "timedOut": false,
            "duration": 125,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "3d1b230f-3978-4438-87b2-f9c6eb8fed24",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'z.a' to 200, after 560 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'z.a' to 200, after 560 milliseconds",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "f9d3aa69-5a2c-4aad-9ca0-27d14fcf82de",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'z.a' to 1000, after 640 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'z.a' to 1000, after 640 milliseconds",
            "timedOut": false,
            "duration": 81,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "d1de4a2f-a9d1-4a21-bc11-27e7b10922e2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 3, after 680 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'c' to 3, after 680 milliseconds",
            "timedOut": false,
            "duration": 42,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "4ce375eb-94c4-4d78-bfe6-bc87199836fc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'z.a' to 1000, after 720 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'z.a' to 1000, after 720 milliseconds",
            "timedOut": false,
            "duration": 42,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "f8d8a7b0-ac14-4f4d-b858-d6c549b6a35e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 1000, after 780 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 1000, after 780 milliseconds",
            "timedOut": false,
            "duration": 60,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "609665fa-840b-4222-b152-c7aa4db885f7",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "33487614-f3e3-428b-a6d2-912721cdea57",
          "56b25f25-b94b-4cb5-afa5-a0d8decfe371",
          "d704833c-0b20-4dc6-bc18-96879388ba68",
          "62a45fa2-346a-41b7-99af-57e988219a58",
          "ec8bc51e-cbee-4fda-8201-7eaac511761c",
          "ae8bfc1b-aab8-4d32-9aee-f0049c3998bf",
          "0d936240-9ebc-4765-af8e-9850d55bc3d8",
          "5057a621-37e9-4034-94c1-c97d3ac33a15",
          "05e998b5-7171-4aef-a7f7-4424c544c862",
          "fd9a1e58-a6b3-4608-86ca-3d7df9565abd",
          "72dfd136-baf8-4972-b935-7fcbd4c0e3e7",
          "e2f76447-c13f-438c-9624-0740c959ffb8",
          "6277fb6d-80c9-4138-a35a-7f0470d9d071",
          "f0f54108-f7b0-42d3-8486-fb6fe6798104",
          "2b124f1b-62a5-4234-b6e8-642ddde48179",
          "7d55dac2-8513-4bb8-99ac-fad12207596b",
          "3d1b230f-3978-4438-87b2-f9c6eb8fed24",
          "f9d3aa69-5a2c-4aad-9ca0-27d14fcf82de",
          "d1de4a2f-a9d1-4a21-bc11-27e7b10922e2",
          "4ce375eb-94c4-4d78-bfe6-bc87199836fc",
          "f8d8a7b0-ac14-4f4d-b858-d6c549b6a35e",
          "609665fa-840b-4222-b152-c7aa4db885f7"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 831,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      },
      {
        "uuid": "c7ede633-9e6e-4a51-b41c-36d1fc6a5af9",
        "title": "Testing persister for scenario 4 with delay of 50ms",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Test using cache as a function",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms \"before all\" hook: Test using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[122]++;cov_2ajjpr0ijx.s[712]++;cbs.stop=false;cov_2ajjpr0ijx.s[713]++;await persistedCache({});cov_2ajjpr0ijx.s[714]++;await persistedCache(cache);",
            "err": {},
            "isRoot": false,
            "uuid": "5d2382ab-2c81-4a64-bb0f-b72fb650a3d5",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Stop the caceh using cache as a function",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms \"after all\" hook: Stop the caceh using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[126]++;cov_2ajjpr0ijx.s[732]++;cbs.stop=true;cov_2ajjpr0ijx.s[733]++;await persistedCache('stop');",
            "err": {},
            "isRoot": false,
            "uuid": "a88f9057-b40e-4869-82dd-d9c77da65d6c",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Set 'a' to 10, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms Set 'a' to 10, after 0 milliseconds",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "4d2e5cb9-bfa9-4014-853f-75a3723e1bf8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 20, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms Set 'b' to 20, after 0 milliseconds",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "a1229d51-5c94-421a-a3ce-7b7b63fd25a6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 30, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms Set 'c' to 30, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "93596c0c-1628-46d5-a03b-7be54148d3cf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'd' to 40, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms Set 'd' to 40, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "a26ef454-b5ce-4db2-bb41-ba9af7f8f5e2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'e' to 50, after 100 milliseconds",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms Set 'e' to 50, after 100 milliseconds",
            "timedOut": false,
            "duration": 101,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "a994dec5-76a4-4bf5-8524-367083fdad6e",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4d2e5cb9-bfa9-4014-853f-75a3723e1bf8",
          "a1229d51-5c94-421a-a3ce-7b7b63fd25a6",
          "93596c0c-1628-46d5-a03b-7be54148d3cf",
          "a26ef454-b5ce-4db2-bb41-ba9af7f8f5e2",
          "a994dec5-76a4-4bf5-8524-367083fdad6e"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 107,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      },
      {
        "uuid": "cb888d64-323a-4139-80eb-8b6335082cdb",
        "title": "Testing persister for scenario 5 with delay of 100ms",
        "fullFile": "/Users/shawncook/Projects/EdgeApp/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Test using cache as a function",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms \"before all\" hook: Test using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[122]++;cov_2ajjpr0ijx.s[712]++;cbs.stop=false;cov_2ajjpr0ijx.s[713]++;await persistedCache({});cov_2ajjpr0ijx.s[714]++;await persistedCache(cache);",
            "err": {},
            "isRoot": false,
            "uuid": "f85cd8d3-905a-45f2-8f78-c3575da73f73",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Stop the caceh using cache as a function",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms \"after all\" hook: Stop the caceh using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[126]++;cov_2ajjpr0ijx.s[732]++;cbs.stop=true;cov_2ajjpr0ijx.s[733]++;await persistedCache('stop');",
            "err": {},
            "isRoot": false,
            "uuid": "f461dff5-d62f-4234-b4b8-1c040c806ccb",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Set 'a' to 10, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms Set 'a' to 10, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "5bda8174-eb70-4154-9deb-65985681cd93",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 20, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms Set 'b' to 20, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "0ede6386-c57a-4926-8e26-31e7e1ea54b3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 30, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms Set 'c' to 30, after 0 milliseconds",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "6a3af38e-b173-471f-95a6-761c59448ad3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'd' to 40, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms Set 'd' to 40, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "40c0684a-a34c-4fb4-9cb3-74ddfea0eeb9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'e' to 50, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms Set 'e' to 50, after 0 milliseconds",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_2ajjpr0ijx.f[124]++;let child=(cov_2ajjpr0ijx.s[717]++,persistedCache);let expectedChild=(cov_2ajjpr0ijx.s[718]++,expected);cov_2ajjpr0ijx.s[719]++;param=param.split('.');cov_2ajjpr0ijx.s[720]++;while(param.length>1){const key=(cov_2ajjpr0ijx.s[721]++,param.shift());cov_2ajjpr0ijx.s[722]++;child=child[key];cov_2ajjpr0ijx.s[723]++;expectedChild=expectedChild[key];}const key=(cov_2ajjpr0ijx.s[724]++,param[0]);const interval=(cov_2ajjpr0ijx.s[725]++,!i?(cov_2ajjpr0ijx.b[160][0]++,saveTime):(cov_2ajjpr0ijx.b[160][1]++,saveTime-sets[i-1][2]));cov_2ajjpr0ijx.s[726]++;setTimeout(()=>{cov_2ajjpr0ijx.f[125]++;cov_2ajjpr0ijx.s[727]++;expectedChild[key]=value;cov_2ajjpr0ijx.s[728]++;child[key]=value;cov_2ajjpr0ijx.s[729]++;chai.assert.equal(expectedChild[key],child[key]);cov_2ajjpr0ijx.s[730]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "f5896279-85fb-4902-af5b-82f27af4ef14",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5bda8174-eb70-4154-9deb-65985681cd93",
          "0ede6386-c57a-4926-8e26-31e7e1ea54b3",
          "6a3af38e-b173-471f-95a6-761c59448ad3",
          "40c0684a-a34c-4fb4-9cb3-74ddfea0eeb9",
          "f5896279-85fb-4902-af5b-82f27af4ef14"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 8,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}