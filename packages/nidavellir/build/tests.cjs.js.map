{"version":3,"file":"tests.cjs.js","sources":["../src/utils/require.js","../src/utils/uintArray.js","../src/utils/hash.js","../src/utils/formatter.js","../src/utils/secp256k1.js","../src/bip32/derive.js","../test/bip32/derive.js","../src/utils/base.js","../src/networks/baseInfo.js","../src/networks/bitcoin.js","../src/networks/bitcoingold.js","../src/networks/bitcoinsv.js","../src/networks/dash.js","../src/networks/digibyte.js","../src/networks/dogecoin.js","../src/networks/eboost.js","../src/networks/feathercoin.js","../src/networks/litecoin.js","../src/networks/qtum.js","../src/networks/uniformfiscalobject.js","../src/networks/vertcoin.js","../src/networks/zcoin.js","../src/core/networkInfo.js","../src/core/keyPair.js","../src/bip32/extendedKey.js","../test/bip32/extendedKey.js","../src/bip32/hdKey.js","../test/bip32/hdKey.js","../src/bip44/paths.js","../test/bip44/paths.js","../test/core/keyPair.js","../rollup.config.js","../test/rollup.config.js","../test/utils/base.js","../src/utils/persister.js","../test/utils/persister.js"],"sourcesContent":["const lazyHandler = activeModule => ({\n  get: (target, prop, receiver) => {\n    // If already loaded return the loaded module\n    if (activeModule) return activeModule[prop]\n    // Try to inject the loaded module\n    if (prop === 'inject') {\n      return loadedModule => {\n        activeModule = loadedModule\n        for (const prop in target) {\n          target[prop].inject(activeModule[prop])\n        }\n      }\n    }\n    // Create a new child proxy if this prop not yet exists\n    if (!target[prop]) {\n      target[prop] = new Proxy(function (...args) {\n        if (!activeModule) target()\n        return activeModule[prop](...args)\n      }, lazyHandler())\n    }\n    return target[prop]\n  }\n})\n\nexport const lazify = unsafeModule => {\n  const parentModule = function (injectedModule = {}, loadUnsafe = true) {\n    const defaultModule = loadUnsafe ? unsafeModule() : {}\n    const loadedModule = Object.assign(defaultModule, injectedModule)\n    parentProxy.inject(loadedModule)\n  }\n  const parentProxy = new Proxy(parentModule, lazyHandler())\n  return parentProxy\n}\n","// @flow\n\nexport const isHexString = (hex: string) =>\n  typeof hex === 'string' && /^[0-9a-f]*$/i.test(hex)\n\nexport const toUint8Array = (hexString: string): Uint8Array => {\n  if (!isHexString(hexString)) {\n    throw new Error(`${hexString} is Not a Hex string`)\n  }\n  if (hexString.length % 2 !== 0) hexString = `0${hexString}`\n  const hex = hexString.match(/.{1,2}/g) || []\n  const bytes = hex.map(byte => parseInt(byte, 16))\n  return new Uint8Array(bytes)\n}\n\nexport const fromUint8Array = (bytes: Uint8Array): string =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '')\n","// @flow\n\nimport { type Hashes } from '../../types/utils.js'\nimport { lazify } from './require.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const hashjs: Hashes<Uint8Array> = (lazify(() =>\n  require('hash.js')\n): any)\n\nexport const digest = (hash: Function) => (data: string) => {\n  const uintArray = toUint8Array(data)\n  const rawRes = hash()\n    .update(uintArray)\n    .digest()\n  const resArray = new Uint8Array(rawRes)\n  return fromUint8Array(resArray)\n}\n\nexport const digestHmac = (hmac: Function, hash: Function) => (\n  data: string,\n  key: string\n) => {\n  const uintKey = toUint8Array(key)\n  const hmacHash = () => hmac(hash, uintKey)\n  return digest(hmacHash)(data)\n}\n\nexport const sha256 = digest(hashjs.sha256)\nexport const sha512 = digest(hashjs.sha512)\nexport const ripemd160 = digest(hashjs.ripemd160)\nexport const sha512Hmac = digestHmac(hashjs.hmac, hashjs.sha512)\n\nexport const hash256 = (data: string) => sha256(sha256(data))\nexport const hash160 = (data: string) => ripemd160(sha256(data))\n","// @flow\n\nimport { type FunctionFormatterOptions } from '../../types/utils.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const formatFunction = (\n  func: Function,\n  opts?: FunctionFormatterOptions = {}\n) => {\n  const { numParams = 1, encoder, results = [], sync } = opts\n  const { input = toUint8Array, output = fromUint8Array } = encoder || {}\n\n  const encode = (i: number, cps = a => a) => {\n    if (!i--) return cps\n    const newCps = (p: any) => {\n      p[i] = input(p[i])\n      return cps(p)\n    }\n    return encode(i, newCps)\n  }\n\n  const paramEncoder = encode(numParams)\n\n  let encodeResult = (res: any) => output(res)\n  if (!results) {\n    encodeResult = (res: any) => res\n  } else if (results.length) {\n    encodeResult = (res: any) => {\n      for (const param of results) {\n        res[param] = output(res[param])\n      }\n      return res\n    }\n  }\n\n  let waitResult = async (res: any) => {\n    res = await res\n    return encodeResult(res)\n  }\n  if (sync) waitResult = (res: any) => encodeResult(res)\n\n  return (...params: any): any => {\n    const result = func(...paramEncoder(params))\n    return waitResult(result)\n  }\n}\n\nexport const formatByteSize = (\n  originalByteSize: number,\n  newByteSize: number,\n  pad: boolean = originalByteSize > newByteSize\n) => (data: Array<number>) => {\n  let acc = 0\n  let bits = 0\n  const ret = []\n  const maxNum = (1 << newByteSize) - 1\n  for (let p = 0; p < data.length; ++p) {\n    const value = data[p]\n    if (value < 0 || value >> originalByteSize !== 0) {\n      throw new Error('Wrong bit value')\n    }\n    acc = (acc << originalByteSize) | value\n    bits += originalByteSize\n    while (bits >= newByteSize) {\n      bits -= newByteSize\n      ret.push((acc >> bits) & maxNum)\n    }\n  }\n  if (pad && bits > 0) {\n    ret.push((acc << (newByteSize - bits)) & maxNum)\n  } else if (\n    bits >= originalByteSize ||\n    (acc << (newByteSize - bits)) & maxNum\n  ) {\n    throw new Error('Wrong bit value')\n  }\n  return ret\n}\n","// @flow\n\nimport { type Secp256k1 } from '../../types/utils.js'\nimport { formatFunction } from './formatter.js'\nimport { lazify } from './require.js'\n\nexport const secp256k1: Secp256k1<Uint8Array> = (lazify(() =>\n  require('secp256k1')\n): any)\n\nconst encoder = {\n  input: a => Buffer.from(a, 'hex'),\n  output: a => a.toString('hex')\n}\n\nexport const publicKeyCreate = formatFunction(secp256k1.publicKeyCreate, {\n  encoder\n})\nexport const signatureNormalize = formatFunction(secp256k1.signatureNormalize, {\n  encoder\n})\nexport const signatureExport = formatFunction(secp256k1.signatureExport, {\n  encoder\n})\nexport const privateKeyTweakAdd = formatFunction(secp256k1.privateKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const publicKeyTweakAdd = formatFunction(secp256k1.publicKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const verify = formatFunction(secp256k1.verify, {\n  encoder,\n  numParams: 3,\n  results: null\n})\nexport const signature = formatFunction(secp256k1.sign, {\n  encoder,\n  numParams: 2,\n  results: ['signature']\n})\n\nexport const sign = (message: string, privateKey: string) =>\n  signature(message, privateKey)\n    .then(({ signature }) => signature)\n    .then(signatureNormalize)\n    .then(signatureExport)\n","// @flow\n\nimport {\n  type DerivedKeyPair,\n  type DerivedMasterKeys,\n  type DerivedPoint,\n  type KeyHmac\n} from '../../types/bip32.js'\nimport { type HexPair } from '../../types/core.js'\nimport { sha512Hmac } from '../utils/hash.js'\nimport * as Secp256k1 from '../utils/secp256k1'\n\nexport const SEED = '426974636f696e2073656564'\nexport const HARDENED = 0x80000000\nexport const MAX_INDEX = 0xffffffff\nexport const TWEAK_OUT_OF_RANGE_ERROR = 'tweak out of range'\n\nconst hmac = (key: string, data: string): KeyHmac => {\n  const hash = sha512Hmac(key, data)\n  const left = hash.slice(0, 64)\n  const right = hash.slice(64, 128)\n  return { left, right }\n}\n\nexport const deriveKeyPoint = async (\n  { privateKey, publicKey }: HexPair = {},\n  entropy: string,\n  index?: number = 0,\n  hardened?: boolean = false\n): Promise<DerivedPoint> => {\n  if (index > MAX_INDEX) throw new Error('Index out of range.')\n  let key = ''\n  if (hardened && index < HARDENED) index += HARDENED\n  if (index >= HARDENED) {\n    if (!privateKey) {\n      throw new Error('Cannot get hardened chainCode without a private key.')\n    }\n    key = `00${privateKey}`\n  } else if (publicKey) {\n    key = publicKey\n  } else if (privateKey) {\n    key = await Secp256k1.publicKeyCreate(privateKey, true)\n  } else {\n    throw new Error('Cannot derive without keys.')\n  }\n  key += index.toString(16).padStart(8, '0')\n  const { left, right } = hmac(key, entropy)\n  return { tweakPoint: left, chainCode: right, childIndex: index }\n}\n\nexport const derivePublic = async (\n  publicKey: string,\n  index: number,\n  entropy: string,\n  hardened: boolean = false\n): Promise<{ publicKey: string } & DerivedKeyPair> => {\n  try {\n    const keyPair = { publicKey }\n    const { tweakPoint, ...rest } = await deriveKeyPoint(\n      keyPair,\n      entropy,\n      index,\n      hardened\n    )\n    const childKey = await Secp256k1.publicKeyTweakAdd(\n      publicKey,\n      tweakPoint,\n      true\n    )\n    return { publicKey: childKey, ...rest }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    return derivePublic(publicKey, index + 1, entropy, hardened)\n  }\n}\n\nexport const derivePrivate = async (\n  privateKey: string,\n  index: number,\n  entropy: string,\n  hardened: boolean = false,\n  publicKey?: string\n): Promise<{ privateKey: string } & DerivedKeyPair> => {\n  try {\n    const keyPair = { privateKey, publicKey }\n    const { tweakPoint, ...rest } = await deriveKeyPoint(\n      keyPair,\n      entropy,\n      index,\n      hardened\n    )\n    const childKey = await Secp256k1.privateKeyTweakAdd(privateKey, tweakPoint)\n    return { privateKey: childKey, ...rest }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    if (index > MAX_INDEX) index -= HARDENED\n    return derivePrivate(privateKey, index + 1, entropy, hardened, publicKey)\n  }\n}\n\nexport const deriveKeyPair = async (\n  parentKeys: DerivedKeyPair,\n  keyIndex?: string = '0'\n): Promise<DerivedKeyPair> => {\n  const hardened = keyIndex[keyIndex.length - 1] === \"'\"\n  const index = hardened ? parseInt(keyIndex.slice(0, -1)) : parseInt(keyIndex)\n  const { chainCode, privateKey } = parentKeys\n  let publicKey = parentKeys.publicKey\n  if ((hardened || index >= HARDENED) && !privateKey) {\n    throw new Error('Cannot derive hardened index without a private key.')\n  }\n  if (privateKey) {\n    const childKey = await derivePrivate(\n      privateKey,\n      index,\n      chainCode,\n      hardened,\n      publicKey\n    )\n    const childPublicKey = await Secp256k1.publicKeyCreate(\n      childKey.privateKey,\n      true\n    )\n    return { ...childKey, publicKey: childPublicKey }\n  }\n  if (!publicKey) {\n    if (!privateKey) throw new Error('Cannot derive without keys.')\n    publicKey = await Secp256k1.publicKeyCreate(privateKey, true)\n  }\n  return derivePublic(publicKey, index, chainCode, hardened)\n}\n\nexport const deriveMasterKeyPair = async (\n  seed: string\n): Promise<DerivedMasterKeys> => {\n  const { left, right } = hmac(seed, SEED)\n  const publicKey = await Secp256k1.publicKeyCreate(left, true)\n  return { privateKey: left, publicKey, chainCode: right, childIndex: 0 }\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as Derive from '../../src/bip32/derive.js'\nimport fixtures from './fixtures.json'\n\nconst deriveFixtures = fixtures.derive\n\ndescribe('Testing Key derivation', function () {\n  deriveFixtures.private.forEach(test => {\n    it(`Deriving private key without public key ${test[0]} for index ${\n      test[2]\n    }`, async function () {\n      const privateKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const hardened = test[3]\n      const expectedChildKey = {\n        privateKey: test[4],\n        chainCode: test[5],\n        childIndex: test[6]\n      }\n      const childKey = await Derive.derivePrivate(\n        privateKey,\n        index,\n        chainCode,\n        hardened\n      )\n      assert.deepEqual(childKey, expectedChildKey)\n    })\n  })\n\n  deriveFixtures.privateWithPublic.forEach(test => {\n    it(`Deriving private key with public key ${test[0]} for index ${\n      test[2]\n    }`, async function () {\n      const privateKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const hardened = test[3]\n      const expectedChildKey = {\n        privateKey: test[4],\n        chainCode: test[5],\n        childIndex: test[6]\n      }\n      const publicKey = test[7]\n      const childKey = await Derive.derivePrivate(\n        privateKey,\n        index,\n        chainCode,\n        hardened,\n        publicKey\n      )\n      assert.deepEqual(childKey, expectedChildKey)\n    })\n  })\n\n  deriveFixtures.public.forEach(test => {\n    it(`Deriving public key ${test[0]} for index ${test[2]}`, async function () {\n      const publicKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const hardened = test[3]\n      const expectedChildKey = {\n        publicKey: test[4],\n        chainCode: test[5],\n        childIndex: test[6]\n      }\n      const childKey = await Derive.derivePublic(\n        publicKey,\n        index,\n        chainCode,\n        hardened\n      )\n      assert.deepEqual(childKey, expectedChildKey)\n    })\n  })\n})\n","// @flow\n\nimport { Buffer } from 'buffer'\n\nimport basex from 'base-x'\n\nimport {\n  type Alphabet,\n  type BaseCheck,\n  type BaseDecoder,\n  type Bases,\n  type HashFunction\n} from '../../types/utils.js'\nimport { hash256 } from './hash.js'\n\n// The default ALPHABETS, the name of the base codec will be the alphabet's length\nexport const ALPHABETS: Array<Alphabet> = [\n  '01',\n  '01234567',\n  '0123456789a',\n  '0123456789abcdef',\n  '0123456789ABCDEFGHJKMNPQRSTVWXYZ',\n  '0123456789abcdefghijklmnopqrstuvwxyz',\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n]\n\nexport const createCheckSumBase = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseDecoder => ({\n  encode: (hexStr: string): string => {\n    const checksum = (hashFunc || hash256)(hexStr)\n    const checkHex = `${hexStr}${checksum.slice(0, 8)}`\n    return base.encode(checkHex)\n  },\n  decode: (baseString: string): string => {\n    const hexStr = base.decode(baseString)\n    const payload = hexStr.slice(0, -8)\n    const newChecksum = (hashFunc || hash256)(payload)\n    const checksum = hexStr.slice(-8)\n    if (newChecksum.startsWith(checksum)) return payload\n    throw new Error('Invalid checksum')\n  }\n})\n\nexport const createHexEncoder = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseCheck => {\n  const newBase = { ...base }\n  const encode: (buf: Buffer) => string = newBase.encode\n  const decode: (str: string) => Buffer = newBase.decode\n  newBase.encode = a => encode(Buffer.from(a, 'hex'))\n  newBase.decode = a => decode(a).toString('hex')\n  return { ...newBase, check: createCheckSumBase(newBase, hashFunc) }\n}\n\nexport const base: Bases = ALPHABETS.reduce((decoders, alphabet) => {\n  const baseDecoder = createHexEncoder(basex(alphabet))\n  return { ...decoders, [alphabet.length]: baseDecoder }\n}, {})\n","// @flow\n\nimport { type NetworkInfo } from '../../types/core.js'\nimport { base } from '../utils/base.js'\nimport { hash256 } from '../utils/hash.js'\n\nexport const main: NetworkInfo = {\n  magic: 0xd9b4bef9,\n  bips: [44, 32],\n  forks: [],\n  keyPrefix: {\n    privkey: 0x80,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 0\n  },\n  addressPrefix: {},\n  legacyAddressPrefix: {},\n  replayProtection: {\n    forkSighash: 0x00,\n    forcedMinVersion: 0,\n    forkId: 0\n  },\n  serializers: {\n    address: base['58'].check,\n    wif: base['58'].check,\n    xkey: base['58'].check,\n    txHash: hash256,\n    sigHash: (str: Buffer) => Buffer.from(hash256(str.toString('hex')), 'hex')\n  }\n}\n","// @flow\n\nexport const main = {\n  bips: [84, 49],\n  forks: ['bitcoincash', 'bitcoingold', 'bitcoindiamond'],\n  addressPrefix: {\n    pubkeyhash: 0x00,\n    scripthash: 0x05,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'bc'\n  }\n}\n\nexport const testnet = {\n  ...main,\n  magic: 0x0709110b,\n  keyPrefix: {\n    privkey: 0xef,\n    xpubkey: 0x043587cf,\n    xprivkey: 0x04358394,\n    xpubkey58: 'tpub',\n    xprivkey58: 'tprv',\n    coinType: 1\n  },\n  addressPrefix: {\n    pubkeyhash: 0x6f,\n    scripthash: 0xc4,\n    witnesspubkeyhash: 0x03,\n    witnessscripthash: 0x28,\n    bech32: 'tb'\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0x0709110b,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0x80,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 156\n  },\n  addressPrefix: {\n    pubkeyhash: 0x26,\n    scripthash: 0x17,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'btg'\n  },\n  replayProtection: {\n    forkSighash: 64,\n    forcedMinVersion: 1,\n    forkId: 79\n  }\n}\n\nexport const testnet = {\n  ...main,\n  keyPrefix: {\n    privkey: 0xef,\n    xpubkey: 0x043587cf,\n    xprivkey: 0x04358394,\n    xpubkey58: 'tpub',\n    xprivkey58: 'tprv',\n    coinType: 156\n  },\n  addressPrefix: {\n    pubkeyhash: 0x6f,\n    scripthash: 0xc4,\n    witnesspubkeyhash: 0x03,\n    witnessscripthash: 0x28,\n    bech32: 'tb'\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  keyPrefix: {\n    coinType: 145\n  },\n  addressPrefix: {\n    cashAddress: 'bitcoincash'\n  },\n  legacyAddressPrefix: {\n    pubkeyhash: 0x00,\n    scripthash: 0x05\n  },\n  replayProtection: {\n    forkSighash: 0x40,\n    forcedMinVersion: 1\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  keyPrefix: {\n    privkey: 0xcc,\n    xpubkey: 0x02fe52cc,\n    xprivkey: 0x02fe52f8,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 5\n  },\n  addressPrefix: {\n    pubkeyhash: 0x4c,\n    scripthash: 0x10\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0x9e,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 20\n  },\n  addressPrefix: {\n    pubkeyhash: 0x1e,\n    scripthash: 0x3f,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'dgb'\n  },\n  legacyAddressPrefix: {\n    scripthash: 0x05\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0x00000000,\n  keyPrefix: {\n    privkey: 0x9e,\n    xpubkey: 0x02facafd,\n    xprivkey: 0x02fac398,\n    xprivkey58: 'xprv',\n    xpubkey58: 'xpub',\n    coinType: 3\n  },\n  addressPrefix: {\n    pubkeyhash: 0x1e,\n    scripthash: 0x16\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0xb0,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 2\n  },\n  addressPrefix: {\n    pubkeyhash: 0x5c,\n    scripthash: 0x0a,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'ebst'\n  },\n  legacyAddressPrefix: {\n    scripthash: 0x05\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0x8e,\n    xpubkey: 0x0488bc26,\n    xprivkey: 0x0488daee,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 8\n  },\n  addressPrefix: {\n    pubkeyhash: 0x0e,\n    scripthash: 0x05,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'fc'\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  bips: [84, 49],\n  keyPrefix: {\n    privkey: 0xb0,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 2\n  },\n  addressPrefix: {\n    pubkeyhash: 0x30,\n    scripthash: 0x32,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'lc'\n  },\n  legacyAddressPrefix: {\n    scripthash: 0x05\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xf1cfa6d3,\n  keyPrefix: {\n    privkey: 0x80,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 2301\n  },\n  addressPrefix: {\n    pubkeyhash: 0x3a,\n    scripthash: 0x32\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xfcd9b7dd,\n  bips: [84, 49, 44, 32],\n  keyPrefix: {\n    privkey: 0x9b,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 202\n  },\n  addressPrefix: {\n    pubkeyhash: 0x1b,\n    scripthash: 0x44,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'uf'\n  },\n  legacyAddressPrefix: {\n    scripthash: 0x05\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  bips: [84, 49, 44, 32],\n  forks: [],\n  keyPrefix: {\n    privkey: 0x80,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 28\n  },\n  addressPrefix: {\n    pubkeyhash: 0x47,\n    scripthash: 0x05,\n    witnesspubkeyhash: 0x06,\n    witnessscripthash: 0x0a,\n    bech32: 'vtc'\n  }\n}\n","// @flow\n\nexport const main = {\n  magic: 0xd9b4bef9,\n  keyPrefix: {\n    privkey: 0xd2,\n    xpubkey: 0x0488b21e,\n    xprivkey: 0x0488ade4,\n    xpubkey58: 'xpub',\n    xprivkey58: 'xprv',\n    coinType: 136\n  },\n  addressPrefix: {\n    pubkeyhash: 0x52,\n    scripthash: 0x7\n  }\n}\n","// @flow\n\nimport {\n  type HDPathSetting,\n  type NetworkInfo,\n  type NetworkInfos,\n  type NewNetworks,\n  type PartialInfo\n} from '../../types/core.js'\nimport { main } from '../networks/baseInfo.js'\nimport * as Networks from '../networks/networks.js'\n\nexport const createInfo = (info: PartialInfo): NetworkInfo => {\n  const newNetwork: NetworkInfo = ({}: any)\n\n  for (const set in main) {\n    const mainSet = main[set]\n    const infoSet = info[set]\n\n    if (Array.isArray(mainSet)) {\n      newNetwork[set] = (infoSet || [])\n        .concat(mainSet)\n        .filter((v, i, s) => s.indexOf(v) === i)\n    } else if (typeof mainSet === 'object') {\n      newNetwork[set] = { ...mainSet, ...(infoSet || {}) }\n    } else if (typeof infoSet !== 'undefined') {\n      newNetwork[set] = infoSet\n    } else newNetwork[set] = mainSet\n  }\n\n  return newNetwork\n}\n\nexport const createNetworks = (newInfos: NewNetworks) => {\n  const networks = { main }\n  for (const network in newInfos) {\n    const infos = newInfos[network]\n    for (const networkType in infos) {\n      const partialInfo = infos[networkType]\n      let name = network\n      if (networkType !== 'main') name += networkType.toLowerCase()\n      networks[name] = createInfo(partialInfo)\n    }\n  }\n  return networks\n}\n\nexport const networks: NetworkInfos = createNetworks(Networks)\n\nexport const addNetworks = (newInfos: NewNetworks) =>\n  Object.assign(networks, createNetworks(newInfos))\n\nexport const getExtendedKeyVersion = (\n  hdKey: { privateKey?: any, publicKey?: any },\n  network: string = 'main'\n) => {\n  const { keyPrefix = {} } = networks[network]\n  if (hdKey.privateKey) return keyPrefix.xprivkey\n  if (hdKey.publicKey) return keyPrefix.xpubkey\n  throw new Error(\"Can't get version without a key\")\n}\n\nexport const getNetworkForVersion = (version: number): string => {\n  for (const network in networks) {\n    try {\n      checkVersion(version, network)\n      return network\n    } catch (e) {}\n  }\n  throw new Error('Unknown network version')\n}\n\nexport const checkVersion = (version: number, network: string = 'main') => {\n  const { keyPrefix = {} } = networks[network]\n  if (version) {\n    for (const prefix in keyPrefix) {\n      if (keyPrefix[prefix] === version) return version\n    }\n    throw new Error('Wrong key prefix for network')\n  }\n}\n\nexport const getPrefixType = (prefixNum: number, network: string = 'main') => {\n  const getPrefix = addressPrefix => {\n    for (const prefixType in addressPrefix) {\n      if (addressPrefix[prefixType] === prefixNum) {\n        return prefixType\n      }\n    }\n    return null\n  }\n  const { addressPrefix, legacyAddressPrefix } = networks[network]\n  const type = getPrefix(addressPrefix) || getPrefix(legacyAddressPrefix)\n\n  if (!type) {\n    throw new Error(`Unknown prefix ${prefixNum} for network ${network}`)\n  }\n  return type\n}\n\nexport const getPrefixNum = (type: string, network: string = 'main') => {\n  const { addressPrefix, legacyAddressPrefix } = networks[network]\n  const cashAddress = addressPrefix.cashAddress\n  return !cashAddress ? addressPrefix[type] : legacyAddressPrefix[type]\n}\n\nexport const getHDSetting = (network: string, value: any): HDPathSetting => {\n  const { supportedHDPaths } = networks[network]\n  for (const hdSetting of supportedHDPaths) {\n    for (const key in hdSetting) {\n      const setting = hdSetting[key]\n      // checking if address that has legacy\n      if (Array.isArray(setting)) {\n        return setting.find(\n          ({ prefix, stringPrefix }) =>\n            prefix === value || stringPrefix === value\n        )\n      }\n\n      // checking if xpub, xpriv, or address\n      if (\n        typeof setting === 'object' &&\n        (setting.prefix === value || setting.stringPrefix === value)\n      ) {\n        return hdSetting\n      }\n\n      // if scriptType or purpose\n      if (setting === value) return hdSetting\n    }\n  }\n  throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n\nexport const getScriptType = (prefixNum: number, network: string = 'main') => {\n  const setting = getHDSetting(network, prefixNum)\n  if (!setting) {\n    throw new Error(\n      `Unknown address prefix ${prefixNum} for network ${network}`\n    )\n  }\n  return setting.scriptType\n}\n","// @flow\n\nimport { type HexPair } from '../../types/core.js'\nimport {\n  sign as Sign,\n  verify as Verify,\n  publicKeyCreate\n} from '../utils/secp256k1.js'\nimport { networks } from './networkInfo.js'\n\nexport const fromHex = (keyHex: string): HexPair => {\n  if (keyHex.length !== 66 && keyHex.length !== 132) {\n    throw new Error('Wrong key pair length')\n  }\n  const firstHeaderByte = parseInt(keyHex.slice(0, 2), 16)\n  try {\n    if (firstHeaderByte !== 0) throw new Error('Bad Private key prefix')\n    const keyPair: HexPair = { privateKey: keyHex.slice(2, 66) }\n    if (keyHex.length === 132) {\n      const secondHeaderByte = parseInt(keyHex.slice(66, 68), 16)\n      if (secondHeaderByte !== 2 && secondHeaderByte !== 3) {\n        throw new Error('Bad Public key prefix')\n      }\n      const pub = { publicKey: keyHex.slice(68, 132) }\n      Object.assign(keyPair, pub)\n    }\n    return keyPair\n  } catch (e) {\n    if (firstHeaderByte !== 2 && firstHeaderByte !== 3) {\n      throw new Error('Bad Public key prefix')\n    }\n    return { publicKey: keyHex.slice(0, 66) }\n  }\n}\n\nexport const privateFromWIF = (\n  wif: string,\n  network: string = 'main'\n): { privateKey: string, compress: boolean } => {\n  const { serializers, keyPrefix } = networks[network]\n  const keyHex = serializers.wif.decode(wif)\n  if (parseInt(keyHex.slice(0, 2), 16) !== keyPrefix.privkey) {\n    throw new Error(\n      `Unknown key prefix ${keyHex.slice(0, 2)} for network ${network}`\n    )\n  }\n  const privateKey = keyHex.slice(2, 66)\n  let compress = false\n  if (keyHex.length >= 68) {\n    if (parseInt(keyHex.slice(66, 68), 16) !== 1) {\n      throw new Error(`Unknown compression flag ${keyHex.slice(66, 68)}`)\n    }\n    compress = true\n  }\n  return { privateKey, compress }\n}\n\nexport const fromWif = async (\n  wif: string,\n  network: string = 'main'\n): Promise<HexPair> => {\n  const { privateKey, compress } = privateFromWIF(wif, network)\n  const publicKey = await publicKeyCreate(privateKey, compress)\n  return { privateKey, publicKey }\n}\n\nexport const toHex = (keyPair: HexPair): string => {\n  const publicKey = keyPair.publicKey || ''\n  const privateKey = keyPair.privateKey ? `00${keyPair.privateKey}` : ''\n  return `${privateKey}${publicKey}`\n}\n\nexport const sign = async (keyPair: HexPair, msg: string): Promise<string> => {\n  if (!keyPair.privateKey) throw new Error('Cannot sign without private key.')\n  return Sign(msg, keyPair.privateKey)\n}\n\nexport const verify = async (\n  keyPair: HexPair,\n  msg: string,\n  signature: string\n): Promise<Boolean> => {\n  let publicKey = keyPair.publicKey\n  if (!publicKey && keyPair.privateKey) {\n    publicKey = await publicKeyCreate(keyPair.privateKey, true)\n  } else {\n    throw new Error('Cannot verify without keys.')\n  }\n  const verified = await Verify(msg, signature, publicKey)\n  return verified\n}\n","// @flow\n\nimport {\n  type DerivedKey,\n  type ExtendedKeyPair,\n  type ExtendedMasterKeys\n} from '../../types/bip32.js'\nimport { type HexPair } from '../../types/core.js'\nimport * as KeyPair from '../core/keyPair.js'\nimport {\n  checkVersion,\n  getExtendedKeyVersion,\n  getNetworkForVersion,\n  networks\n} from '../core/networkInfo.js'\nimport { hash160 } from '../utils/hash.js'\nimport { publicKeyCreate } from '../utils/secp256k1.js'\nimport { deriveKeyPair, deriveMasterKeyPair } from './derive.js'\n\nconst MAX_DEPTH = 0xff\n\nexport const fromSeed = async (\n  seed: string,\n  network?: string\n): Promise<ExtendedMasterKeys> => {\n  const masterKeyPair = await deriveMasterKeyPair(seed)\n  return {\n    ...masterKeyPair,\n    parentFingerPrint: 0,\n    version: getExtendedKeyVersion(masterKeyPair, network),\n    depth: 0\n  }\n}\n\nexport const fromIndex = async (\n  parentKeys: ExtendedKeyPair,\n  index: string,\n  network?: string\n): Promise<ExtendedKeyPair> => {\n  if (parentKeys.depth >= MAX_DEPTH) throw new Error('Depth too high.')\n\n  const derivedKey: DerivedKey<string> = await deriveKeyPair(parentKeys, index)\n  if (!parentKeys.publicKey) {\n    if (!parentKeys.privateKey) {\n      throw new Error('Cannot create parentFingerPrint without keys')\n    }\n    parentKeys.publicKey = await publicKeyCreate(parentKeys.privateKey, true)\n  }\n  const parentFingerPrint = await hash160(parentKeys.publicKey)\n  network = network || getNetworkForVersion(parentKeys.version)\n\n  return {\n    ...derivedKey,\n    parentFingerPrint: parseInt(parentFingerPrint.slice(0, 8), 16),\n    version: getExtendedKeyVersion(derivedKey, network),\n    depth: parentKeys.depth + 1\n  }\n}\n\nexport const fromHex = (keyHex: string, network?: string): ExtendedKeyPair => {\n  const version = parseInt(keyHex.slice(0, 8), 16)\n  if (network) checkVersion(version, network)\n  return {\n    version,\n    depth: parseInt(keyHex.slice(9, 10), 16),\n    parentFingerPrint: parseInt(keyHex.slice(10, 18), 16),\n    childIndex: parseInt(keyHex.slice(18, 26), 16),\n    chainCode: keyHex.slice(26, 90),\n    ...KeyPair.fromHex(keyHex.slice(90, 156))\n  }\n}\n\nexport const fromString = (\n  hdKey: string,\n  network: string = 'main'\n): ExtendedKeyPair => {\n  const keyHex = networks[network].serializers['xkey'].decode(hdKey)\n  return fromHex(keyHex, network)\n}\n\nexport const toHex = (\n  hdKey: ExtendedKeyPair,\n  network?: string,\n  forcePublic: boolean = false\n): string => {\n  if (network) checkVersion(hdKey.version, network)\n  const { privateKey, publicKey } = hdKey\n  const keyPair: HexPair = { publicKey }\n  if (!forcePublic) keyPair.privateKey = privateKey\n  return (\n    getExtendedKeyVersion(keyPair, network)\n      .toString(16)\n      .padStart(8, '0') +\n    hdKey.depth.toString(16).padStart(2, '0') +\n    hdKey.parentFingerPrint.toString(16).padStart(8, '0') +\n    hdKey.childIndex.toString(16).padStart(8, '0') +\n    hdKey.chainCode +\n    KeyPair.toHex(keyPair).slice(0, 66)\n  )\n}\n\nexport const toString = (\n  hdKey: ExtendedKeyPair,\n  network: string = 'main',\n  forcePublic: boolean = false\n): string => {\n  const keyHex = toHex(hdKey, network, forcePublic)\n  return networks[network].serializers['xkey'].encode(keyHex)\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as ExtendedKey from '../../src/bip32/extendedKey.js'\nimport fixtures from './fixtures.json'\n\nconst XKeyFixtures = fixtures.extendedKey\nconst network = 'main'\n\ndescribe(`Testing Extended Key functions`, function () {\n  XKeyFixtures.string.forEach(test => {\n    const base58Key = test[0]\n    let xkey = {\n      version: test[2],\n      depth: test[3],\n      parentFingerPrint: test[4],\n      childIndex: test[5],\n      chainCode: test[6]\n    }\n\n    if (test[1].length === 64) xkey = { ...xkey, privateKey: test[1] }\n    if (test[1].length === 66) xkey = { ...xkey, publicKey: test[1] }\n\n    it(`Extended key from string: ${test[0]}`, function () {\n      const resultedXkey = ExtendedKey.fromString(base58Key, network)\n      assert.deepEqual(resultedXkey, xkey)\n    })\n\n    it(`Extended key to string: ${test[1]}`, function () {\n      if (!xkey.publicKey) xkey = { ...xkey, publicKey: `02${test[1]}` }\n      const resultedBase58Key = ExtendedKey.toString(xkey, network)\n      assert.equal(resultedBase58Key, base58Key)\n    })\n  })\n})\n","// @flow\n\nimport {\n  type ExtendedKeyPair,\n  type HDKeyPair,\n  type HDPath,\n  type Index,\n  type Path\n} from '../../types/bip32.js'\nimport { HARDENED } from '../bip32/derive.js'\nimport * as ExtendedKey from '../bip32/extendedKey.js'\n\nexport const fromSeed = async (\n  seed: string,\n  network?: string\n): Promise<HDKeyPair> => {\n  const masterKeyPair = await ExtendedKey.fromSeed(seed, network)\n  return {\n    ...masterKeyPair,\n    hardened: false,\n    path: ['m'],\n    children: {}\n  }\n}\n\nexport const fromExtendedKey = (\n  keyPair: ExtendedKeyPair,\n  hdPath?: HDPath\n): HDKeyPair => {\n  const hardened = keyPair.childIndex >= HARDENED\n  const { path: parentPath = [] } = hdPath || {}\n  let indexStr = 'm'\n\n  const path = [...parentPath]\n  if (keyPair.depth) {\n    const index = keyPair.childIndex\n    const adjIndex = hardened ? index - HARDENED : index\n    indexStr = `${adjIndex}${hardened ? \"'\" : ''}`\n  }\n\n  if (path[0] !== 'm') path.unshift('m')\n  if (path.length === keyPair.depth) {\n    path.push(indexStr)\n  }\n  if (path.length !== keyPair.depth + 1) {\n    throw new Error('Wrong path depth for key')\n  }\n  if (path[path.length - 1] !== indexStr) {\n    throw new Error('Wrong index for key')\n  }\n\n  const hdKey: HDKeyPair = { ...keyPair, path, hardened, children: {} }\n  const { scriptType, chain } = hdPath || {}\n  if (scriptType) hdKey.scriptType = scriptType\n  if (chain) hdKey.chain = chain\n\n  return hdKey\n}\n\nexport const fromIndex = async (\n  parentKey: HDKeyPair,\n  index: Index,\n  network?: string\n): Promise<HDKeyPair> => {\n  // Derive an ExtendedKey key from the current parentKey and index\n  const childKey = await ExtendedKey.fromIndex(parentKey, index, network)\n  const childHDPath = {\n    ...parentKey,\n    path: [...parentKey.path, index]\n  }\n  // Create an HD key from the ExtendedKey\n  return fromExtendedKey(childKey, childHDPath)\n}\n\nexport const fromPath = async (\n  parentKeys: HDKeyPair,\n  hdPath: HDPath,\n  network?: string\n): Promise<HDKeyPair> => {\n  // Get the deepest possible parent for this key\n  const parent = getParentKey(parentKeys, hdPath.path)\n  // Set the starting derivation key to be the parent key from before\n  let childHDKey = parent.key\n\n  while (parent.path.length) {\n    // Get next child key\n    const index = parent.path.shift()\n    const childKey = await fromIndex(childHDKey, index, network)\n\n    // Add the new key to the current parent key and change the pointer\n    childHDKey.children[index] = childKey\n    childHDKey = childKey\n  }\n\n  // Set the scriptType and chain for the deepest path\n  childHDKey.scriptType = hdPath.scriptType || 'P2PKH'\n  childHDKey.chain = hdPath.chain || 'external'\n\n  return parentKeys\n}\n\nexport const fromPaths = async (\n  parentKey: HDKeyPair | string,\n  hdPaths: Array<HDPath>,\n  network?: string\n): Promise<HDKeyPair> => {\n  // If we get a seed create a master hd key from it\n  if (typeof parentKey === 'string') {\n    parentKey = await fromSeed(parentKey, network)\n  }\n\n  // Create All missing key paths\n  for (const hdPath of hdPaths) {\n    parentKey = await fromPath(parentKey, hdPath)\n  }\n\n  return parentKey\n}\n\nexport const fromString = (\n  extendedKey: string,\n  hdPath?: HDPath,\n  network?: string\n): HDKeyPair => {\n  const keyPair: ExtendedKeyPair = ExtendedKey.fromString(extendedKey, network)\n  return fromExtendedKey(keyPair, hdPath)\n}\n\nexport const getParentKey = (\n  parentKey: HDKeyPair,\n  path: Path\n): { key: HDKeyPair, path: Path } => {\n  const tempPath = [...path]\n  tempPath.shift()\n  while (parentKey.children[tempPath[0]] && tempPath.length) {\n    parentKey = parentKey.children[tempPath.shift()]\n  }\n  return { key: parentKey, path: tempPath }\n}\n\nexport const getKey = (parentKey: HDKeyPair, path: Path): HDKeyPair | null => {\n  const tempPath = [...path]\n  tempPath.shift()\n  while (parentKey && tempPath.length) {\n    parentKey = parentKey.children[tempPath.shift()]\n  }\n  return parentKey\n}\n\nexport const createPath = (\n  account: number = 0,\n  parent: HDPath = { path: ['m'] },\n  hardened?: boolean\n): HDPath => {\n  const { chain = 'external', scriptType = 'P2PKH' } = parent\n\n  const accountStr = `${account}${hardened ? \"'\" : ''}`\n  const index = chain === 'external' ? '0' : '1'\n  const path = [...parent.path, accountStr, index]\n\n  return { path, chain, scriptType }\n}\n\nexport const toString = ExtendedKey.toString\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as HDKey from '../../src/bip32/hdKey.js'\nimport fixtures from './fixtures.json'\n\nconst HDKeyFixtures = fixtures.hdKey\nconst network = 'main'\n\ndescribe('Testing HD Key', function () {\n  HDKeyFixtures.fromSeed.forEach(test => {\n    it(`Creating HD key from phrase ${test[0]}`, async function () {\n      const childKey = await HDKey.fromSeed(test[1])\n      const xkey = HDKey.toString(childKey)\n      assert.deepEqual(xkey, test[2])\n    })\n  })\n  HDKeyFixtures.fromString.forEach(test => {\n    it(`Creating HD key from xkey ${test[0]} with path ${test[1]}`, function () {\n      const opts = {}\n      if (test[1]) opts.path = test[1].split('/')\n      const hdKey = HDKey.fromString(test[0], opts)\n      assert.equal(hdKey.hardened, test[2])\n      assert.equal(hdKey.path.join('/'), test[3])\n    })\n  })\n  HDKeyFixtures.fromStringErrors.forEach(test => {\n    it(`Error on Creating HD key with error type ${test[2]}`, function () {\n      try {\n        HDKey.fromString(test[0], { path: test[1].split('/') })\n      } catch (e) {\n        assert.equal(e.message, test[2])\n      }\n    })\n  })\n  HDKeyFixtures.fromPath.forEach(test => {\n    it(`Deriving HD key from xkey ${test[0]} with path ${\n      test[1]\n    }`, async function () {\n      const path = test[1].split('/')\n      const parentKey = HDKey.fromString(test[0])\n      let hdKey = await HDKey.fromPath(parentKey, { path })\n      path.shift()\n      let testIndex = 2\n      while (path.length) {\n        const index = path.shift()\n        hdKey = hdKey.children[index]\n        const xprivkey = HDKey.toString(hdKey)\n        const xpubkey = HDKey.toString(hdKey, network, true)\n        assert.equal(xprivkey, test[testIndex][0], 'xpriv')\n        assert.equal(xpubkey, test[testIndex][1], 'xpub')\n        testIndex++\n      }\n    })\n  })\n})\n","// @flow\n\nimport { type HDPath, type ScriptType } from '../../types/bip32.js'\nimport { createPath } from '../bip32/hdKey.js'\nimport { networks } from '../core/networkInfo.js'\n\nexport const createPaths = (\n  purpose?: number | Array<number>,\n  coinType: number = 0,\n  account: number = 0,\n  network: string = 'main'\n): Array<HDPath> => {\n  if (!purpose) purpose = networks[network].bips\n\n  if (Array.isArray(purpose)) {\n    const paths = []\n    for (const p of purpose) {\n      paths.push(...createPaths(p, coinType, account))\n    }\n    return paths\n  }\n\n  if (purpose === 32) return [createPath(account)]\n\n  const scriptType = ScriptTypes[`${purpose}`]\n  if (!scriptType) throw new Error(`Unknown derivation purpose ${purpose}`)\n\n  const path = ['m', `${purpose}'`, `${coinType || 0}'`]\n  const hdPath = { path, scriptType }\n  const hdPathInt = { ...hdPath, chain: 'internal' }\n\n  return [\n    createPath(account, hdPath, true),\n    createPath(account, hdPathInt, true)\n  ]\n}\n\nexport const ScriptTypes: { [purpose: string]: ScriptType } = {\n  '44': 'P2PKH',\n  '49': 'P2WPKH-P2SH',\n  '84': 'P2WPKH'\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as HDKey from '../../src/bip32/hdKey.js'\nimport { createPaths } from '../../src/bip44/paths.js'\nimport fixtures from './fixtures.json'\n\nconst network = 'main'\n\ndescribe('Testing Bip44 HD Key path derivation', function () {\n  fixtures.createPaths.forEach(test => {\n    it(`Deriving HD key ${test[0]} from HD Settings ${\n      test[3]\n    }`, async function () {\n      const parentKey = HDKey.fromString(test[0])\n\n      let account = 0\n      let coinType = 0\n      if (test[1]) {\n        account = test[1][0]\n        coinType = test[1][1]\n      }\n\n      const hdPaths = createPaths(test[2], coinType, account, 'bitcoin')\n      const hdKey = await HDKey.fromPaths(parentKey, hdPaths, network)\n      let testIndex = 3\n      for (const hdPath of hdPaths) {\n        const key = HDKey.getKey(hdKey, hdPath.path)\n        if (!key) throw new Error('No Key')\n        const xprivkey = HDKey.toString(key)\n        const xpubkey = HDKey.toString(key, network, true)\n        assert.equal(xprivkey, test[testIndex++], 'xpriv')\n        assert.equal(xpubkey, test[testIndex++], 'xpub')\n      }\n    })\n  })\n})\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { fromWif } from '../../src/core/keyPair.js'\nimport fixtures from './fixtures.json'\n\nconst KeyPairFixtures = fixtures.keyPair\nconst network = 'main'\n\ndescribe('Testing HD Key', function () {\n  KeyPairFixtures.fromWif.forEach(test => {\n    it(`Creating Key Pair from WIF ${test[0]}`, async function () {\n      const keyPair = await fromWif(test[0], network)\n      assert.equal(keyPair.publicKey, test[1])\n    })\n  })\n})\n","// @flow\n\nimport babel from 'rollup-plugin-babel'\nimport flowEntry from 'rollup-plugin-flow-entry'\nimport json from 'rollup-plugin-json'\n\nimport packageJson from './package.json'\n\nexport default {\n  input: './index.js',\n  external: [\n    ...Object.keys(packageJson.dependencies),\n    ...Object.keys(packageJson.devDependencies),\n    'bindings',\n    'elliptic'\n  ],\n  output: [\n    { file: packageJson.main, format: 'cjs', sourcemap: true },\n    { file: packageJson.module, format: 'es', sourcemap: true }\n  ],\n  plugins: [\n    json(),\n    babel({\n      babelrc: false,\n      presets: ['@babel/preset-flow'],\n      plugins: ['@babel/plugin-proposal-object-rest-spread']\n    }),\n    flowEntry()\n  ]\n}\n","import babel from 'rollup-plugin-babel'\nimport json from 'rollup-plugin-json'\nimport multiEntry from 'rollup-plugin-multi-entry'\n\nimport config from '../rollup.config.js'\n\nconst babelOptions = {\n  babelrc: false,\n  presets: ['@babel/preset-flow'],\n  plugins: ['@babel/plugin-proposal-object-rest-spread']\n}\n\nexport default {\n  external: config.external,\n  input: './test/**/*.js',\n  output: [\n    { file: 'build/tests.cjs.js', format: 'cjs', sourcemap: true },\n    { file: 'build/tests.js', format: 'es', sourcemap: true }\n  ],\n  plugins: [multiEntry(), json(), babel(babelOptions)]\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { base } from '../../src/utils/base.js'\nimport { sha512Hmac } from '../../src/utils/hash.js'\nimport fixtures from './fixtures.json'\n\nconst key =\n  '00ab0063a7ea84d7c5f4a9ad8690c69b80a2d650343fbc9266b2d73c7b26bb2cc780000020'\nconst data = '485efe44bc445946b58ba03e8da75d5cf44fc9196eaa88204667629c4e04c38d'\nconst res =\n  '405fcc33d3f409f16571e19bd27053cd1d05e74df6eba0dc93c4c0a91599052429203b410e284513e14f67287843f91875bf69986f9cebf7037e79b0b13bbdbc'\n\nconst baseFixtures = fixtures.base\n\nconst hash = sha512Hmac(key, data)\nassert.equal(hash, res)\n\nfor (const fixture in baseFixtures) {\n  describe(`Testing base ${fixture}`, function () {\n    const fixtureBase = base[fixture].check\n\n    baseFixtures[fixture].valid.forEach(({ string, payload }) => {\n      it(`Decode valid string: ${string}`, async function () {\n        const resultedPaylod = fixtureBase.decode(string)\n        assert.equal(resultedPaylod, payload)\n      })\n      it(`Encode valid payload: ${payload}`, async function () {\n        const resultedString = fixtureBase.encode(payload)\n        assert.equal(resultedString, string)\n      })\n    })\n\n    baseFixtures[fixture].invalid.forEach(({ string, exception }) => {\n      it(`Test invalid string: ${string}`, async function () {\n        try {\n          fixtureBase.decode(string)\n        } catch (e) {\n          assert.equal(e.message, exception)\n        }\n      })\n    })\n  })\n}\n","// @flow\n\nimport {\n  type LoadFunc,\n  type PersistStatus,\n  type SaveFunc\n} from '../../types/utils.js'\n\nexport const persist = (\n  save: SaveFunc,\n  load: LoadFunc | Object,\n  delay: number = 100,\n  cache: Object = {},\n  data: Object = cache,\n  status: PersistStatus = {}\n) => {\n  return new Proxy((Object.assign(() => save(cache), data): any), {\n    apply: async (target, thisArgs, args) => {\n      const updateCache = newCache => {\n        cache = newCache\n        data = newCache\n        for (const key in target) {\n          if (data[key] === undefined) {\n            delete target[key]\n          }\n        }\n        Object.assign(target, newCache)\n      }\n\n      // Try to load the cache from disk in case it never happend before\n      if (!status.loaded) {\n        const rawData = typeof load === 'function' ? await load() : load\n        updateCache({ ...rawData, ...cache })\n        status.loaded = true\n      }\n\n      // Load/Stop the cache based on the argument\n      if (args && args.length) {\n        if (typeof args[0] === 'object') updateCache({ ...args[0] })\n        else if (args[0] === 'stop') {\n          if (status.saving) {\n            clearTimeout(status.saving)\n            status.saving = null\n          }\n          status.changed = false\n          await Reflect.apply(target, target, [])\n          return\n        }\n      }\n\n      // Stop looping in case nothing changed or we already have a save timer\n      if (!status.changed || status.saving) return\n\n      // If something changed, set flags and call save\n      status.changed = false\n\n      // Set save loop after the desired delay\n      status.saving = setTimeout(() => {\n        if (status.saving) {\n          clearTimeout(status.saving)\n          status.saving = null\n        }\n        Reflect.apply(thisArgs, thisArgs, [])\n      }, delay)\n\n      await Reflect.apply(target, target, [])\n    },\n    set: (target: any, prop: string, value: any, receiver: any) => {\n      // Only update/save if the param actually changed\n      if (data[prop] !== value) {\n        Reflect.set(data, prop, value)\n        Reflect.set(target, prop, value)\n        status.changed = true\n        if (!status.saving) Reflect.apply(receiver, receiver, [])\n      }\n      return true\n    },\n    get: (target: any, prop: string) => {\n      if (prop === 'status') return status\n      // Get the value\n      const value = Reflect.get(data, prop)\n      // Return any non object values\n      if (typeof value !== 'object') return value\n      // Create a proxy from the child to trimgger saves on the top parent\n      return persist(save, load, delay, cache, value, status)\n    }\n  })\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { after, before, describe, it } from 'mocha'\n\nimport { persist } from '../../src/utils/persister.js'\nimport fixtures from './fixtures.json'\n\nconst createSave = (expected: any, delay: number, cbs: any) => {\n  let saveAttempts = -1\n  let firstSaveTime = 0\n\n  return async cacheData => {\n    if (cbs.stop) return\n    cbs.e = new Error()\n\n    assert.notEqual(cacheData, expected)\n    assert.deepEqual(cacheData, expected)\n\n    saveAttempts++\n    if (!firstSaveTime) firstSaveTime = Date.now()\n    const saveTime = Date.now() - firstSaveTime\n\n    if (delay) {\n      const minDelay = delay * saveAttempts\n      assert.isAtLeast(saveTime, minDelay)\n    }\n\n    cbs.e = null\n    // console.log(saveTime, '- SAVE -', cacheData, saveAttempts)\n  }\n}\n\nconst cbs = {}\n\nfor (const test in fixtures.persister) {\n  const testNum = test.replace('scenario ', '')\n  const { cache, delay, sets } = fixtures.persister[test]\n  const expected = JSON.parse(JSON.stringify(cache || {}))\n  const save = createSave(expected, delay, cbs)\n  const load = testNum !== '1' ? (): Object => expected : cache\n  const persistedCache = persist(save, load, delay)\n\n  describe(`Testing persister for ${test} with delay of ${delay ||\n    100}ms`, function () {\n    this.timeout(0)\n    before('Test using cache as a function', async function () {\n      cbs.stop = false\n      await persistedCache({})\n      await persistedCache(cache)\n    })\n\n    sets.map(([param, value, saveTime], i) => {\n      it(`Set '${param}' to ${value}, after ${saveTime} milliseconds`, function (done) {\n        let child = persistedCache\n        let expectedChild = expected\n\n        param = param.split('.')\n        while (param.length > 1) {\n          const key = param.shift()\n          child = child[key]\n          expectedChild = expectedChild[key]\n        }\n\n        const key = param[0]\n        const interval = !i ? saveTime : saveTime - sets[i - 1][2]\n\n        setTimeout(() => {\n          expectedChild[key] = value\n          child[key] = value\n          assert.equal(expectedChild[key], child[key])\n          done(cbs.e)\n        }, interval)\n      })\n    })\n\n    after('Stop the caceh using cache as a function', async function () {\n      cbs.stop = true\n      await persistedCache('stop')\n    })\n  })\n}\n"],"names":["lazyHandler","activeModule","get","target","prop","receiver","loadedModule","inject","Proxy","args","lazify","unsafeModule","parentModule","injectedModule","loadUnsafe","defaultModule","Object","assign","parentProxy","isHexString","hex","test","toUint8Array","hexString","Error","length","match","bytes","map","byte","parseInt","Uint8Array","fromUint8Array","reduce","str","toString","padStart","hashjs","require","digest","hash","data","uintArray","rawRes","update","resArray","digestHmac","hmac","key","uintKey","hmacHash","sha256","ripemd160","sha512Hmac","sha512","hash256","hash160","formatFunction","func","opts","numParams","encoder","results","sync","input","output","encode","i","cps","a","newCps","p","paramEncoder","encodeResult","res","param","waitResult","params","result","secp256k1","Buffer","from","publicKeyCreate","signatureNormalize","signatureExport","privateKeyTweakAdd","publicKeyTweakAdd","verify","signature","sign","SEED","HARDENED","MAX_INDEX","TWEAK_OUT_OF_RANGE_ERROR","left","slice","right","deriveKeyPoint","privateKey","publicKey","entropy","index","hardened","Secp256k1","tweakPoint","chainCode","childIndex","derivePublic","keyPair","rest","childKey","e","message","includes","derivePrivate","deriveKeyPair","parentKeys","keyIndex","childPublicKey","deriveMasterKeyPair","seed","deriveFixtures","fixtures","derive","describe","private","forEach","it","expectedChildKey","Derive","assert","deepEqual","privateWithPublic","public","ALPHABETS","createCheckSumBase","base","hashFunc","hexStr","checksum","checkHex","decode","baseString","payload","newChecksum","startsWith","createHexEncoder","newBase","check","decoders","alphabet","baseDecoder","basex","main","magic","bips","forks","keyPrefix","privkey","xpubkey","xprivkey","xpubkey58","xprivkey58","coinType","addressPrefix","legacyAddressPrefix","replayProtection","forkSighash","forcedMinVersion","forkId","serializers","address","wif","xkey","txHash","sigHash","pubkeyhash","scripthash","witnesspubkeyhash","witnessscripthash","bech32","testnet","cashAddress","createInfo","info","newNetwork","set","mainSet","infoSet","Array","isArray","concat","filter","v","s","indexOf","createNetworks","newInfos","networks","network","infos","networkType","partialInfo","name","toLowerCase","Networks","getExtendedKeyVersion","hdKey","getNetworkForVersion","version","checkVersion","prefix","fromHex","keyHex","firstHeaderByte","secondHeaderByte","pub","privateFromWIF","compress","fromWif","toHex","MAX_DEPTH","fromSeed","masterKeyPair","parentFingerPrint","depth","fromIndex","derivedKey","KeyPair","fromString","forcePublic","XKeyFixtures","extendedKey","string","base58Key","resultedXkey","ExtendedKey","resultedBase58Key","equal","path","children","fromExtendedKey","hdPath","parentPath","indexStr","adjIndex","unshift","push","scriptType","chain","parentKey","childHDPath","fromPath","parent","getParentKey","childHDKey","shift","fromPaths","hdPaths","tempPath","getKey","createPath","account","accountStr","HDKeyFixtures","HDKey","split","join","fromStringErrors","testIndex","createPaths","purpose","paths","ScriptTypes","hdPathInt","KeyPairFixtures","external","keys","packageJson","dependencies","devDependencies","file","format","sourcemap","module","plugins","json","babel","babelrc","presets","flowEntry","babelOptions","config","multiEntry","baseFixtures","fixture","fixtureBase","valid","resultedPaylod","resultedString","invalid","exception","persist","save","load","delay","cache","status","apply","thisArgs","updateCache","newCache","undefined","loaded","rawData","saving","clearTimeout","changed","Reflect","setTimeout","value","createSave","expected","cbs","saveAttempts","firstSaveTime","cacheData","stop","notEqual","Date","now","saveTime","minDelay","isAtLeast","persister","testNum","replace","sets","JSON","parse","stringify","persistedCache","timeout","before","done","child","expectedChild","interval","after"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,WAAW,GAAGC,YAAY,KAAK;EACnCC,GAAG,EAAE,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,KAA4B;;QAE3BJ,YAAJ,EAAkB,OAAOA,YAAY,CAACG,IAAD,CAAnB,CAFa;;QAI3BA,IAAI,KAAK,QAAb,EAAuB;aACdE,YAAY,IAAI;QACrBL,YAAY,GAAGK,YAAf;;aACK,MAAMF,IAAX,IAAmBD,MAAnB,EAA2B;UACzBA,MAAM,CAACC,IAAD,CAAN,CAAaG,MAAb,CAAoBN,YAAY,CAACG,IAAD,CAAhC;;OAHJ;KAL6B;;;QAa3B,CAACD,MAAM,CAACC,IAAD,CAAX,EAAmB;MACjBD,MAAM,CAACC,IAAD,CAAN,GAAe,IAAII,KAAJ,CAAU,UAAU,GAAGC,IAAb,EAAmB;YACtC,CAACR,YAAL,EAAmBE,MAAM;eAClBF,YAAY,CAACG,IAAD,CAAZ,CAAmB,GAAGK,IAAtB,CAAP;OAFa,EAGZT,WAAW,EAHC,CAAf;;;WAKKG,MAAM,CAACC,IAAD,CAAb;;CApB4B,CAAhC;;AAwBA,AAAO,MAAMM,MAAM,GAAGC,YAAY,IAAI;QAC9BC,YAAY,GAAG,UAAUC,cAAc,GAAG,EAA3B,EAA+BC,UAAU,GAAG,IAA5C,EAAkD;UAC/DC,aAAa,GAAGD,UAAU,GAAGH,YAAY,EAAf,GAAoB,EAApD;UACML,YAAY,GAAGU,MAAM,CAACC,MAAP,CAAcF,aAAd,EAA6BF,cAA7B,CAArB;IACAK,WAAW,CAACX,MAAZ,CAAmBD,YAAnB;GAHF;;QAKMY,WAAW,GAAG,IAAIV,KAAJ,CAAUI,YAAV,EAAwBZ,WAAW,EAAnC,CAApB;SACOkB,WAAP;CAPK;;ACtBA,MAAMC,WAAW,GAAIC,GAAD,IACzB,OAAOA,GAAP,KAAe,QAAf,IAA2B,eAAeC,IAAf,CAAoBD,GAApB,CADtB;AAGP,AAAO,MAAME,YAAY,GAAIC,SAAD,IAAmC;MACzD,CAACJ,WAAW,CAACI,SAAD,CAAhB,EAA6B;UACrB,IAAIC,KAAJ,CAAW,GAAED,SAAU,sBAAvB,CAAN;;;MAEEA,SAAS,CAACE,MAAV,GAAmB,CAAnB,KAAyB,CAA7B,EAAgCF,SAAS,GAAI,IAAGA,SAAU,EAA1B;QAC1BH,GAAG,GAAGG,SAAS,CAACG,KAAV,CAAgB,SAAhB,KAA8B,EAA1C;QACMC,KAAK,GAAGP,GAAG,CAACQ,GAAJ,CAAQC,IAAI,IAAIC,QAAQ,CAACD,IAAD,EAAO,EAAP,CAAxB,CAAd;SACO,IAAIE,UAAJ,CAAeJ,KAAf,CAAP;CAPK;AAUP,AAAO,MAAMK,cAAc,GAAIL,KAAD,IAC5BA,KAAK,CAACM,MAAN,CAAa,CAACC,GAAD,EAAML,IAAN,KAAeK,GAAG,GAAGL,IAAI,CAACM,QAAL,CAAc,EAAd,EAAkBC,QAAlB,CAA2B,CAA3B,EAA8B,GAA9B,CAAlC,EAAsE,EAAtE,CADK;;ACTA,MAAMC,MAA0B,GAAI3B,MAAM,CAAC,MAChD4B,OAAO,CAAC,SAAD,CADwC,CAA1C;AAIP,AAAO,MAAMC,MAAM,GAAIC,IAAD,IAAqBC,IAAD,IAAkB;QACpDC,SAAS,GAAGpB,YAAY,CAACmB,IAAD,CAA9B;QACME,MAAM,GAAGH,IAAI,GAChBI,MADY,CACLF,SADK,EAEZH,MAFY,EAAf;QAGMM,QAAQ,GAAG,IAAId,UAAJ,CAAeY,MAAf,CAAjB;SACOX,cAAc,CAACa,QAAD,CAArB;CANK;AASP,AAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAiBP,IAAjB,KAAoC,CAC5DC,IAD4D,EAE5DO,GAF4D,KAGzD;QACGC,OAAO,GAAG3B,YAAY,CAAC0B,GAAD,CAA5B;;QACME,QAAQ,GAAG,MAAMH,IAAI,CAACP,IAAD,EAAOS,OAAP,CAA3B;;SACOV,MAAM,CAACW,QAAD,CAAN,CAAiBT,IAAjB,CAAP;CANK;AASP,AAAO,MAAMU,MAAM,GAAGZ,MAAM,CAACF,MAAM,CAACc,MAAR,CAArB;AACP,AACO,MAAMC,SAAS,GAAGb,MAAM,CAACF,MAAM,CAACe,SAAR,CAAxB;AACP,AAAO,MAAMC,UAAU,GAAGP,UAAU,CAACT,MAAM,CAACU,IAAR,EAAcV,MAAM,CAACiB,MAArB,CAA7B;AAEP,AAAO,MAAMC,OAAO,GAAId,IAAD,IAAkBU,MAAM,CAACA,MAAM,CAACV,IAAD,CAAP,CAAxC;AACP,AAAO,MAAMe,OAAO,GAAIf,IAAD,IAAkBW,SAAS,CAACD,MAAM,CAACV,IAAD,CAAP,CAA3C;;AC7BA,MAAMgB,cAAc,GAAG,CAC5BC,IAD4B,EAE5BC,IAA+B,GAAG,EAFN,KAGzB;QACG;IAAEC,SAAS,GAAG,CAAd;IAAiBC,OAAjB;IAA0BC,OAAO,GAAG,EAApC;IAAwCC;MAASJ,IAAvD;QACM;IAAEK,KAAK,GAAG1C,YAAV;IAAwB2C,MAAM,GAAGjC;MAAmB6B,OAAO,IAAI,EAArE;;QAEMK,MAAM,GAAG,CAACC,CAAD,EAAYC,GAAG,GAAGC,CAAC,IAAIA,CAAvB,KAA6B;QACtC,CAACF,CAAC,EAAN,EAAU,OAAOC,GAAP;;UACJE,MAAM,GAAIC,CAAD,IAAY;MACzBA,CAAC,CAACJ,CAAD,CAAD,GAAOH,KAAK,CAACO,CAAC,CAACJ,CAAD,CAAF,CAAZ;aACOC,GAAG,CAACG,CAAD,CAAV;KAFF;;WAIOL,MAAM,CAACC,CAAD,EAAIG,MAAJ,CAAb;GANF;;QASME,YAAY,GAAGN,MAAM,CAACN,SAAD,CAA3B;;MAEIa,YAAY,GAAIC,GAAD,IAAcT,MAAM,CAACS,GAAD,CAAvC;;MACI,CAACZ,OAAL,EAAc;IACZW,YAAY,GAAIC,GAAD,IAAcA,GAA7B;GADF,MAEO,IAAIZ,OAAO,CAACrC,MAAZ,EAAoB;IACzBgD,YAAY,GAAIC,GAAD,IAAc;WACtB,MAAMC,KAAX,IAAoBb,OAApB,EAA6B;QAC3BY,GAAG,CAACC,KAAD,CAAH,GAAaV,MAAM,CAACS,GAAG,CAACC,KAAD,CAAJ,CAAnB;;;aAEKD,GAAP;KAJF;;;MAQEE,UAAU,GAAG,MAAOF,GAAP,IAAoB;IACnCA,GAAG,GAAG,MAAMA,GAAZ;WACOD,YAAY,CAACC,GAAD,CAAnB;GAFF;;MAIIX,IAAJ,EAAUa,UAAU,GAAIF,GAAD,IAAcD,YAAY,CAACC,GAAD,CAAvC;SAEH,CAAC,GAAGG,MAAJ,KAAyB;UACxBC,MAAM,GAAGpB,IAAI,CAAC,GAAGc,YAAY,CAACK,MAAD,CAAhB,CAAnB;WACOD,UAAU,CAACE,MAAD,CAAjB;GAFF;CApCK;;ACCA,MAAMC,SAAgC,GAAIrE,MAAM,CAAC,MACtD4B,OAAO,CAAC,WAAD,CAD8C,CAAhD;AAIP,MAAMuB,OAAO,GAAG;EACdG,KAAK,EAAEK,CAAC,IAAIW,MAAM,CAACC,IAAP,CAAYZ,CAAZ,EAAe,KAAf,CADE;EAEdJ,MAAM,EAAEI,CAAC,IAAIA,CAAC,CAAClC,QAAF,CAAW,KAAX;CAFf;AAKA,AAAO,MAAM+C,eAAe,GAAGzB,cAAc,CAACsB,SAAS,CAACG,eAAX,EAA4B;EACvErB;CAD2C,CAAtC;AAGP,AAAO,MAAMsB,kBAAkB,GAAG1B,cAAc,CAACsB,SAAS,CAACI,kBAAX,EAA+B;EAC7EtB;CAD8C,CAAzC;AAGP,AAAO,MAAMuB,eAAe,GAAG3B,cAAc,CAACsB,SAAS,CAACK,eAAX,EAA4B;EACvEvB;CAD2C,CAAtC;AAGP,AAAO,MAAMwB,kBAAkB,GAAG5B,cAAc,CAACsB,SAAS,CAACM,kBAAX,EAA+B;EAC7ExB,OAD6E;EAE7ED,SAAS,EAAE;CAFmC,CAAzC;AAIP,AAAO,MAAM0B,iBAAiB,GAAG7B,cAAc,CAACsB,SAAS,CAACO,iBAAX,EAA8B;EAC3EzB,OAD2E;EAE3ED,SAAS,EAAE;CAFkC,CAAxC;AAIP,AAAO,MAAM2B,MAAM,GAAG9B,cAAc,CAACsB,SAAS,CAACQ,MAAX,EAAmB;EACrD1B,OADqD;EAErDD,SAAS,EAAE,CAF0C;EAGrDE,OAAO,EAAE;CAHyB,CAA7B;AAKP,AAAO,MAAM0B,SAAS,GAAG/B,cAAc,CAACsB,SAAS,CAACU,IAAX,EAAiB;EACtD5B,OADsD;EAEtDD,SAAS,EAAE,CAF2C;EAGtDE,OAAO,EAAE,CAAC,WAAD;CAH4B,CAAhC;;ACzBA,MAAM4B,IAAI,GAAG,0BAAb;AACP,AAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,AAAO,MAAMC,SAAS,GAAG,UAAlB;AACP,AAAO,MAAMC,wBAAwB,GAAG,oBAAjC;;AAEP,MAAM9C,IAAI,GAAG,CAACC,GAAD,EAAcP,IAAd,KAAwC;QAC7CD,IAAI,GAAGa,UAAU,CAACL,GAAD,EAAMP,IAAN,CAAvB;QACMqD,IAAI,GAAGtD,IAAI,CAACuD,KAAL,CAAW,CAAX,EAAc,EAAd,CAAb;QACMC,KAAK,GAAGxD,IAAI,CAACuD,KAAL,CAAW,EAAX,EAAe,GAAf,CAAd;SACO;IAAED,IAAF;IAAQE;GAAf;CAJF;;AAOA,AAAO,MAAMC,cAAc,GAAG,OAC5B;EAAEC,UAAF;EAAcC;IAAuB,EADT,EAE5BC,OAF4B,EAG5BC,KAAc,GAAG,CAHW,EAI5BC,QAAkB,GAAG,KAJO,KAKF;MACtBD,KAAK,GAAGT,SAAZ,EAAuB,MAAM,IAAIpE,KAAJ,CAAU,qBAAV,CAAN;MACnBwB,GAAG,GAAG,EAAV;MACIsD,QAAQ,IAAID,KAAK,GAAGV,QAAxB,EAAkCU,KAAK,IAAIV,QAAT;;MAC9BU,KAAK,IAAIV,QAAb,EAAuB;QACjB,CAACO,UAAL,EAAiB;YACT,IAAI1E,KAAJ,CAAU,sDAAV,CAAN;;;IAEFwB,GAAG,GAAI,KAAIkD,UAAW,EAAtB;GAJF,MAKO,IAAIC,SAAJ,EAAe;IACpBnD,GAAG,GAAGmD,SAAN;GADK,MAEA,IAAID,UAAJ,EAAgB;IACrBlD,GAAG,GAAG,MAAMuD,eAAA,CAA0BL,UAA1B,EAAsC,IAAtC,CAAZ;GADK,MAEA;UACC,IAAI1E,KAAJ,CAAU,6BAAV,CAAN;;;EAEFwB,GAAG,IAAIqD,KAAK,CAAClE,QAAN,CAAe,EAAf,EAAmBC,QAAnB,CAA4B,CAA5B,EAA+B,GAA/B,CAAP;QACM;IAAE0D,IAAF;IAAQE;MAAUjD,IAAI,CAACC,GAAD,EAAMoD,OAAN,CAA5B;SACO;IAAEI,UAAU,EAAEV,IAAd;IAAoBW,SAAS,EAAET,KAA/B;IAAsCU,UAAU,EAAEL;GAAzD;CAvBK;AA0BP,AAAO,MAAMM,YAAY,GAAG,OAC1BR,SAD0B,EAE1BE,KAF0B,EAG1BD,OAH0B,EAI1BE,QAAiB,GAAG,KAJM,KAK0B;MAChD;UACIM,OAAO,GAAG;MAAET;KAAlB;;iBACgC,MAAMF,cAAc,CAClDW,OADkD,EAElDR,OAFkD,EAGlDC,KAHkD,EAIlDC,QAJkD,CAApD;UAAM;MAAEE;KAAR;UAAuBK,IAAvB;;UAMMC,QAAQ,GAAG,MAAMP,iBAAA,CACrBJ,SADqB,EAErBK,UAFqB,EAGrB,IAHqB,CAAvB;;MAKSL,SAAS,EAAEW;OAAaD,IAAjC;GAbF,CAcE,OAAOE,CAAP,EAAU;QACN,CAACA,CAAC,CAACC,OAAF,CAAUC,QAAV,CAAmBpB,wBAAnB,CAAL,EAAmD,MAAMkB,CAAN;WAC5CJ,YAAY,CAACR,SAAD,EAAYE,KAAK,GAAG,CAApB,EAAuBD,OAAvB,EAAgCE,QAAhC,CAAnB;;CAtBG;AA0BP,AAAO,MAAMY,aAAa,GAAG,OAC3BhB,UAD2B,EAE3BG,KAF2B,EAG3BD,OAH2B,EAI3BE,QAAiB,GAAG,KAJO,EAK3BH,SAL2B,KAM0B;MACjD;UACIS,OAAO,GAAG;MAAEV,UAAF;MAAcC;KAA9B;;kBACgC,MAAMF,cAAc,CAClDW,OADkD,EAElDR,OAFkD,EAGlDC,KAHkD,EAIlDC,QAJkD,CAApD;UAAM;MAAEE;KAAR;UAAuBK,IAAvB;;UAMMC,QAAQ,GAAG,MAAMP,kBAAA,CAA6BL,UAA7B,EAAyCM,UAAzC,CAAvB;;MACSN,UAAU,EAAEY;OAAaD,IAAlC;GATF,CAUE,OAAOE,CAAP,EAAU;QACN,CAACA,CAAC,CAACC,OAAF,CAAUC,QAAV,CAAmBpB,wBAAnB,CAAL,EAAmD,MAAMkB,CAAN;QAC/CV,KAAK,GAAGT,SAAZ,EAAuBS,KAAK,IAAIV,QAAT;WAChBuB,aAAa,CAAChB,UAAD,EAAaG,KAAK,GAAG,CAArB,EAAwBD,OAAxB,EAAiCE,QAAjC,EAA2CH,SAA3C,CAApB;;CApBG;AAwBP,AAAO,MAAMgB,aAAa,GAAG,OAC3BC,UAD2B,EAE3BC,QAAiB,GAAG,GAFO,KAGC;QACtBf,QAAQ,GAAGe,QAAQ,CAACA,QAAQ,CAAC5F,MAAT,GAAkB,CAAnB,CAAR,KAAkC,GAAnD;QACM4E,KAAK,GAAGC,QAAQ,GAAGxE,QAAQ,CAACuF,QAAQ,CAACtB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAD,CAAX,GAAqCjE,QAAQ,CAACuF,QAAD,CAAnE;QACM;IAAEZ,SAAF;IAAaP;MAAekB,UAAlC;MACIjB,SAAS,GAAGiB,UAAU,CAACjB,SAA3B;;MACI,CAACG,QAAQ,IAAID,KAAK,IAAIV,QAAtB,KAAmC,CAACO,UAAxC,EAAoD;UAC5C,IAAI1E,KAAJ,CAAU,qDAAV,CAAN;;;MAEE0E,UAAJ,EAAgB;UACRY,QAAQ,GAAG,MAAMI,aAAa,CAClChB,UADkC,EAElCG,KAFkC,EAGlCI,SAHkC,EAIlCH,QAJkC,EAKlCH,SALkC,CAApC;UAOMmB,cAAc,GAAG,MAAMf,eAAA,CAC3BO,QAAQ,CAACZ,UADkB,EAE3B,IAF2B,CAA7B;6BAIYY,QAAZ;MAAsBX,SAAS,EAAEmB;;;;MAE/B,CAACnB,SAAL,EAAgB;QACV,CAACD,UAAL,EAAiB,MAAM,IAAI1E,KAAJ,CAAU,6BAAV,CAAN;IACjB2E,SAAS,GAAG,MAAMI,eAAA,CAA0BL,UAA1B,EAAsC,IAAtC,CAAlB;;;SAEKS,YAAY,CAACR,SAAD,EAAYE,KAAZ,EAAmBI,SAAnB,EAA8BH,QAA9B,CAAnB;CA7BK;AAgCP,AAAO,MAAMiB,mBAAmB,GAAG,MACjCC,IADiC,IAEF;QACzB;IAAE1B,IAAF;IAAQE;MAAUjD,IAAI,CAACyE,IAAD,EAAO9B,IAAP,CAA5B;QACMS,SAAS,GAAG,MAAMI,eAAA,CAA0BT,IAA1B,EAAgC,IAAhC,CAAxB;SACO;IAAEI,UAAU,EAAEJ,IAAd;IAAoBK,SAApB;IAA+BM,SAAS,EAAET,KAA1C;IAAiDU,UAAU,EAAE;GAApE;CALK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5HP,MAAMe,cAAc,GAAGC,QAAQ,CAACC,MAAhC;AAEAC,cAAQ,CAAC,wBAAD,EAA2B,YAAY;EAC7CH,cAAc,CAACI,OAAf,CAAuBC,OAAvB,CAA+BzG,IAAI,IAAI;IACrC0G,QAAE,CAAE,2CAA0C1G,IAAI,CAAC,CAAD,CAAI,cACpDA,IAAI,CAAC,CAAD,CACL,EAFC,EAEE,kBAAkB;YACd6E,UAAU,GAAG7E,IAAI,CAAC,CAAD,CAAvB;YACMoF,SAAS,GAAGpF,IAAI,CAAC,CAAD,CAAtB;YACMgF,KAAK,GAAGhF,IAAI,CAAC,CAAD,CAAlB;YACMiF,QAAQ,GAAGjF,IAAI,CAAC,CAAD,CAArB;YACM2G,gBAAgB,GAAG;QACvB9B,UAAU,EAAE7E,IAAI,CAAC,CAAD,CADO;QAEvBoF,SAAS,EAAEpF,IAAI,CAAC,CAAD,CAFQ;QAGvBqF,UAAU,EAAErF,IAAI,CAAC,CAAD;OAHlB;YAKMyF,QAAQ,GAAG,MAAMmB,aAAA,CACrB/B,UADqB,EAErBG,KAFqB,EAGrBI,SAHqB,EAIrBH,QAJqB,CAAvB;MAMA4B,WAAM,CAACC,SAAP,CAAiBrB,QAAjB,EAA2BkB,gBAA3B;KAlBA,CAAF;GADF;EAuBAP,cAAc,CAACW,iBAAf,CAAiCN,OAAjC,CAAyCzG,IAAI,IAAI;IAC/C0G,QAAE,CAAE,wCAAuC1G,IAAI,CAAC,CAAD,CAAI,cACjDA,IAAI,CAAC,CAAD,CACL,EAFC,EAEE,kBAAkB;YACd6E,UAAU,GAAG7E,IAAI,CAAC,CAAD,CAAvB;YACMoF,SAAS,GAAGpF,IAAI,CAAC,CAAD,CAAtB;YACMgF,KAAK,GAAGhF,IAAI,CAAC,CAAD,CAAlB;YACMiF,QAAQ,GAAGjF,IAAI,CAAC,CAAD,CAArB;YACM2G,gBAAgB,GAAG;QACvB9B,UAAU,EAAE7E,IAAI,CAAC,CAAD,CADO;QAEvBoF,SAAS,EAAEpF,IAAI,CAAC,CAAD,CAFQ;QAGvBqF,UAAU,EAAErF,IAAI,CAAC,CAAD;OAHlB;YAKM8E,SAAS,GAAG9E,IAAI,CAAC,CAAD,CAAtB;YACMyF,QAAQ,GAAG,MAAMmB,aAAA,CACrB/B,UADqB,EAErBG,KAFqB,EAGrBI,SAHqB,EAIrBH,QAJqB,EAKrBH,SALqB,CAAvB;MAOA+B,WAAM,CAACC,SAAP,CAAiBrB,QAAjB,EAA2BkB,gBAA3B;KApBA,CAAF;GADF;EAyBAP,cAAc,CAACY,MAAf,CAAsBP,OAAtB,CAA8BzG,IAAI,IAAI;IACpC0G,QAAE,CAAE,uBAAsB1G,IAAI,CAAC,CAAD,CAAI,cAAaA,IAAI,CAAC,CAAD,CAAI,EAArD,EAAwD,kBAAkB;YACpE8E,SAAS,GAAG9E,IAAI,CAAC,CAAD,CAAtB;YACMoF,SAAS,GAAGpF,IAAI,CAAC,CAAD,CAAtB;YACMgF,KAAK,GAAGhF,IAAI,CAAC,CAAD,CAAlB;YACMiF,QAAQ,GAAGjF,IAAI,CAAC,CAAD,CAArB;YACM2G,gBAAgB,GAAG;QACvB7B,SAAS,EAAE9E,IAAI,CAAC,CAAD,CADQ;QAEvBoF,SAAS,EAAEpF,IAAI,CAAC,CAAD,CAFQ;QAGvBqF,UAAU,EAAErF,IAAI,CAAC,CAAD;OAHlB;YAKMyF,QAAQ,GAAG,MAAMmB,YAAA,CACrB9B,SADqB,EAErBE,KAFqB,EAGrBI,SAHqB,EAIrBH,QAJqB,CAAvB;MAMA4B,WAAM,CAACC,SAAP,CAAiBrB,QAAjB,EAA2BkB,gBAA3B;KAhBA,CAAF;GADF;CAjDM,CAAR;;ACMO,MAAMM,SAA0B,GAAG,CACxC,IADwC,EAExC,UAFwC,EAGxC,aAHwC,EAIxC,kBAJwC,EAKxC,kCALwC,EAMxC,sCANwC,EAOxC,4DAPwC,EAQxC,gEARwC,EASxC,kEATwC,CAAnC;AAYP,AAAO,MAAMC,kBAAkB,GAAG,CAChCC,IADgC,EAEhCC,QAFgC,MAGf;EACjBvE,MAAM,EAAGwE,MAAD,IAA4B;UAC5BC,QAAQ,GAAG,CAACF,QAAQ,IAAIlF,OAAb,EAAsBmF,MAAtB,CAAjB;UACME,QAAQ,GAAI,GAAEF,MAAO,GAAEC,QAAQ,CAAC5C,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAqB,EAAlD;WACOyC,IAAI,CAACtE,MAAL,CAAY0E,QAAZ,CAAP;GAJe;EAMjBC,MAAM,EAAGC,UAAD,IAAgC;UAChCJ,MAAM,GAAGF,IAAI,CAACK,MAAL,CAAYC,UAAZ,CAAf;UACMC,OAAO,GAAGL,MAAM,CAAC3C,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAhB;UACMiD,WAAW,GAAG,CAACP,QAAQ,IAAIlF,OAAb,EAAsBwF,OAAtB,CAApB;UACMJ,QAAQ,GAAGD,MAAM,CAAC3C,KAAP,CAAa,CAAC,CAAd,CAAjB;QACIiD,WAAW,CAACC,UAAZ,CAAuBN,QAAvB,CAAJ,EAAsC,OAAOI,OAAP;UAChC,IAAIvH,KAAJ,CAAU,kBAAV,CAAN;;CAf8B,CAA3B;AAmBP,AAAO,MAAM0H,gBAAgB,GAAG,CAC9BV,IAD8B,EAE9BC,QAF8B,KAGhB;QACRU,OAAO,qBAAQX,IAAR,CAAb;;QACMtE,MAA+B,GAAGiF,OAAO,CAACjF,MAAhD;QACM2E,MAA+B,GAAGM,OAAO,CAACN,MAAhD;;EACAM,OAAO,CAACjF,MAAR,GAAiBG,CAAC,IAAIH,MAAM,CAACc,aAAM,CAACC,IAAP,CAAYZ,CAAZ,EAAe,KAAf,CAAD,CAA5B;;EACA8E,OAAO,CAACN,MAAR,GAAiBxE,CAAC,IAAIwE,MAAM,CAACxE,CAAD,CAAN,CAAUlC,QAAV,CAAmB,KAAnB,CAAtB;;2BACYgH,OAAZ;IAAqBC,KAAK,EAAEb,kBAAkB,CAACY,OAAD,EAAUV,QAAV;;CATzC;AAYP,AAAO,MAAMD,IAAW,GAAGF,SAAS,CAACrG,MAAV,CAAiB,CAACoH,QAAD,EAAWC,QAAX,KAAwB;QAC5DC,WAAW,GAAGL,gBAAgB,CAACM,KAAK,CAACF,QAAD,CAAN,CAApC;2BACYD,QAAZ;KAAuBC,QAAQ,CAAC7H,MAAV,GAAmB8H;;CAFhB,EAGxB,EAHwB,CAApB;;ACrDA,MAAME,IAAiB,GAAG;EAC/BC,KAAK,EAAE,UADwB;EAE/BC,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,CAFyB;EAG/BC,KAAK,EAAE,EAHwB;EAI/BC,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GAVmB;EAY/BC,aAAa,EAAE,EAZgB;EAa/BC,mBAAmB,EAAE,EAbU;EAc/BC,gBAAgB,EAAE;IAChBC,WAAW,EAAE,IADG;IAEhBC,gBAAgB,EAAE,CAFF;IAGhBC,MAAM,EAAE;GAjBqB;EAmB/BC,WAAW,EAAE;IACXC,OAAO,EAAEnC,IAAI,CAAC,IAAD,CAAJ,CAAWY,KADT;IAEXwB,GAAG,EAAEpC,IAAI,CAAC,IAAD,CAAJ,CAAWY,KAFL;IAGXyB,IAAI,EAAErC,IAAI,CAAC,IAAD,CAAJ,CAAWY,KAHN;IAIX0B,MAAM,EAAEvH,OAJG;IAKXwH,OAAO,EAAG7I,GAAD,IAAiB8C,MAAM,CAACC,IAAP,CAAY1B,OAAO,CAACrB,GAAG,CAACC,QAAJ,CAAa,KAAb,CAAD,CAAnB,EAA0C,KAA1C;;CAxBvB;;ACJA,MAAMsH,MAAI,GAAG;EAClBE,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,CADY;EAElBC,KAAK,EAAE,CAAC,aAAD,EAAgB,aAAhB,EAA+B,gBAA/B,CAFW;EAGlBQ,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE,IAFC;IAGbC,iBAAiB,EAAE,IAHN;IAIbC,iBAAiB,EAAE,IAJN;IAKbC,MAAM,EAAE;;CARL;AAYP,AAAO,MAAMC,OAAO,qBACf5B,MADe;EAElBC,KAAK,EAAE,UAFW;EAGlBG,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GATM;EAWlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE,IAFC;IAGbC,iBAAiB,EAAE,IAHN;IAIbC,iBAAiB,EAAE,IAJN;IAKbC,MAAM,EAAE;;EAhBL;;;;;;;ACZA,MAAM3B,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBC,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,CAFY;EAGlBE,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GATM;EAWlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE,IAFC;IAGbC,iBAAiB,EAAE,IAHN;IAIbC,iBAAiB,EAAE,IAJN;IAKbC,MAAM,EAAE;GAhBQ;EAkBlBd,gBAAgB,EAAE;IAChBC,WAAW,EAAE,EADG;IAEhBC,gBAAgB,EAAE,CAFF;IAGhBC,MAAM,EAAE;;CArBL;AAyBP,AAAO,MAAMY,SAAO,qBACf5B,MADe;EAElBI,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GARM;EAUlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE,IAFC;IAGbC,iBAAiB,EAAE,IAHN;IAIbC,iBAAiB,EAAE,IAJN;IAKbC,MAAM,EAAE;;EAfL;;;;;;;ACzBA,MAAM3B,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBG,SAAS,EAAE;IACTM,QAAQ,EAAE;GAHM;EAKlBC,aAAa,EAAE;IACbkB,WAAW,EAAE;GANG;EAQlBjB,mBAAmB,EAAE;IACnBW,UAAU,EAAE,IADO;IAEnBC,UAAU,EAAE;GAVI;EAYlBX,gBAAgB,EAAE;IAChBC,WAAW,EAAE,IADG;IAEhBC,gBAAgB,EAAE;;CAdf;;;;;;ACAA,MAAMf,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBG,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GARM;EAUlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE;;CAZT;;;;;;ACAA,MAAMxB,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBC,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,CAFY;EAGlBE,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GATM;EAWlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE,IAFC;IAGbC,iBAAiB,EAAE,IAHN;IAIbC,iBAAiB,EAAE,IAJN;IAKbC,MAAM,EAAE;GAhBQ;EAkBlBf,mBAAmB,EAAE;IACnBY,UAAU,EAAE;;CAnBT;;;;;;ACAA,MAAMxB,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBG,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITE,UAAU,EAAE,MAJH;IAKTD,SAAS,EAAE,MALF;IAMTE,QAAQ,EAAE;GARM;EAUlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE;;CAZT;;;;;;ACAA,MAAMxB,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBC,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,CAFY;EAGlBE,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GATM;EAWlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE,IAFC;IAGbC,iBAAiB,EAAE,IAHN;IAIbC,iBAAiB,EAAE,IAJN;IAKbC,MAAM,EAAE;GAhBQ;EAkBlBf,mBAAmB,EAAE;IACnBY,UAAU,EAAE;;CAnBT;;;;;;ACAA,MAAMxB,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBC,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,CAFY;EAGlBE,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GATM;EAWlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE,IAFC;IAGbC,iBAAiB,EAAE,IAHN;IAIbC,iBAAiB,EAAE,IAJN;IAKbC,MAAM,EAAE;;CAhBL;;;;;;ACAA,MAAM3B,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBC,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,CAFY;EAGlBE,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GATM;EAWlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE,IAFC;IAGbC,iBAAiB,EAAE,IAHN;IAIbC,iBAAiB,EAAE,IAJN;IAKbC,MAAM,EAAE;GAhBQ;EAkBlBf,mBAAmB,EAAE;IACnBY,UAAU,EAAE;;CAnBT;;;;;;ACAA,MAAMxB,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBG,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GARM;EAUlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE;;CAZT;;;;;;ACAA,MAAMxB,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBC,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAFY;EAGlBE,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GATM;EAWlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE,IAFC;IAGbC,iBAAiB,EAAE,IAHN;IAIbC,iBAAiB,EAAE,IAJN;IAKbC,MAAM,EAAE;GAhBQ;EAkBlBf,mBAAmB,EAAE;IACnBY,UAAU,EAAE;;CAnBT;;;;;;ACAA,MAAMxB,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBC,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAFY;EAGlBC,KAAK,EAAE,EAHW;EAIlBC,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GAVM;EAYlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE,IAFC;IAGbC,iBAAiB,EAAE,IAHN;IAIbC,iBAAiB,EAAE,IAJN;IAKbC,MAAM,EAAE;;CAjBL;;;;;;ACAA,MAAM3B,MAAI,GAAG;EAClBC,KAAK,EAAE,UADW;EAElBG,SAAS,EAAE;IACTC,OAAO,EAAE,IADA;IAETC,OAAO,EAAE,UAFA;IAGTC,QAAQ,EAAE,UAHD;IAITC,SAAS,EAAE,MAJF;IAKTC,UAAU,EAAE,MALH;IAMTC,QAAQ,EAAE;GARM;EAUlBC,aAAa,EAAE;IACbY,UAAU,EAAE,IADC;IAEbC,UAAU,EAAE;;CAZT;;;;;;;;;;;;;;;;;;;;;;;;ACUA,MAAMM,UAAU,GAAIC,IAAD,IAAoC;QACtDC,UAAuB,GAAI,EAAjC;;OAEK,MAAMC,GAAX,IAAkBjC,IAAlB,EAAwB;UAChBkC,OAAO,GAAGlC,IAAI,CAACiC,GAAD,CAApB;UACME,OAAO,GAAGJ,IAAI,CAACE,GAAD,CAApB;;QAEIG,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAJ,EAA4B;MAC1BF,UAAU,CAACC,GAAD,CAAV,GAAkB,CAACE,OAAO,IAAI,EAAZ,EACfG,MADe,CACRJ,OADQ,EAEfK,MAFe,CAER,CAACC,CAAD,EAAI9H,CAAJ,EAAO+H,CAAP,KAAaA,CAAC,CAACC,OAAF,CAAUF,CAAV,MAAiB9H,CAFtB,CAAlB;KADF,MAIO,IAAI,OAAOwH,OAAP,KAAmB,QAAvB,EAAiC;MACtCF,UAAU,CAACC,GAAD,CAAV,qBAAuBC,OAAvB,EAAoCC,OAAO,IAAI,EAA/C;KADK,MAEA,IAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;MACzCH,UAAU,CAACC,GAAD,CAAV,GAAkBE,OAAlB;KADK,MAEAH,UAAU,CAACC,GAAD,CAAV,GAAkBC,OAAlB;;;SAGFF,UAAP;CAlBK;AAqBP,AAAO,MAAMW,cAAc,GAAIC,QAAD,IAA2B;QACjDC,QAAQ,GAAG;IAAE7C;GAAnB;;OACK,MAAM8C,OAAX,IAAsBF,QAAtB,EAAgC;UACxBG,KAAK,GAAGH,QAAQ,CAACE,OAAD,CAAtB;;SACK,MAAME,WAAX,IAA0BD,KAA1B,EAAiC;YACzBE,WAAW,GAAGF,KAAK,CAACC,WAAD,CAAzB;UACIE,IAAI,GAAGJ,OAAX;UACIE,WAAW,KAAK,MAApB,EAA4BE,IAAI,IAAIF,WAAW,CAACG,WAAZ,EAAR;MAC5BN,QAAQ,CAACK,IAAD,CAAR,GAAiBpB,UAAU,CAACmB,WAAD,CAA3B;;;;SAGGJ,QAAP;CAXK;AAcP,AAAO,MAAMA,QAAsB,GAAGF,cAAc,CAACS,QAAD,CAA7C;AAEP,AAGO,MAAMC,qBAAqB,GAAG,CACnCC,KADmC,EAEnCR,OAAe,GAAG,MAFiB,KAGhC;QACG;IAAE1C,SAAS,GAAG;MAAOyC,QAAQ,CAACC,OAAD,CAAnC;MACIQ,KAAK,CAAC7G,UAAV,EAAsB,OAAO2D,SAAS,CAACG,QAAjB;MAClB+C,KAAK,CAAC5G,SAAV,EAAqB,OAAO0D,SAAS,CAACE,OAAjB;QACf,IAAIvI,KAAJ,CAAU,iCAAV,CAAN;CAPK;AAUP,AAAO,MAAMwL,oBAAoB,GAAIC,OAAD,IAA6B;OAC1D,MAAMV,OAAX,IAAsBD,QAAtB,EAAgC;QAC1B;MACFY,YAAY,CAACD,OAAD,EAAUV,OAAV,CAAZ;aACOA,OAAP;KAFF,CAGE,OAAOxF,CAAP,EAAU;;;QAER,IAAIvF,KAAJ,CAAU,yBAAV,CAAN;CAPK;AAUP,AAAO,MAAM0L,YAAY,GAAG,CAACD,OAAD,EAAkBV,OAAe,GAAG,MAApC,KAA+C;QACnE;IAAE1C,SAAS,GAAG;MAAOyC,QAAQ,CAACC,OAAD,CAAnC;;MACIU,OAAJ,EAAa;SACN,MAAME,MAAX,IAAqBtD,SAArB,EAAgC;UAC1BA,SAAS,CAACsD,MAAD,CAAT,KAAsBF,OAA1B,EAAmC,OAAOA,OAAP;;;UAE/B,IAAIzL,KAAJ,CAAU,8BAAV,CAAN;;CANG;;AC9DA,MAAM4L,OAAO,GAAIC,MAAD,IAA6B;MAC9CA,MAAM,CAAC5L,MAAP,KAAkB,EAAlB,IAAwB4L,MAAM,CAAC5L,MAAP,KAAkB,GAA9C,EAAmD;UAC3C,IAAID,KAAJ,CAAU,uBAAV,CAAN;;;QAEI8L,eAAe,GAAGxL,QAAQ,CAACuL,MAAM,CAACtH,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAhC;;MACI;QACEuH,eAAe,KAAK,CAAxB,EAA2B,MAAM,IAAI9L,KAAJ,CAAU,wBAAV,CAAN;UACrBoF,OAAgB,GAAG;MAAEV,UAAU,EAAEmH,MAAM,CAACtH,KAAP,CAAa,CAAb,EAAgB,EAAhB;KAAvC;;QACIsH,MAAM,CAAC5L,MAAP,KAAkB,GAAtB,EAA2B;YACnB8L,gBAAgB,GAAGzL,QAAQ,CAACuL,MAAM,CAACtH,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAD,EAAuB,EAAvB,CAAjC;;UACIwH,gBAAgB,KAAK,CAArB,IAA0BA,gBAAgB,KAAK,CAAnD,EAAsD;cAC9C,IAAI/L,KAAJ,CAAU,uBAAV,CAAN;;;YAEIgM,GAAG,GAAG;QAAErH,SAAS,EAAEkH,MAAM,CAACtH,KAAP,CAAa,EAAb,EAAiB,GAAjB;OAAzB;MACA/E,MAAM,CAACC,MAAP,CAAc2F,OAAd,EAAuB4G,GAAvB;;;WAEK5G,OAAP;GAXF,CAYE,OAAOG,CAAP,EAAU;QACNuG,eAAe,KAAK,CAApB,IAAyBA,eAAe,KAAK,CAAjD,EAAoD;YAC5C,IAAI9L,KAAJ,CAAU,uBAAV,CAAN;;;WAEK;MAAE2E,SAAS,EAAEkH,MAAM,CAACtH,KAAP,CAAa,CAAb,EAAgB,EAAhB;KAApB;;CArBG;AAyBP,AAAO,MAAM0H,cAAc,GAAG,CAC5B7C,GAD4B,EAE5B2B,OAAe,GAAG,MAFU,KAGkB;QACxC;IAAE7B,WAAF;IAAeb;MAAcyC,QAAQ,CAACC,OAAD,CAA3C;QACMc,MAAM,GAAG3C,WAAW,CAACE,GAAZ,CAAgB/B,MAAhB,CAAuB+B,GAAvB,CAAf;;MACI9I,QAAQ,CAACuL,MAAM,CAACtH,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAR,KAAqC8D,SAAS,CAACC,OAAnD,EAA4D;UACpD,IAAItI,KAAJ,CACH,sBAAqB6L,MAAM,CAACtH,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAmB,gBAAewG,OAAQ,EAD5D,CAAN;;;QAIIrG,UAAU,GAAGmH,MAAM,CAACtH,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAnB;MACI2H,QAAQ,GAAG,KAAf;;MACIL,MAAM,CAAC5L,MAAP,IAAiB,EAArB,EAAyB;QACnBK,QAAQ,CAACuL,MAAM,CAACtH,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAD,EAAuB,EAAvB,CAAR,KAAuC,CAA3C,EAA8C;YACtC,IAAIvE,KAAJ,CAAW,4BAA2B6L,MAAM,CAACtH,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAqB,EAA3D,CAAN;;;IAEF2H,QAAQ,GAAG,IAAX;;;SAEK;IAAExH,UAAF;IAAcwH;GAArB;CAnBK;AAsBP,AAAO,MAAMC,OAAO,GAAG,OACrB/C,GADqB,EAErB2B,OAAe,GAAG,MAFG,KAGA;QACf;IAAErG,UAAF;IAAcwH;MAAaD,cAAc,CAAC7C,GAAD,EAAM2B,OAAN,CAA/C;QACMpG,SAAS,GAAG,MAAMjB,eAAe,CAACgB,UAAD,EAAawH,QAAb,CAAvC;SACO;IAAExH,UAAF;IAAcC;GAArB;CANK;AASP,AAAO,MAAMyH,KAAK,GAAIhH,OAAD,IAA8B;QAC3CT,SAAS,GAAGS,OAAO,CAACT,SAAR,IAAqB,EAAvC;QACMD,UAAU,GAAGU,OAAO,CAACV,UAAR,GAAsB,KAAIU,OAAO,CAACV,UAAW,EAA7C,GAAiD,EAApE;SACQ,GAAEA,UAAW,GAAEC,SAAU,EAAjC;CAHK;;AC/CP,MAAM0H,SAAS,GAAG,IAAlB;AAEA,AAAO,MAAMC,QAAQ,GAAG,OACtBtG,IADsB,EAEtB+E,OAFsB,KAGU;QAC1BwB,aAAa,GAAG,MAAMxG,mBAAmB,CAACC,IAAD,CAA/C;2BAEKuG,aADL;IAEEC,iBAAiB,EAAE,CAFrB;IAGEf,OAAO,EAAEH,qBAAqB,CAACiB,aAAD,EAAgBxB,OAAhB,CAHhC;IAIE0B,KAAK,EAAE;;CATJ;AAaP,AAAO,MAAMC,SAAS,GAAG,OACvB9G,UADuB,EAEvBf,KAFuB,EAGvBkG,OAHuB,KAIM;MACzBnF,UAAU,CAAC6G,KAAX,IAAoBJ,SAAxB,EAAmC,MAAM,IAAIrM,KAAJ,CAAU,iBAAV,CAAN;QAE7B2M,UAA8B,GAAG,MAAMhH,aAAa,CAACC,UAAD,EAAaf,KAAb,CAA1D;;MACI,CAACe,UAAU,CAACjB,SAAhB,EAA2B;QACrB,CAACiB,UAAU,CAAClB,UAAhB,EAA4B;YACpB,IAAI1E,KAAJ,CAAU,8CAAV,CAAN;;;IAEF4F,UAAU,CAACjB,SAAX,GAAuB,MAAMjB,eAAe,CAACkC,UAAU,CAAClB,UAAZ,EAAwB,IAAxB,CAA5C;;;QAEI8H,iBAAiB,GAAG,MAAMxK,OAAO,CAAC4D,UAAU,CAACjB,SAAZ,CAAvC;EACAoG,OAAO,GAAGA,OAAO,IAAIS,oBAAoB,CAAC5F,UAAU,CAAC6F,OAAZ,CAAzC;2BAGKkB,UADL;IAEEH,iBAAiB,EAAElM,QAAQ,CAACkM,iBAAiB,CAACjI,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B,CAAD,EAAgC,EAAhC,CAF7B;IAGEkH,OAAO,EAAEH,qBAAqB,CAACqB,UAAD,EAAa5B,OAAb,CAHhC;IAIE0B,KAAK,EAAE7G,UAAU,CAAC6G,KAAX,GAAmB;;CArBvB;AAyBP,AAAO,MAAMb,SAAO,GAAG,CAACC,MAAD,EAAiBd,OAAjB,KAAuD;QACtEU,OAAO,GAAGnL,QAAQ,CAACuL,MAAM,CAACtH,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAxB;MACIwG,OAAJ,EAAaW,YAAY,CAACD,OAAD,EAAUV,OAAV,CAAZ;;IAEXU,OADF;IAEEgB,KAAK,EAAEnM,QAAQ,CAACuL,MAAM,CAACtH,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAD,EAAsB,EAAtB,CAFjB;IAGEiI,iBAAiB,EAAElM,QAAQ,CAACuL,MAAM,CAACtH,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAD,EAAuB,EAAvB,CAH7B;IAIEW,UAAU,EAAE5E,QAAQ,CAACuL,MAAM,CAACtH,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAD,EAAuB,EAAvB,CAJtB;IAKEU,SAAS,EAAE4G,MAAM,CAACtH,KAAP,CAAa,EAAb,EAAiB,EAAjB;KACRqI,OAAA,CAAgBf,MAAM,CAACtH,KAAP,CAAa,EAAb,EAAiB,GAAjB,CAAhB,CANL;CAHK;AAaP,AAAO,MAAMsI,UAAU,GAAG,CACxBtB,KADwB,EAExBR,OAAe,GAAG,MAFM,KAGJ;QACdc,MAAM,GAAGf,QAAQ,CAACC,OAAD,CAAR,CAAkB7B,WAAlB,CAA8B,MAA9B,EAAsC7B,MAAtC,CAA6CkE,KAA7C,CAAf;SACOK,SAAO,CAACC,MAAD,EAASd,OAAT,CAAd;CALK;AAQP,AAAO,MAAMqB,OAAK,GAAG,CACnBb,KADmB,EAEnBR,OAFmB,EAGnB+B,WAAoB,GAAG,KAHJ,KAIR;MACP/B,OAAJ,EAAaW,YAAY,CAACH,KAAK,CAACE,OAAP,EAAgBV,OAAhB,CAAZ;QACP;IAAErG,UAAF;IAAcC;MAAc4G,KAAlC;QACMnG,OAAgB,GAAG;IAAET;GAA3B;MACI,CAACmI,WAAL,EAAkB1H,OAAO,CAACV,UAAR,GAAqBA,UAArB;SAEhB4G,qBAAqB,CAAClG,OAAD,EAAU2F,OAAV,CAArB,CACGpK,QADH,CACY,EADZ,EAEGC,QAFH,CAEY,CAFZ,EAEe,GAFf,IAGA2K,KAAK,CAACkB,KAAN,CAAY9L,QAAZ,CAAqB,EAArB,EAAyBC,QAAzB,CAAkC,CAAlC,EAAqC,GAArC,CAHA,GAIA2K,KAAK,CAACiB,iBAAN,CAAwB7L,QAAxB,CAAiC,EAAjC,EAAqCC,QAArC,CAA8C,CAA9C,EAAiD,GAAjD,CAJA,GAKA2K,KAAK,CAACrG,UAAN,CAAiBvE,QAAjB,CAA0B,EAA1B,EAA8BC,QAA9B,CAAuC,CAAvC,EAA0C,GAA1C,CALA,GAMA2K,KAAK,CAACtG,SANN,GAOA2H,KAAA,CAAcxH,OAAd,EAAuBb,KAAvB,CAA6B,CAA7B,EAAgC,EAAhC,CARF;CATK;AAqBP,AAAO,MAAM5D,QAAQ,GAAG,CACtB4K,KADsB,EAEtBR,OAAe,GAAG,MAFI,EAGtB+B,WAAoB,GAAG,KAHD,KAIX;QACLjB,MAAM,GAAGO,OAAK,CAACb,KAAD,EAAQR,OAAR,EAAiB+B,WAAjB,CAApB;SACOhC,QAAQ,CAACC,OAAD,CAAR,CAAkB7B,WAAlB,CAA8B,MAA9B,EAAsCxG,MAAtC,CAA6CmJ,MAA7C,CAAP;CANK;;AC7FP,MAAMkB,YAAY,GAAG7G,QAAQ,CAAC8G,WAA9B;AACA,MAAMjC,OAAO,GAAG,MAAhB;AAEA3E,cAAQ,CAAE,gCAAF,EAAmC,YAAY;EACrD2G,YAAY,CAACE,MAAb,CAAoB3G,OAApB,CAA4BzG,IAAI,IAAI;UAC5BqN,SAAS,GAAGrN,IAAI,CAAC,CAAD,CAAtB;QACIwJ,IAAI,GAAG;MACToC,OAAO,EAAE5L,IAAI,CAAC,CAAD,CADJ;MAET4M,KAAK,EAAE5M,IAAI,CAAC,CAAD,CAFF;MAGT2M,iBAAiB,EAAE3M,IAAI,CAAC,CAAD,CAHd;MAITqF,UAAU,EAAErF,IAAI,CAAC,CAAD,CAJP;MAKToF,SAAS,EAAEpF,IAAI,CAAC,CAAD;KALjB;QAQIA,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAAR,KAAmB,EAAvB,EAA2BoJ,IAAI,qBAAQA,IAAR;MAAc3E,UAAU,EAAE7E,IAAI,CAAC,CAAD;MAAlC;QACvBA,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAAR,KAAmB,EAAvB,EAA2BoJ,IAAI,qBAAQA,IAAR;MAAc1E,SAAS,EAAE9E,IAAI,CAAC,CAAD;MAAjC;IAE3B0G,QAAE,CAAE,6BAA4B1G,IAAI,CAAC,CAAD,CAAI,EAAtC,EAAyC,YAAY;YAC/CsN,YAAY,GAAGC,UAAA,CAAuBF,SAAvB,EAAkCnC,OAAlC,CAArB;MACArE,WAAM,CAACC,SAAP,CAAiBwG,YAAjB,EAA+B9D,IAA/B;KAFA,CAAF;IAKA9C,QAAE,CAAE,2BAA0B1G,IAAI,CAAC,CAAD,CAAI,EAApC,EAAuC,YAAY;UAC/C,CAACwJ,IAAI,CAAC1E,SAAV,EAAqB0E,IAAI,qBAAQA,IAAR;QAAc1E,SAAS,EAAG,KAAI9E,IAAI,CAAC,CAAD,CAAI;QAA1C;YACfwN,iBAAiB,GAAGD,QAAA,CAAqB/D,IAArB,EAA2B0B,OAA3B,CAA1B;MACArE,WAAM,CAAC4G,KAAP,CAAaD,iBAAb,EAAgCH,SAAhC;KAHA,CAAF;GAlBF;CADM,CAAR;;ACCO,MAAMZ,UAAQ,GAAG,OACtBtG,IADsB,EAEtB+E,OAFsB,KAGC;QACjBwB,aAAa,GAAG,MAAMa,QAAA,CAAqBpH,IAArB,EAA2B+E,OAA3B,CAA5B;2BAEKwB,aADL;IAEEzH,QAAQ,EAAE,KAFZ;IAGEyI,IAAI,EAAE,CAAC,GAAD,CAHR;IAIEC,QAAQ,EAAE;;CATP;AAaP,AAAO,MAAMC,eAAe,GAAG,CAC7BrI,OAD6B,EAE7BsI,MAF6B,KAGf;QACR5I,QAAQ,GAAGM,OAAO,CAACF,UAAR,IAAsBf,QAAvC;QACM;IAAEoJ,IAAI,EAAEI,UAAU,GAAG;MAAOD,MAAM,IAAI,EAA5C;MACIE,QAAQ,GAAG,GAAf;QAEML,IAAI,GAAG,CAAC,GAAGI,UAAJ,CAAb;;MACIvI,OAAO,CAACqH,KAAZ,EAAmB;UACX5H,KAAK,GAAGO,OAAO,CAACF,UAAtB;UACM2I,QAAQ,GAAG/I,QAAQ,GAAGD,KAAK,GAAGV,QAAX,GAAsBU,KAA/C;IACA+I,QAAQ,GAAI,GAAEC,QAAS,GAAE/I,QAAQ,GAAG,GAAH,GAAS,EAAG,EAA7C;;;MAGEyI,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqBA,IAAI,CAACO,OAAL,CAAa,GAAb;;MACjBP,IAAI,CAACtN,MAAL,KAAgBmF,OAAO,CAACqH,KAA5B,EAAmC;IACjCc,IAAI,CAACQ,IAAL,CAAUH,QAAV;;;MAEEL,IAAI,CAACtN,MAAL,KAAgBmF,OAAO,CAACqH,KAAR,GAAgB,CAApC,EAAuC;UAC/B,IAAIzM,KAAJ,CAAU,0BAAV,CAAN;;;MAEEuN,IAAI,CAACA,IAAI,CAACtN,MAAL,GAAc,CAAf,CAAJ,KAA0B2N,QAA9B,EAAwC;UAChC,IAAI5N,KAAJ,CAAU,qBAAV,CAAN;;;QAGIuL,KAAgB,qBAAQnG,OAAR;IAAiBmI,IAAjB;IAAuBzI,QAAvB;IAAiC0I,QAAQ,EAAE;IAAjE;;QACM;IAAEQ,UAAF;IAAcC;MAAUP,MAAM,IAAI,EAAxC;MACIM,UAAJ,EAAgBzC,KAAK,CAACyC,UAAN,GAAmBA,UAAnB;MACZC,KAAJ,EAAW1C,KAAK,CAAC0C,KAAN,GAAcA,KAAd;SAEJ1C,KAAP;CA/BK;AAkCP,AAAO,MAAMmB,WAAS,GAAG,OACvBwB,SADuB,EAEvBrJ,KAFuB,EAGvBkG,OAHuB,KAIA;;QAEjBzF,QAAQ,GAAG,MAAM8H,SAAA,CAAsBc,SAAtB,EAAiCrJ,KAAjC,EAAwCkG,OAAxC,CAAvB;;QACMoD,WAAW,qBACZD,SADY;IAEfX,IAAI,EAAE,CAAC,GAAGW,SAAS,CAACX,IAAd,EAAoB1I,KAApB,CAFS;;IAAjB;;SAKO4I,eAAe,CAACnI,QAAD,EAAW6I,WAAX,CAAtB;CAZK;AAeP,AAAO,MAAMC,QAAQ,GAAG,OACtBxI,UADsB,EAEtB8H,MAFsB,EAGtB3C,OAHsB,KAIC;;QAEjBsD,MAAM,GAAGC,YAAY,CAAC1I,UAAD,EAAa8H,MAAM,CAACH,IAApB,CAA3B,CAFuB;;MAInBgB,UAAU,GAAGF,MAAM,CAAC7M,GAAxB;;SAEO6M,MAAM,CAACd,IAAP,CAAYtN,MAAnB,EAA2B;;UAEnB4E,KAAK,GAAGwJ,MAAM,CAACd,IAAP,CAAYiB,KAAZ,EAAd;UACMlJ,QAAQ,GAAG,MAAMoH,WAAS,CAAC6B,UAAD,EAAa1J,KAAb,EAAoBkG,OAApB,CAAhC,CAHyB;;IAMzBwD,UAAU,CAACf,QAAX,CAAoB3I,KAApB,IAA6BS,QAA7B;IACAiJ,UAAU,GAAGjJ,QAAb;GAbqB;;;EAiBvBiJ,UAAU,CAACP,UAAX,GAAwBN,MAAM,CAACM,UAAP,IAAqB,OAA7C;EACAO,UAAU,CAACN,KAAX,GAAmBP,MAAM,CAACO,KAAP,IAAgB,UAAnC;SAEOrI,UAAP;CAxBK;AA2BP,AAAO,MAAM6I,SAAS,GAAG,OACvBP,SADuB,EAEvBQ,OAFuB,EAGvB3D,OAHuB,KAIA;;MAEnB,OAAOmD,SAAP,KAAqB,QAAzB,EAAmC;IACjCA,SAAS,GAAG,MAAM5B,UAAQ,CAAC4B,SAAD,EAAYnD,OAAZ,CAA1B;GAHqB;;;OAOlB,MAAM2C,MAAX,IAAqBgB,OAArB,EAA8B;IAC5BR,SAAS,GAAG,MAAME,QAAQ,CAACF,SAAD,EAAYR,MAAZ,CAA1B;;;SAGKQ,SAAP;CAfK;AAkBP,AAAO,MAAMrB,YAAU,GAAG,CACxBG,WADwB,EAExBU,MAFwB,EAGxB3C,OAHwB,KAIV;QACR3F,OAAwB,GAAGgI,UAAA,CAAuBJ,WAAvB,EAAoCjC,OAApC,CAAjC;SACO0C,eAAe,CAACrI,OAAD,EAAUsI,MAAV,CAAtB;CANK;AASP,AAAO,MAAMY,YAAY,GAAG,CAC1BJ,SAD0B,EAE1BX,IAF0B,KAGS;QAC7BoB,QAAQ,GAAG,CAAC,GAAGpB,IAAJ,CAAjB;EACAoB,QAAQ,CAACH,KAAT;;SACON,SAAS,CAACV,QAAV,CAAmBmB,QAAQ,CAAC,CAAD,CAA3B,KAAmCA,QAAQ,CAAC1O,MAAnD,EAA2D;IACzDiO,SAAS,GAAGA,SAAS,CAACV,QAAV,CAAmBmB,QAAQ,CAACH,KAAT,EAAnB,CAAZ;;;SAEK;IAAEhN,GAAG,EAAE0M,SAAP;IAAkBX,IAAI,EAAEoB;GAA/B;CATK;AAYP,AAAO,MAAMC,MAAM,GAAG,CAACV,SAAD,EAAuBX,IAAvB,KAAwD;QACtEoB,QAAQ,GAAG,CAAC,GAAGpB,IAAJ,CAAjB;EACAoB,QAAQ,CAACH,KAAT;;SACON,SAAS,IAAIS,QAAQ,CAAC1O,MAA7B,EAAqC;IACnCiO,SAAS,GAAGA,SAAS,CAACV,QAAV,CAAmBmB,QAAQ,CAACH,KAAT,EAAnB,CAAZ;;;SAEKN,SAAP;CANK;AASP,AAAO,MAAMW,UAAU,GAAG,CACxBC,OAAe,GAAG,CADM,EAExBT,MAAc,GAAG;EAAEd,IAAI,EAAE,CAAC,GAAD;CAFD,EAGxBzI,QAHwB,KAIb;QACL;IAAEmJ,KAAK,GAAG,UAAV;IAAsBD,UAAU,GAAG;MAAYK,MAArD;QAEMU,UAAU,GAAI,GAAED,OAAQ,GAAEhK,QAAQ,GAAG,GAAH,GAAS,EAAG,EAApD;QACMD,KAAK,GAAGoJ,KAAK,KAAK,UAAV,GAAuB,GAAvB,GAA6B,GAA3C;QACMV,IAAI,GAAG,CAAC,GAAGc,MAAM,CAACd,IAAX,EAAiBwB,UAAjB,EAA6BlK,KAA7B,CAAb;SAEO;IAAE0I,IAAF;IAAQU,KAAR;IAAeD;GAAtB;CAXK;AAcP,AAAO,MAAMrN,UAAQ,GAAGyM,QAAjB;;AC3JP,MAAM4B,aAAa,GAAG9I,QAAQ,CAACqF,KAA/B;AACA,MAAMR,SAAO,GAAG,MAAhB;AAEA3E,cAAQ,CAAC,gBAAD,EAAmB,YAAY;EACrC4I,aAAa,CAAC1C,QAAd,CAAuBhG,OAAvB,CAA+BzG,IAAI,IAAI;IACrC0G,QAAE,CAAE,+BAA8B1G,IAAI,CAAC,CAAD,CAAI,EAAxC,EAA2C,kBAAkB;YACvDyF,QAAQ,GAAG,MAAM2J,UAAA,CAAepP,IAAI,CAAC,CAAD,CAAnB,CAAvB;YACMwJ,IAAI,GAAG4F,UAAA,CAAe3J,QAAf,CAAb;MACAoB,WAAM,CAACC,SAAP,CAAiB0C,IAAjB,EAAuBxJ,IAAI,CAAC,CAAD,CAA3B;KAHA,CAAF;GADF;EAOAmP,aAAa,CAACnC,UAAd,CAAyBvG,OAAzB,CAAiCzG,IAAI,IAAI;IACvC0G,QAAE,CAAE,6BAA4B1G,IAAI,CAAC,CAAD,CAAI,cAAaA,IAAI,CAAC,CAAD,CAAI,EAA3D,EAA8D,YAAY;YACpEsC,IAAI,GAAG,EAAb;UACItC,IAAI,CAAC,CAAD,CAAR,EAAasC,IAAI,CAACoL,IAAL,GAAY1N,IAAI,CAAC,CAAD,CAAJ,CAAQqP,KAAR,CAAc,GAAd,CAAZ;YACP3D,QAAK,GAAG0D,YAAA,CAAiBpP,IAAI,CAAC,CAAD,CAArB,EAA0BsC,IAA1B,CAAd;MACAuE,WAAM,CAAC4G,KAAP,CAAa/B,QAAK,CAACzG,QAAnB,EAA6BjF,IAAI,CAAC,CAAD,CAAjC;MACA6G,WAAM,CAAC4G,KAAP,CAAa/B,QAAK,CAACgC,IAAN,CAAW4B,IAAX,CAAgB,GAAhB,CAAb,EAAmCtP,IAAI,CAAC,CAAD,CAAvC;KALA,CAAF;GADF;EASAmP,aAAa,CAACI,gBAAd,CAA+B9I,OAA/B,CAAuCzG,IAAI,IAAI;IAC7C0G,QAAE,CAAE,4CAA2C1G,IAAI,CAAC,CAAD,CAAI,EAArD,EAAwD,YAAY;UAChE;QACFoP,YAAA,CAAiBpP,IAAI,CAAC,CAAD,CAArB,EAA0B;UAAE0N,IAAI,EAAE1N,IAAI,CAAC,CAAD,CAAJ,CAAQqP,KAAR,CAAc,GAAd;SAAlC;OADF,CAEE,OAAO3J,CAAP,EAAU;QACVmB,WAAM,CAAC4G,KAAP,CAAa/H,CAAC,CAACC,OAAf,EAAwB3F,IAAI,CAAC,CAAD,CAA5B;;KAJF,CAAF;GADF;EASAmP,aAAa,CAACZ,QAAd,CAAuB9H,OAAvB,CAA+BzG,IAAI,IAAI;IACrC0G,QAAE,CAAE,6BAA4B1G,IAAI,CAAC,CAAD,CAAI,cACtCA,IAAI,CAAC,CAAD,CACL,EAFC,EAEE,kBAAkB;YACd0N,IAAI,GAAG1N,IAAI,CAAC,CAAD,CAAJ,CAAQqP,KAAR,CAAc,GAAd,CAAb;YACMhB,SAAS,GAAGe,YAAA,CAAiBpP,IAAI,CAAC,CAAD,CAArB,CAAlB;UACI0L,QAAK,GAAG,MAAM0D,QAAA,CAAef,SAAf,EAA0B;QAAEX;OAA5B,CAAlB;MACAA,IAAI,CAACiB,KAAL;UACIa,SAAS,GAAG,CAAhB;;aACO9B,IAAI,CAACtN,MAAZ,EAAoB;cACZ4E,KAAK,GAAG0I,IAAI,CAACiB,KAAL,EAAd;QACAjD,QAAK,GAAGA,QAAK,CAACiC,QAAN,CAAe3I,KAAf,CAAR;cACM2D,QAAQ,GAAGyG,UAAA,CAAe1D,QAAf,CAAjB;cACMhD,OAAO,GAAG0G,UAAA,CAAe1D,QAAf,EAAsBR,SAAtB,EAA+B,IAA/B,CAAhB;QACArE,WAAM,CAAC4G,KAAP,CAAa9E,QAAb,EAAuB3I,IAAI,CAACwP,SAAD,CAAJ,CAAgB,CAAhB,CAAvB,EAA2C,OAA3C;QACA3I,WAAM,CAAC4G,KAAP,CAAa/E,OAAb,EAAsB1I,IAAI,CAACwP,SAAD,CAAJ,CAAgB,CAAhB,CAAtB,EAA0C,MAA1C;QACAA,SAAS;;KAfX,CAAF;GADF;CA1BM,CAAR;;ACLO,MAAMC,WAAW,GAAG,CACzBC,OADyB,EAEzB5G,QAAgB,GAAG,CAFM,EAGzBmG,OAAe,GAAG,CAHO,EAIzB/D,OAAe,GAAG,MAJO,KAKP;MACd,CAACwE,OAAL,EAAcA,OAAO,GAAGzE,QAAQ,CAACC,OAAD,CAAR,CAAkB5C,IAA5B;;MAEVkC,KAAK,CAACC,OAAN,CAAciF,OAAd,CAAJ,EAA4B;UACpBC,KAAK,GAAG,EAAd;;SACK,MAAMzM,CAAX,IAAgBwM,OAAhB,EAAyB;MACvBC,KAAK,CAACzB,IAAN,CAAW,GAAGuB,WAAW,CAACvM,CAAD,EAAI4F,QAAJ,EAAcmG,OAAd,CAAzB;;;WAEKU,KAAP;;;MAGED,OAAO,KAAK,EAAhB,EAAoB,OAAO,CAACV,UAAU,CAACC,OAAD,CAAX,CAAP;QAEdd,UAAU,GAAGyB,WAAW,CAAE,GAAEF,OAAQ,EAAZ,CAA9B;MACI,CAACvB,UAAL,EAAiB,MAAM,IAAIhO,KAAJ,CAAW,8BAA6BuP,OAAQ,EAAhD,CAAN;QAEXhC,IAAI,GAAG,CAAC,GAAD,EAAO,GAAEgC,OAAQ,GAAjB,EAAsB,GAAE5G,QAAQ,IAAI,CAAE,GAAtC,CAAb;QACM+E,MAAM,GAAG;IAAEH,IAAF;IAAQS;GAAvB;;QACM0B,SAAS,qBAAQhC,MAAR;IAAgBO,KAAK,EAAE;IAAtC;;SAEO,CACLY,UAAU,CAACC,OAAD,EAAUpB,MAAV,EAAkB,IAAlB,CADL,EAELmB,UAAU,CAACC,OAAD,EAAUY,SAAV,EAAqB,IAArB,CAFL,CAAP;CAzBK;AA+BP,AAAO,MAAMD,WAA8C,GAAG;QACtD,OADsD;QAEtD,aAFsD;QAGtD;CAHD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BP,MAAM1E,SAAO,GAAG,MAAhB;AAEA3E,cAAQ,CAAC,sCAAD,EAAyC,YAAY;EAC3DF,UAAQ,CAACoJ,WAAT,CAAqBhJ,OAArB,CAA6BzG,IAAI,IAAI;IACnC0G,QAAE,CAAE,mBAAkB1G,IAAI,CAAC,CAAD,CAAI,qBAC5BA,IAAI,CAAC,CAAD,CACL,EAFC,EAEE,kBAAkB;YACdqO,SAAS,GAAGe,YAAA,CAAiBpP,IAAI,CAAC,CAAD,CAArB,CAAlB;UAEIiP,OAAO,GAAG,CAAd;UACInG,QAAQ,GAAG,CAAf;;UACI9I,IAAI,CAAC,CAAD,CAAR,EAAa;QACXiP,OAAO,GAAGjP,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAV;QACA8I,QAAQ,GAAG9I,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAX;;;YAGI6O,OAAO,GAAGY,WAAW,CAACzP,IAAI,CAAC,CAAD,CAAL,EAAU8I,QAAV,EAAoBmG,OAApB,EAA6B,SAA7B,CAA3B;YACMvD,KAAK,GAAG,MAAM0D,SAAA,CAAgBf,SAAhB,EAA2BQ,OAA3B,EAAoC3D,SAApC,CAApB;UACIsE,SAAS,GAAG,CAAhB;;WACK,MAAM3B,MAAX,IAAqBgB,OAArB,EAA8B;cACtBlN,GAAG,GAAGyN,MAAA,CAAa1D,KAAb,EAAoBmC,MAAM,CAACH,IAA3B,CAAZ;YACI,CAAC/L,GAAL,EAAU,MAAM,IAAIxB,KAAJ,CAAU,QAAV,CAAN;cACJwI,QAAQ,GAAGyG,UAAA,CAAezN,GAAf,CAAjB;cACM+G,OAAO,GAAG0G,UAAA,CAAezN,GAAf,EAAoBuJ,SAApB,EAA6B,IAA7B,CAAhB;QACArE,WAAM,CAAC4G,KAAP,CAAa9E,QAAb,EAAuB3I,IAAI,CAACwP,SAAS,EAAV,CAA3B,EAA0C,OAA1C;QACA3I,WAAM,CAAC4G,KAAP,CAAa/E,OAAb,EAAsB1I,IAAI,CAACwP,SAAS,EAAV,CAA1B,EAAyC,MAAzC;;KArBF,CAAF;GADF;CADM,CAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA,MAAMM,eAAe,GAAGzJ,UAAQ,CAACd,OAAjC;AACA,MAAM2F,SAAO,GAAG,MAAhB;AAEA3E,cAAQ,CAAC,gBAAD,EAAmB,YAAY;EACrCuJ,eAAe,CAACxD,OAAhB,CAAwB7F,OAAxB,CAAgCzG,IAAI,IAAI;IACtC0G,QAAE,CAAE,8BAA6B1G,IAAI,CAAC,CAAD,CAAI,EAAvC,EAA0C,kBAAkB;YACtDuF,UAAO,GAAG,MAAM+G,OAAO,CAACtM,IAAI,CAAC,CAAD,CAAL,EAAUkL,SAAV,CAA7B;MACArE,WAAM,CAAC4G,KAAP,CAAalI,UAAO,CAACT,SAArB,EAAgC9E,IAAI,CAAC,CAAD,CAApC;KAFA,CAAF;GADF;CADM,CAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA,aAAe;EACb2C,KAAK,EAAE,YADM;EAEboN,QAAQ,EAAE,CACR,GAAGpQ,MAAM,CAACqQ,IAAP,CAAYC,WAAW,CAACC,YAAxB,CADK,EAER,GAAGvQ,MAAM,CAACqQ,IAAP,CAAYC,WAAW,CAACE,eAAxB,CAFK,EAGR,UAHQ,EAIR,UAJQ,CAFG;EAQbvN,MAAM,EAAE,CACN;IAAEwN,IAAI,EAAEH,WAAW,CAAC7H,IAApB;IAA0BiI,MAAM,EAAE,KAAlC;IAAyCC,SAAS,EAAE;GAD9C,EAEN;IAAEF,IAAI,EAAEH,WAAW,CAACM,MAApB;IAA4BF,MAAM,EAAE,IAApC;IAA0CC,SAAS,EAAE;GAF/C,CARK;EAYbE,OAAO,EAAE,CACPC,IAAI,EADG,EAEPC,KAAK,CAAC;IACJC,OAAO,EAAE,KADL;IAEJC,OAAO,EAAE,CAAC,oBAAD,CAFL;IAGJJ,OAAO,EAAE,CAAC,2CAAD;GAHN,CAFE,EAOPK,SAAS,EAPF;CAZX;;ACFA,MAAMC,YAAY,GAAG;EACnBH,OAAO,EAAE,KADU;EAEnBC,OAAO,EAAE,CAAC,oBAAD,CAFU;EAGnBJ,OAAO,EAAE,CAAC,2CAAD;CAHX;AAMA,CAAe;EACbT,QAAQ,EAAEgB,MAAM,CAAChB,QADJ;EAEbpN,KAAK,EAAE,gBAFM;EAGbC,MAAM,EAAE,CACN;IAAEwN,IAAI,EAAE,oBAAR;IAA8BC,MAAM,EAAE,KAAtC;IAA6CC,SAAS,EAAE;GADlD,EAEN;IAAEF,IAAI,EAAE,gBAAR;IAA0BC,MAAM,EAAE,IAAlC;IAAwCC,SAAS,EAAE;GAF7C,CAHK;EAObE,OAAO,EAAE,CAACQ,UAAU,EAAX,EAAeP,IAAI,EAAnB,EAAuBC,KAAK,CAACI,YAAD,CAA5B;EAPX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA,MAAMnP,GAAG,GACP,4EADF;AAEA,MAAMP,IAAI,GAAG,kEAAb;AACA,MAAMiC,GAAG,GACP,kIADF;AAGA,MAAM4N,YAAY,GAAG5K,UAAQ,CAACc,IAA9B;AAEA,MAAMhG,IAAI,GAAGa,UAAU,CAACL,GAAD,EAAMP,IAAN,CAAvB;AACAyF,WAAM,CAAC4G,KAAP,CAAatM,IAAb,EAAmBkC,GAAnB;;AAEA,KAAK,MAAM6N,OAAX,IAAsBD,YAAtB,EAAoC;EAClC1K,cAAQ,CAAE,gBAAe2K,OAAQ,EAAzB,EAA4B,YAAY;UACxCC,WAAW,GAAGhK,IAAI,CAAC+J,OAAD,CAAJ,CAAcnJ,KAAlC;IAEAkJ,YAAY,CAACC,OAAD,CAAZ,CAAsBE,KAAtB,CAA4B3K,OAA5B,CAAoC,CAAC;MAAE2G,MAAF;MAAU1F;KAAX,KAAyB;MAC3DhB,QAAE,CAAE,wBAAuB0G,MAAO,EAAhC,EAAmC,kBAAkB;cAC/CiE,cAAc,GAAGF,WAAW,CAAC3J,MAAZ,CAAmB4F,MAAnB,CAAvB;QACAvG,WAAM,CAAC4G,KAAP,CAAa4D,cAAb,EAA6B3J,OAA7B;OAFA,CAAF;MAIAhB,QAAE,CAAE,yBAAwBgB,OAAQ,EAAlC,EAAqC,kBAAkB;cACjD4J,cAAc,GAAGH,WAAW,CAACtO,MAAZ,CAAmB6E,OAAnB,CAAvB;QACAb,WAAM,CAAC4G,KAAP,CAAa6D,cAAb,EAA6BlE,MAA7B;OAFA,CAAF;KALF;IAWA6D,YAAY,CAACC,OAAD,CAAZ,CAAsBK,OAAtB,CAA8B9K,OAA9B,CAAsC,CAAC;MAAE2G,MAAF;MAAUoE;KAAX,KAA2B;MAC/D9K,QAAE,CAAE,wBAAuB0G,MAAO,EAAhC,EAAmC,kBAAkB;YACjD;UACF+D,WAAW,CAAC3J,MAAZ,CAAmB4F,MAAnB;SADF,CAEE,OAAO1H,CAAP,EAAU;UACVmB,WAAM,CAAC4G,KAAP,CAAa/H,CAAC,CAACC,OAAf,EAAwB6L,SAAxB;;OAJF,CAAF;KADF;GAdM,CAAR;;;ACbK,MAAMC,OAAO,GAAG,CACrBC,IADqB,EAErBC,IAFqB,EAGrBC,KAAa,GAAG,GAHK,EAIrBC,KAAa,GAAG,EAJK,EAKrBzQ,IAAY,GAAGyQ,KALM,EAMrBC,MAAqB,GAAG,EANH,KAOlB;SACI,IAAI3S,KAAJ,CAAWQ,MAAM,CAACC,MAAP,CAAc,MAAM8R,IAAI,CAACG,KAAD,CAAxB,EAAiCzQ,IAAjC,CAAX,EAAyD;IAC9D2Q,KAAK,EAAE,OAAOjT,MAAP,EAAekT,QAAf,EAAyB5S,IAAzB,KAAkC;YACjC6S,WAAW,GAAGC,QAAQ,IAAI;QAC9BL,KAAK,GAAGK,QAAR;QACA9Q,IAAI,GAAG8Q,QAAP;;aACK,MAAMvQ,GAAX,IAAkB7C,MAAlB,EAA0B;cACpBsC,IAAI,CAACO,GAAD,CAAJ,KAAcwQ,SAAlB,EAA6B;mBACpBrT,MAAM,CAAC6C,GAAD,CAAb;;;;QAGJhC,MAAM,CAACC,MAAP,CAAcd,MAAd,EAAsBoT,QAAtB;OARF,CADuC;;;UAanC,CAACJ,MAAM,CAACM,MAAZ,EAAoB;cACZC,OAAO,GAAG,OAAOV,IAAP,KAAgB,UAAhB,GAA6B,MAAMA,IAAI,EAAvC,GAA4CA,IAA5D;QACAM,WAAW,mBAAMI,OAAN,EAAkBR,KAAlB,EAAX;QACAC,MAAM,CAACM,MAAP,GAAgB,IAAhB;OAhBqC;;;UAoBnChT,IAAI,IAAIA,IAAI,CAACgB,MAAjB,EAAyB;YACnB,OAAOhB,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC6S,WAAW,mBAAM7S,IAAI,CAAC,CAAD,CAAV,EAAX,CAAjC,KACK,IAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,MAAhB,EAAwB;cACvB0S,MAAM,CAACQ,MAAX,EAAmB;YACjBC,YAAY,CAACT,MAAM,CAACQ,MAAR,CAAZ;YACAR,MAAM,CAACQ,MAAP,GAAgB,IAAhB;;;UAEFR,MAAM,CAACU,OAAP,GAAiB,KAAjB;gBACMC,OAAO,CAACV,KAAR,CAAcjT,MAAd,EAAsBA,MAAtB,EAA8B,EAA9B,CAAN;;;OA5BmC;;;UAkCnC,CAACgT,MAAM,CAACU,OAAR,IAAmBV,MAAM,CAACQ,MAA9B,EAAsC,OAlCC;;MAqCvCR,MAAM,CAACU,OAAP,GAAiB,KAAjB,CArCuC;;MAwCvCV,MAAM,CAACQ,MAAP,GAAgBI,UAAU,CAAC,MAAM;YAC3BZ,MAAM,CAACQ,MAAX,EAAmB;UACjBC,YAAY,CAACT,MAAM,CAACQ,MAAR,CAAZ;UACAR,MAAM,CAACQ,MAAP,GAAgB,IAAhB;;;QAEFG,OAAO,CAACV,KAAR,CAAcC,QAAd,EAAwBA,QAAxB,EAAkC,EAAlC;OALwB,EAMvBJ,KANuB,CAA1B;YAQMa,OAAO,CAACV,KAAR,CAAcjT,MAAd,EAAsBA,MAAtB,EAA8B,EAA9B,CAAN;KAjD4D;IAmD9DuL,GAAG,EAAE,CAACvL,MAAD,EAAcC,IAAd,EAA4B4T,KAA5B,EAAwC3T,QAAxC,KAA0D;;UAEzDoC,IAAI,CAACrC,IAAD,CAAJ,KAAe4T,KAAnB,EAA0B;QACxBF,OAAO,CAACpI,GAAR,CAAYjJ,IAAZ,EAAkBrC,IAAlB,EAAwB4T,KAAxB;QACAF,OAAO,CAACpI,GAAR,CAAYvL,MAAZ,EAAoBC,IAApB,EAA0B4T,KAA1B;QACAb,MAAM,CAACU,OAAP,GAAiB,IAAjB;YACI,CAACV,MAAM,CAACQ,MAAZ,EAAoBG,OAAO,CAACV,KAAR,CAAc/S,QAAd,EAAwBA,QAAxB,EAAkC,EAAlC;;;aAEf,IAAP;KA3D4D;IA6D9DH,GAAG,EAAE,CAACC,MAAD,EAAcC,IAAd,KAA+B;UAC9BA,IAAI,KAAK,QAAb,EAAuB,OAAO+S,MAAP,CADW;;YAG5Ba,KAAK,GAAGF,OAAO,CAAC5T,GAAR,CAAYuC,IAAZ,EAAkBrC,IAAlB,CAAd,CAHkC;;UAK9B,OAAO4T,KAAP,KAAiB,QAArB,EAA+B,OAAOA,KAAP,CALG;;aAO3BlB,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,KAApB,EAA2Bc,KAA3B,EAAkCb,MAAlC,CAAd;;GApEG,CAAP;CARK;;ACAP,MAAMc,UAAU,GAAG,CAACC,QAAD,EAAgBjB,KAAhB,EAA+BkB,GAA/B,KAA4C;MACzDC,YAAY,GAAG,CAAC,CAApB;MACIC,aAAa,GAAG,CAApB;SAEO,MAAMC,SAAN,IAAmB;QACpBH,GAAG,CAACI,IAAR,EAAc;IACdJ,GAAG,CAACpN,CAAJ,GAAQ,IAAIvF,KAAJ,EAAR;IAEA0G,WAAM,CAACsM,QAAP,CAAgBF,SAAhB,EAA2BJ,QAA3B;IACAhM,WAAM,CAACC,SAAP,CAAiBmM,SAAjB,EAA4BJ,QAA5B;IAEAE,YAAY;QACR,CAACC,aAAL,EAAoBA,aAAa,GAAGI,IAAI,CAACC,GAAL,EAAhB;UACdC,QAAQ,GAAGF,IAAI,CAACC,GAAL,KAAaL,aAA9B;;QAEIpB,KAAJ,EAAW;YACH2B,QAAQ,GAAG3B,KAAK,GAAGmB,YAAzB;MACAlM,WAAM,CAAC2M,SAAP,CAAiBF,QAAjB,EAA2BC,QAA3B;;;IAGFT,GAAG,CAACpN,CAAJ,GAAQ,IAAR,CAhBwB;GAA1B;CAJF;;AAyBA,MAAMoN,GAAG,GAAG,EAAZ;;AAEA,KAAK,MAAM9S,IAAX,IAAmBqG,UAAQ,CAACoN,SAA5B,EAAuC;QAC/BC,OAAO,GAAG1T,IAAI,CAAC2T,OAAL,CAAa,WAAb,EAA0B,EAA1B,CAAhB;QACM;IAAE9B,KAAF;IAASD,KAAT;IAAgBgC;MAASvN,UAAQ,CAACoN,SAAT,CAAmBzT,IAAnB,CAA/B;QACM6S,QAAQ,GAAGgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAelC,KAAK,IAAI,EAAxB,CAAX,CAAjB;QACMH,IAAI,GAAGkB,UAAU,CAACC,QAAD,EAAWjB,KAAX,EAAkBkB,GAAlB,CAAvB;QACMnB,IAAI,GAAG+B,OAAO,KAAK,GAAZ,GAAkB,MAAcb,QAAhC,GAA2ChB,KAAxD;QACMmC,cAAc,GAAGvC,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,CAA9B;EAEArL,cAAQ,CAAE,yBAAwBvG,IAAK,kBAAiB4R,KAAK,IAC3D,GAAI,IADE,EACG,YAAY;SAChBqC,OAAL,CAAa,CAAb;IACAC,YAAM,CAAC,gCAAD,EAAmC,kBAAkB;MACzDpB,GAAG,CAACI,IAAJ,GAAW,KAAX;YACMc,cAAc,CAAC,EAAD,CAApB;YACMA,cAAc,CAACnC,KAAD,CAApB;KAHI,CAAN;IAMA+B,IAAI,CAACrT,GAAL,CAAS,CAAC,CAAC+C,KAAD,EAAQqP,KAAR,EAAeW,QAAf,CAAD,EAA2BxQ,CAA3B,KAAiC;MACxC4D,QAAE,CAAE,QAAOpD,KAAM,QAAOqP,KAAM,WAAUW,QAAS,eAA/C,EAA+D,UAAUa,IAAV,EAAgB;YAC3EC,KAAK,GAAGJ,cAAZ;YACIK,aAAa,GAAGxB,QAApB;QAEAvP,KAAK,GAAGA,KAAK,CAAC+L,KAAN,CAAY,GAAZ,CAAR;;eACO/L,KAAK,CAAClD,MAAN,GAAe,CAAtB,EAAyB;gBACjBuB,GAAG,GAAG2B,KAAK,CAACqL,KAAN,EAAZ;UACAyF,KAAK,GAAGA,KAAK,CAACzS,GAAD,CAAb;UACA0S,aAAa,GAAGA,aAAa,CAAC1S,GAAD,CAA7B;;;cAGIA,GAAG,GAAG2B,KAAK,CAAC,CAAD,CAAjB;cACMgR,QAAQ,GAAG,CAACxR,CAAD,GAAKwQ,QAAL,GAAgBA,QAAQ,GAAGM,IAAI,CAAC9Q,CAAC,GAAG,CAAL,CAAJ,CAAY,CAAZ,CAA5C;QAEA4P,UAAU,CAAC,MAAM;UACf2B,aAAa,CAAC1S,GAAD,CAAb,GAAqBgR,KAArB;UACAyB,KAAK,CAACzS,GAAD,CAAL,GAAagR,KAAb;UACA9L,WAAM,CAAC4G,KAAP,CAAa4G,aAAa,CAAC1S,GAAD,CAA1B,EAAiCyS,KAAK,CAACzS,GAAD,CAAtC;UACAwS,IAAI,CAACrB,GAAG,CAACpN,CAAL,CAAJ;SAJQ,EAKP4O,QALO,CAAV;OAdA,CAAF;KADF;IAwBAC,WAAK,CAAC,0CAAD,EAA6C,kBAAkB;MAClEzB,GAAG,CAACI,IAAJ,GAAW,IAAX;YACMc,cAAc,CAAC,MAAD,CAApB;KAFG,CAAL;GAjCM,CAAR;"}