{"version":3,"file":"tests.cjs.js","sources":["../src/utils/uintArray.js","../src/utils/formatter.js","../src/utils/require.js","../src/utils/secp256k1.js","../src/utils/hash.js","../src/utils/base.js","../src/hd/paths.js","../src/networks/baseInfo.js","../src/networks/bitcoin.js","../src/core/networkInfo.js","../src/core/keyPair.js","../test/core/keyPair.js","../src/hd/derive.js","../test/hd/derive.js","../src/hd/extendedKey.js","../test/hd/extendedKey.js","../src/hd/hdKey.js","../test/hd/hdKey.js","../src/hd/path.js","../test/hd/path.js","../rollup.config.js","../test/rollup.config.js","../test/utils/base.js","../src/utils/persister.js","../test/utils/persister.js"],"sourcesContent":["// @flow\n\nexport const isHexString = (hex: string) =>\n  typeof hex === 'string' && /^[0-9a-f]*$/i.test(hex)\n\nexport const toUint8Array = (hexString: string): Uint8Array => {\n  if (!isHexString(hexString)) {\n    throw new Error(`${hexString} is Not a Hex string`)\n  }\n  if (hexString.length % 2 !== 0) hexString = `0${hexString}`\n  const hex = hexString.match(/.{1,2}/g) || []\n  const bytes = hex.map(byte => parseInt(byte, 16))\n  return new Uint8Array(bytes)\n}\n\nexport const fromUint8Array = (bytes: Uint8Array): string =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '')\n","// @flow\n\nimport { type FunctionFormatterOptions } from '../../types/utils.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const formatFunction = (\n  func: Function,\n  opts?: FunctionFormatterOptions = {}\n) => {\n  const { numParams = 1, encoder, results = [], sync } = opts\n  const { input = toUint8Array, output = fromUint8Array } = encoder || {}\n\n  const encode = (i: number, cps = a => a) => {\n    if (!i--) return cps\n    const newCps = (p: any) => {\n      p[i] = input(p[i])\n      return cps(p)\n    }\n    return encode(i, newCps)\n  }\n\n  const paramEncoder = encode(numParams)\n\n  let encodeResult = (res: any) => output(res)\n  if (!results) {\n    encodeResult = (res: any) => res\n  } else if (results.length) {\n    encodeResult = (res: any) => {\n      for (const param of results) {\n        res[param] = output(res[param])\n      }\n      return res\n    }\n  }\n\n  let waitResult = async (res: any) => {\n    res = await res\n    return encodeResult(res)\n  }\n  if (sync) waitResult = (res: any) => encodeResult(res)\n\n  return (...params: any): any => {\n    const result = func(...paramEncoder(params))\n    return waitResult(result)\n  }\n}\n\nexport const formatByteSize = (\n  originalByteSize: number,\n  newByteSize: number,\n  pad: boolean = originalByteSize > newByteSize\n) => (data: Array<number>) => {\n  let acc = 0\n  let bits = 0\n  const ret = []\n  const maxNum = (1 << newByteSize) - 1\n  for (let p = 0; p < data.length; ++p) {\n    const value = data[p]\n    if (value < 0 || value >> originalByteSize !== 0) {\n      throw new Error('Wrong bit value')\n    }\n    acc = (acc << originalByteSize) | value\n    bits += originalByteSize\n    while (bits >= newByteSize) {\n      bits -= newByteSize\n      ret.push((acc >> bits) & maxNum)\n    }\n  }\n  if (pad && bits > 0) {\n    ret.push((acc << (newByteSize - bits)) & maxNum)\n  } else if (\n    bits >= originalByteSize ||\n    (acc << (newByteSize - bits)) & maxNum\n  ) {\n    throw new Error('Wrong bit value')\n  }\n  return ret\n}\n","const lazyHandler = activeModule => ({\n  get: (target, prop, receiver) => {\n    // If already loaded return the loaded module\n    if (activeModule) return activeModule[prop]\n    // Try to inject the loaded module\n    if (prop === 'inject') {\n      return loadedModule => {\n        activeModule = loadedModule\n        for (const prop in target) {\n          target[prop].inject(activeModule[prop])\n        }\n      }\n    }\n    // Create a new child proxy if this prop not yet exists\n    if (!target[prop]) {\n      target[prop] = new Proxy(function (...args) {\n        if (!activeModule) target()\n        return activeModule[prop](...args)\n      }, lazyHandler())\n    }\n    return target[prop]\n  }\n})\n\nexport const lazify = unsafeModule => {\n  const parentModule = function (injectedModule = {}, loadUnsafe = true) {\n    const defaultModule = loadUnsafe ? unsafeModule() : {}\n    const loadedModule = Object.assign(defaultModule, injectedModule)\n    parentProxy.inject(loadedModule)\n  }\n  const parentProxy = new Proxy(parentModule, lazyHandler())\n  return parentProxy\n}\n","// @flow\n\nimport { type Secp256k1 } from '../../types/utils.js'\nimport { formatFunction } from './formatter.js'\nimport { lazify } from './require.js'\n\nexport const secp256k1: Secp256k1<Uint8Array> = (lazify(() =>\n  require('secp256k1')\n): any)\n\nconst encoder = {\n  input: a => Buffer.from(a, 'hex'),\n  output: a => a.toString('hex')\n}\n\nexport const publicKeyCreate = formatFunction(secp256k1.publicKeyCreate, {\n  encoder\n})\nexport const signatureNormalize = formatFunction(secp256k1.signatureNormalize, {\n  encoder\n})\nexport const signatureExport = formatFunction(secp256k1.signatureExport, {\n  encoder\n})\nexport const privateKeyTweakAdd = formatFunction(secp256k1.privateKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const publicKeyTweakAdd = formatFunction(secp256k1.publicKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const verify = formatFunction(secp256k1.verify, {\n  encoder,\n  numParams: 3,\n  results: null\n})\nexport const signature = formatFunction(secp256k1.sign, {\n  encoder,\n  numParams: 2,\n  results: ['signature']\n})\n\nexport const sign = (message: string, privateKey: string) =>\n  signature(message, privateKey)\n    .then(({ signature }) => signature)\n    .then(signatureNormalize)\n    .then(signatureExport)\n","// @flow\n\nimport { type Hashes } from '../../types/utils.js'\nimport { lazify } from './require.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const hashjs: Hashes<Uint8Array> = (lazify(() =>\n  require('hash.js')\n): any)\n\nexport const digest = (hash: Function) => (data: string) => {\n  const uintArray = toUint8Array(data)\n  const rawRes = hash()\n    .update(uintArray)\n    .digest()\n  const resArray = new Uint8Array(rawRes)\n  return fromUint8Array(resArray)\n}\n\nexport const digestHmac = (hmac: Function, hash: Function) => (\n  data: string,\n  key: string\n) => {\n  const uintKey = toUint8Array(key)\n  const hmacHash = () => hmac(hash, uintKey)\n  return digest(hmacHash)(data)\n}\n\nexport const sha256 = digest(hashjs.sha256)\nexport const sha512 = digest(hashjs.sha512)\nexport const ripemd160 = digest(hashjs.ripemd160)\nexport const sha512Hmac = digestHmac(hashjs.hmac, hashjs.sha512)\n\nexport const hash256 = (data: string) => sha256(sha256(data))\nexport const hash160 = (data: string) => ripemd160(sha256(data))\n","// @flow\n\nimport { Buffer } from 'buffer'\n\nimport basex from 'base-x'\n\nimport {\n  type Alphabet,\n  type BaseCheck,\n  type BaseDecoder,\n  type Bases,\n  type HashFunction\n} from '../../types/utils.js'\nimport { hash256 } from './hash.js'\n\n// The default ALPHABETS, the name of the base codec will be the alphabet's length\nexport const ALPHABETS: Array<Alphabet> = [\n  '01',\n  '01234567',\n  '0123456789a',\n  '0123456789abcdef',\n  '0123456789ABCDEFGHJKMNPQRSTVWXYZ',\n  '0123456789abcdefghijklmnopqrstuvwxyz',\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n]\n\nexport const createCheckSumBase = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseDecoder => ({\n  encode: (hexStr: string): string => {\n    const checksum = (hashFunc || hash256)(hexStr)\n    const checkHex = `${hexStr}${checksum.slice(0, 8)}`\n    return base.encode(checkHex)\n  },\n  decode: (baseString: string): string => {\n    const hexStr = base.decode(baseString)\n    const payload = hexStr.slice(0, -8)\n    const newChecksum = (hashFunc || hash256)(payload)\n    const checksum = hexStr.slice(-8)\n    if (newChecksum.startsWith(checksum)) return payload\n    throw new Error('Invalid checksum')\n  }\n})\n\nexport const createHexEncoder = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseCheck => {\n  const newBase = { ...base }\n  const encode: (buf: Buffer) => string = newBase.encode\n  const decode: (str: string) => Buffer = newBase.decode\n  newBase.encode = a => encode(Buffer.from(a, 'hex'))\n  newBase.decode = a => decode(a).toString('hex')\n  return { ...newBase, check: createCheckSumBase(newBase, hashFunc) }\n}\n\nexport const base: Bases = ALPHABETS.reduce((decoders, alphabet) => {\n  const baseDecoder = createHexEncoder(basex(alphabet))\n  return { ...decoders, [alphabet.length]: baseDecoder }\n}, {})\n","import { base } from '../utils/base.js'\nconst bech32 = base['58'].check\n\nexport const bip32 = {\n  purpose: 32,\n  scriptType: 'P2PKH',\n  xpriv: {\n    stringPrefix: 'xprv',\n    prefix: 0x0488ade4,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'xpub',\n    prefix: 0x0488b21e,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 0x80,\n    decoder: base['58'].check\n  }\n}\n\nexport const bip44 = {\n  purpose: 44,\n  scriptType: 'P2PKH',\n  xpriv: {\n    stringPrefix: 'xprv',\n    prefix: 0x0488ade4,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'xpub',\n    prefix: 0x0488b21e,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 0x80,\n    decoder: base['58'].check\n  }\n}\n\nexport const bip49 = {\n  purpose: 49,\n  scriptType: 'P2WPKH-P2SH',\n  xpriv: {\n    stringPrefix: 'yprv',\n    prefix: 0x049d7878,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'ypub',\n    prefix: 0x049d7cb2,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 0x05,\n    decoder: base['58'].check\n  }\n}\n\nexport const bip84 = {\n  purpose: 84,\n  scriptType: 'P2WPKH',\n  xpriv: {\n    stringPrefix: 'zprv',\n    prefix: 0x04b2430c,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'zpub',\n    prefix: 0x04b24746,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 'bc',\n    decoder: bech32\n  }\n}\n","// @flow\n\nimport { type NetworkInfo } from '../../types/core.js'\nimport { bip32, bip44 } from '../hd/paths.js'\nimport { base } from '../utils/base.js'\nimport { hash256 } from '../utils/hash.js'\n\nexport const main: NetworkInfo = {\n  coinType: 0,\n  wif: {\n    prefix: 0x80,\n    stringPrefix: '1',\n    decoder: base['58'].check\n  },\n  HDPaths: [bip44, bip32],\n  txHash: hash256,\n  sigHash: (str: Buffer) => Buffer.from(hash256(str.toString('hex')), 'hex'),\n  forks: [],\n  replayProtection: {\n    forkSighash: 0x00,\n    forcedMinVersion: 0,\n    forkId: 0\n  }\n}\n","// @flow\nimport { bip49, bip84 } from '../hd/paths.js'\n\nconst forks = ['bitcoincash', 'bitcoingold', 'bitcoindiamond']\n\nexport const main = { HDPaths: [bip84, bip49], forks }\n\nexport const testnet = {\n  coinType: 1,\n  wif: 0xef,\n  HDPaths: [\n    {\n      purpose: 32,\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0x6f\n    },\n    {\n      purpose: 44,\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0x6f\n    },\n    {\n      purpose: 49,\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0xc4\n    },\n    {\n      purpose: 84,\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 'tb'\n    }\n  ]\n}\n","// @flow\n\nimport {\n  type HDPathSetting,\n  type NetworkInfo,\n  type NetworkInfos,\n  type NewNetworks\n} from '../../types/core.js'\nimport { main } from '../networks/baseInfo.js'\nimport * as Networks from '../networks/networks.js'\n\nexport const getHDSetting = (network: string, value: any): HDPathSetting => {\n  const { HDPaths } = networks[network]\n  for (const hdSetting of HDPaths) {\n    for (const key in hdSetting) {\n      const setting = hdSetting[key]\n      // checking if address that has legacy\n      if (Array.isArray(setting)) {\n        return setting.find(\n          ({ prefix, stringPrefix }) =>\n            prefix === value || stringPrefix === value\n        )\n      }\n\n      // checking if xpub, xpriv, or address\n      if (\n        typeof setting === 'object' &&\n        (setting.prefix === value || setting.stringPrefix === value)\n      ) {\n        return hdSetting\n      }\n\n      // if scriptType or purpose\n      if (setting === value) return hdSetting\n    }\n  }\n  throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n\nexport const getDecoder = (network: string, value: any) => {\n  const { HDPaths } = networks[network]\n  for (const hdSetting of HDPaths) {\n    for (const key in hdSetting) {\n      const decoder = hdSetting[key]\n\n      if (Array.isArray(decoder)) {\n        return decoder.find(\n          ({ prefix, stringPrefix }) =>\n            prefix === value || stringPrefix === value\n        )\n      }\n\n      if (decoder.prefix === value || decoder.stringPrefix === value) {\n        return decoder.decoder\n      }\n    }\n  }\n  throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n\nexport const createInfo = (info: $Shape<NetworkInfo>): NetworkInfo => {\n  const newNetwork: NetworkInfo = ({}: any)\n\n  for (const set in main) {\n    const mainSet = main[set]\n    const infoSet = info[set]\n\n    if (Array.isArray(mainSet)) {\n      newNetwork[set] = (infoSet || [])\n        .concat(mainSet)\n        .filter((v, i, s) => s.indexOf(v) === i)\n    } else if (typeof mainSet === 'object') {\n      newNetwork[set] = { ...mainSet, ...(infoSet || {}) }\n    } else if (typeof infoSet !== 'undefined') {\n      newNetwork[set] = infoSet\n    } else newNetwork[set] = mainSet\n  }\n\n  return newNetwork\n}\n\nexport const createNetworks = (newInfos: NewNetworks) => {\n  const networks = { main }\n  for (const network in newInfos) {\n    const infos = newInfos[network]\n    for (const networkType in infos) {\n      const partialInfo = infos[networkType]\n      let name = network\n      if (networkType !== 'main') name += networkType.toLowerCase()\n      networks[name] = createInfo(partialInfo)\n    }\n  }\n  return networks\n}\n\nexport const networks: NetworkInfos = createNetworks(Networks)\n\nexport const addNetworks = (newInfos: NewNetworks) =>\n  Object.assign(networks, createNetworks(newInfos))\n\nexport const getNetworkForVersion = (version: number): string => {\n  for (const network in networks) {\n    try {\n      validateHDKeyVersion(version, network)\n      return network\n    } catch (e) {}\n  }\n  throw new Error('Unknown network version')\n}\n\nexport const validateHDKeyVersion = (\n  version: number,\n  network: string = 'main'\n) => {\n  const setting = getHDSetting(network, version)\n  if (!setting) throw new Error('Wrong key prefix for network')\n  return version\n}\n\nexport const getScriptType = (prefixNum: number, network: string = 'main') => {\n  const setting = getHDSetting(network, prefixNum)\n  if (!setting) {\n    throw new Error(\n      `Unknown address prefix ${prefixNum} for network ${network}`\n    )\n  }\n  return setting.scriptType\n}\n\nexport const getPrefix = (scriptType: string, network: string = 'main') => {\n  const { HDPaths } = networks[network]\n  const hdSetting = HDPaths.find(\n    ({ scriptType: Script }) => scriptType === Script\n  )\n  if (!hdSetting) return 0\n  const { address } = hdSetting\n  return Array.isArray(address) ? address[0].prefix : address.prefix\n}\n","// @flow\n\nimport { type HexPair } from '../../types/core.js'\nimport {\n  sign as Sign,\n  verify as Verify,\n  publicKeyCreate\n} from '../utils/secp256k1.js'\nimport { networks } from './networkInfo.js'\n\nexport const fromHex = (keyHex: string): HexPair => {\n  if (keyHex.length !== 66 && keyHex.length !== 132) {\n    throw new Error('Wrong key pair length')\n  }\n  const firstHeaderByte = parseInt(keyHex.slice(0, 2), 16)\n  try {\n    if (firstHeaderByte !== 0) throw new Error('Bad Private key prefix')\n    const keyPair: HexPair = { privateKey: keyHex.slice(2, 66) }\n    if (keyHex.length === 132) {\n      const secondHeaderByte = parseInt(keyHex.slice(66, 68), 16)\n      if (secondHeaderByte !== 2 && secondHeaderByte !== 3) {\n        throw new Error('Bad Public key prefix')\n      }\n      const pub = { publicKey: keyHex.slice(68, 132) }\n      Object.assign(keyPair, pub)\n    }\n    return keyPair\n  } catch (e) {\n    if (firstHeaderByte !== 2 && firstHeaderByte !== 3) {\n      throw new Error('Bad Public key prefix')\n    }\n    return { publicKey: keyHex.slice(0, 66) }\n  }\n}\n\nexport const privateFromWIF = (\n  wif: string,\n  network: string = 'main'\n): { privateKey: string, compress: boolean } => {\n  const { prefix, decoder } = networks[network].wif\n  const keyHex = decoder.decode(wif)\n  // $FlowFixMe - kylanfixes\n  if (parseInt(keyHex.slice(0, 2), 16) !== prefix) {\n    throw new Error(\n      `Unknown key prefix ${keyHex.slice(0, 2)} for network ${network}`\n    )\n  }\n  const privateKey = keyHex.slice(2, 66)\n  let compress = false\n  if (keyHex.length >= 68) {\n    if (parseInt(keyHex.slice(66, 68), 16) !== 1) {\n      throw new Error(`Unknown compression flag ${keyHex.slice(66, 68)}`)\n    }\n    compress = true\n  }\n  return { privateKey, compress }\n}\n\nexport const fromWif = async (\n  wif: string,\n  network: string = 'main'\n): Promise<HexPair> => {\n  const { privateKey, compress } = privateFromWIF(wif, network)\n  const publicKey = await publicKeyCreate(privateKey, compress)\n  return { privateKey, publicKey }\n}\n\nexport const toHex = (keyPair: HexPair): string => {\n  const publicKey = keyPair.publicKey || ''\n  const privateKey = keyPair.privateKey ? `00${keyPair.privateKey}` : ''\n  return `${privateKey}${publicKey}`\n}\n\nexport const sign = async (keyPair: HexPair, msg: string): Promise<string> => {\n  if (!keyPair.privateKey) throw new Error('Cannot sign without private key.')\n  return Sign(msg, keyPair.privateKey)\n}\n\nexport const verify = async (\n  keyPair: HexPair,\n  msg: string,\n  signature: string\n): Promise<Boolean> => {\n  let publicKey = keyPair.publicKey\n  if (!publicKey && keyPair.privateKey) {\n    publicKey = await publicKeyCreate(keyPair.privateKey, true)\n  } else {\n    throw new Error('Cannot verify without keys.')\n  }\n  const verified = await Verify(msg, signature, publicKey)\n  return verified\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { fromWif } from '../../src/core/keyPair.js'\nimport fixtures from './fixtures.json'\n\nconst KeyPairFixtures = fixtures.keyPair\nconst network = 'main'\n\ndescribe('Testing HD Key', function () {\n  KeyPairFixtures.fromWif.forEach(test => {\n    it(`Creating Key Pair from WIF ${test[0]}`, async function () {\n      const keyPair = await fromWif(test[0], network)\n      assert.equal(keyPair.publicKey, test[1])\n    })\n  })\n})\n","// @flow\n\nimport { type HexPair } from '../../types/core.js'\nimport {\n  type DerivedKeyPair,\n  type DerivedPoint,\n  type KeyHmac\n} from '../../types/hd.js'\nimport { sha512Hmac } from '../utils/hash.js'\nimport * as Secp256k1 from '../utils/secp256k1'\n\nexport const HARDENED = 0x80000000\nexport const MAX_INDEX = 0xffffffff\nexport const TWEAK_OUT_OF_RANGE_ERROR = 'tweak out of range'\n\nexport const hmac = (key: string, data: string): KeyHmac => {\n  const hash = sha512Hmac(key, data)\n  const left = hash.slice(0, 64)\n  const right = hash.slice(64, 128)\n  return { left, right }\n}\n\nexport const deriveKeyPoint = async (\n  { privateKey, publicKey }: HexPair = {},\n  entropy: string,\n  index?: number = 0,\n  hardened?: boolean = false\n): Promise<DerivedPoint> => {\n  if (index > MAX_INDEX) throw new Error('Index out of range.')\n  let key = ''\n  if (hardened && index < HARDENED) index += HARDENED\n  if (index >= HARDENED) {\n    if (!privateKey) {\n      throw new Error('Cannot get hardened chainCode without a private key.')\n    }\n    key = `00${privateKey}`\n  } else if (publicKey) {\n    key = publicKey\n  } else if (privateKey) {\n    key = await Secp256k1.publicKeyCreate(privateKey, true)\n  } else {\n    throw new Error('Cannot derive without keys.')\n  }\n  key += index.toString(16).padStart(8, '0')\n  const { left, right } = hmac(key, entropy)\n  return { tweakPoint: left, chainCode: right, childIndex: index }\n}\n\nexport const derivePublic = async (\n  publicKey: string,\n  index: number,\n  entropy: string,\n  hardened: boolean = false\n): Promise<{ publicKey: string } & DerivedKeyPair> => {\n  try {\n    const keyPair = { publicKey }\n    const { tweakPoint, ...rest } = await deriveKeyPoint(\n      keyPair,\n      entropy,\n      index,\n      hardened\n    )\n    const childKey = await Secp256k1.publicKeyTweakAdd(\n      publicKey,\n      tweakPoint,\n      true\n    )\n    return { publicKey: childKey, ...rest }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    return derivePublic(publicKey, index + 1, entropy, hardened)\n  }\n}\n\nexport const derivePrivate = async (\n  privateKey: string,\n  index: number,\n  entropy: string,\n  hardened: boolean = false,\n  publicKey?: string\n): Promise<{ privateKey: string } & DerivedKeyPair> => {\n  try {\n    const keyPair = { privateKey, publicKey }\n    const { tweakPoint, ...rest } = await deriveKeyPoint(\n      keyPair,\n      entropy,\n      index,\n      hardened\n    )\n    const childKey = await Secp256k1.privateKeyTweakAdd(privateKey, tweakPoint)\n    return { privateKey: childKey, ...rest }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    if (index > MAX_INDEX) index -= HARDENED\n    return derivePrivate(privateKey, index + 1, entropy, hardened, publicKey)\n  }\n}\n\nexport const deriveKeyPair = async (\n  parentKeys: DerivedKeyPair,\n  keyIndex?: string = '0'\n): Promise<DerivedKeyPair> => {\n  const hardened = keyIndex[keyIndex.length - 1] === \"'\"\n  const index = hardened ? parseInt(keyIndex.slice(0, -1)) : parseInt(keyIndex)\n  const { chainCode, privateKey } = parentKeys\n  let publicKey = parentKeys.publicKey\n  if ((hardened || index >= HARDENED) && !privateKey) {\n    throw new Error('Cannot derive hardened index without a private key.')\n  }\n  if (privateKey) {\n    const childKey = await derivePrivate(\n      privateKey,\n      index,\n      chainCode,\n      hardened,\n      publicKey\n    )\n    const childPublicKey = await Secp256k1.publicKeyCreate(\n      childKey.privateKey,\n      true\n    )\n    return { ...childKey, publicKey: childPublicKey }\n  }\n  if (!publicKey) {\n    if (!privateKey) throw new Error('Cannot derive without keys.')\n    publicKey = await Secp256k1.publicKeyCreate(privateKey, true)\n  }\n  return derivePublic(publicKey, index, chainCode, hardened)\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as Derive from '../../src/hd/derive.js'\nimport fixtures from './fixtures/derive.json'\n\nconst deriveFixtures = fixtures\n\ndescribe('Testing Key derivation', function () {\n  deriveFixtures.private.forEach(test => {\n    it(`Deriving private key without public key ${test[0]} for index ${\n      test[2]\n    }`, async function () {\n      const privateKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const hardened = test[3]\n      const expectedChildKey = {\n        privateKey: test[4],\n        chainCode: test[5],\n        childIndex: test[6]\n      }\n      const childKey = await Derive.derivePrivate(\n        privateKey,\n        index,\n        chainCode,\n        hardened\n      )\n      assert.deepEqual(childKey, expectedChildKey)\n    })\n  })\n\n  deriveFixtures.privateWithPublic.forEach(test => {\n    it(`Deriving private key with public key ${test[0]} for index ${\n      test[2]\n    }`, async function () {\n      const privateKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const hardened = test[3]\n      const expectedChildKey = {\n        privateKey: test[4],\n        chainCode: test[5],\n        childIndex: test[6]\n      }\n      const publicKey = test[7]\n      const childKey = await Derive.derivePrivate(\n        privateKey,\n        index,\n        chainCode,\n        hardened,\n        publicKey\n      )\n      assert.deepEqual(childKey, expectedChildKey)\n    })\n  })\n\n  deriveFixtures.public.forEach(test => {\n    it(`Deriving public key ${test[0]} for index ${test[2]}`, async function () {\n      const publicKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const hardened = test[3]\n      const expectedChildKey = {\n        publicKey: test[4],\n        chainCode: test[5],\n        childIndex: test[6]\n      }\n      const childKey = await Derive.derivePublic(\n        publicKey,\n        index,\n        chainCode,\n        hardened\n      )\n      assert.deepEqual(childKey, expectedChildKey)\n    })\n  })\n})\n","// @flow\n\nimport {\n  type DerivedKey,\n  type ExtendedKeyPair,\n  type ExtendedMasterKeys\n} from '../../types/hd.js'\nimport * as KeyPair from '../core/keyPair.js'\nimport {\n  getDecoder,\n  getHDSetting,\n  validateHDKeyVersion\n} from '../core/networkInfo.js'\nimport { hash160 } from '../utils/hash.js'\nimport { publicKeyCreate } from '../utils/secp256k1.js'\nimport { deriveKeyPair, hmac } from './derive.js'\n\nconst MAX_DEPTH = 0xff\nconst SEED = '426974636f696e2073656564'\n\nexport const fromSeed = async (\n  seed: string,\n  network: string = 'main',\n  purpose: number = 32\n): Promise<ExtendedMasterKeys> => {\n  const { left, right } = hmac(seed, SEED)\n  const publicKey = await publicKeyCreate(left, true)\n  const masterKeyPair = {\n    privateKey: left,\n    publicKey,\n    chainCode: right,\n    childIndex: 0\n  }\n  const version = getHDSetting(network, purpose).xpriv.prefix\n  return {\n    ...masterKeyPair,\n    parentFingerPrint: 0,\n    version: parseInt(version),\n    depth: 0\n  }\n}\n\nexport const fromIndex = async (\n  parentKeys: ExtendedKeyPair,\n  index: string\n): Promise<ExtendedKeyPair> => {\n  if (parentKeys.depth >= MAX_DEPTH) throw new Error('Depth too high.')\n\n  const derivedKey: DerivedKey<string> = await deriveKeyPair(parentKeys, index)\n  if (!parentKeys.publicKey) {\n    if (!parentKeys.privateKey) {\n      throw new Error('Cannot create parentFingerPrint without keys')\n    }\n    parentKeys.publicKey = await publicKeyCreate(parentKeys.privateKey, true)\n  }\n  const parentFingerPrint = await hash160(parentKeys.publicKey)\n\n  return {\n    ...derivedKey,\n    parentFingerPrint: parseInt(parentFingerPrint.slice(0, 8), 16),\n    version: parentKeys.version,\n    depth: parentKeys.depth + 1\n  }\n}\n\nexport const fromHex = (keyHex: string, network?: string): ExtendedKeyPair => {\n  const version = parseInt(keyHex.slice(0, 8), 16)\n  if (network) validateHDKeyVersion(version, network)\n  return {\n    version,\n    depth: parseInt(keyHex.slice(9, 10), 16),\n    parentFingerPrint: parseInt(keyHex.slice(10, 18), 16),\n    childIndex: parseInt(keyHex.slice(18, 26), 16),\n    chainCode: keyHex.slice(26, 90),\n    ...KeyPair.fromHex(keyHex.slice(90, 156))\n  }\n}\n\nexport const fromString = (\n  hdKey: string,\n  network: string = 'main'\n): ExtendedKeyPair => {\n  const keyHex = getDecoder(network, hdKey.slice(0, 4)).decode(hdKey)\n  return fromHex(keyHex, network)\n}\n\nexport const toHex = (\n  hdKey: ExtendedKeyPair,\n  network: string = 'main',\n  forcePublic: boolean = false\n): string => {\n  const setting = getHDSetting(network, hdKey.version)\n  const { privateKey, publicKey } = hdKey\n  const keyPair: Object = { publicKey, version: hdKey.version }\n  if (forcePublic) {\n    keyPair.version = setting.xpub.prefix\n  } else {\n    keyPair.privateKey = privateKey\n  }\n\n  return (\n    keyPair.version.toString(16).padStart(8, '0') +\n    hdKey.depth.toString(16).padStart(2, '0') +\n    hdKey.parentFingerPrint.toString(16).padStart(8, '0') +\n    hdKey.childIndex.toString(16).padStart(8, '0') +\n    hdKey.chainCode +\n    KeyPair.toHex(keyPair).slice(0, 66)\n  )\n}\n\nexport const toString = (\n  hdKey: ExtendedKeyPair,\n  network: string = 'main',\n  forcePublic: boolean = false\n): string => {\n  const keyHex = toHex(hdKey, network, forcePublic)\n  return getDecoder(network, hdKey.version).encode(keyHex)\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as ExtendedKey from '../../src/hd/extendedKey.js'\nimport fixtures from './fixtures/extendedKey.json'\n\nconst XKeyFixtures = fixtures\nconst network = 'main'\n\ndescribe(`Testing Extended Key functions`, function () {\n  XKeyFixtures.string.forEach(test => {\n    const base58Key = test[0]\n    let xkey = {\n      version: test[2],\n      depth: test[3],\n      parentFingerPrint: test[4],\n      childIndex: test[5],\n      chainCode: test[6]\n    }\n\n    if (test[1].length === 64) xkey = { ...xkey, privateKey: test[1] }\n    if (test[1].length === 66) xkey = { ...xkey, publicKey: test[1] }\n\n    it(`Extended key from string: ${test[0]}`, function () {\n      const resultedXkey = ExtendedKey.fromString(base58Key, network)\n      assert.deepEqual(resultedXkey, xkey)\n    })\n\n    it(`Extended key to string: ${test[1]}`, function () {\n      if (!xkey.publicKey) xkey = { ...xkey, publicKey: `02${test[1]}` }\n      const resultedBase58Key = ExtendedKey.toString(xkey, network)\n      assert.equal(resultedBase58Key, base58Key)\n    })\n  })\n})\n","// @flow\n\nimport {\n  type ExtendedKeyPair,\n  type HDKeyPair,\n  type HDPath,\n  type Index,\n  type Path\n} from '../../types/hd.js'\nimport { HARDENED } from './derive.js'\nimport * as ExtendedKey from './extendedKey.js'\n\nexport const fromSeed = async (\n  seed: string,\n  network?: string\n): Promise<HDKeyPair> => {\n  const masterKeyPair = await ExtendedKey.fromSeed(seed, network)\n  return {\n    ...masterKeyPair,\n    hardened: false,\n    path: ['m'],\n    children: {}\n  }\n}\n\nexport const fromExtendedKey = (\n  keyPair: ExtendedKeyPair,\n  hdPath?: HDPath\n): HDKeyPair => {\n  const hardened = keyPair.childIndex >= HARDENED\n  const { path: parentPath = [] } = hdPath || {}\n  let indexStr = 'm'\n\n  const path = [...parentPath]\n  if (keyPair.depth) {\n    const index = keyPair.childIndex\n    const adjIndex = hardened ? index - HARDENED : index\n    indexStr = `${adjIndex}${hardened ? \"'\" : ''}`\n  }\n\n  if (path[0] !== 'm') path.unshift('m')\n  if (path.length === keyPair.depth) {\n    path.push(indexStr)\n  }\n  if (path.length !== keyPair.depth + 1) {\n    throw new Error('Wrong path depth for key')\n  }\n  if (path[path.length - 1] !== indexStr) {\n    throw new Error('Wrong index for key')\n  }\n\n  const hdKey: HDKeyPair = { ...keyPair, path, hardened, children: {} }\n  const { scriptType, chain } = hdPath || {}\n  if (scriptType) hdKey.scriptType = scriptType\n  if (chain) hdKey.chain = chain\n\n  return hdKey\n}\n\nexport const fromIndex = async (\n  parentKey: HDKeyPair,\n  index: Index,\n  network?: string\n): Promise<HDKeyPair> => {\n  // Derive an ExtendedKey key from the current parentKey and index\n  const childKey = await ExtendedKey.fromIndex(parentKey, index)\n  const childHDPath = {\n    ...parentKey,\n    path: [...parentKey.path, index]\n  }\n  // Create an HD key from the ExtendedKey\n  return fromExtendedKey(childKey, childHDPath)\n}\n\nexport const fromPath = async (\n  parentKeys: HDKeyPair,\n  hdPath: HDPath,\n  network?: string\n): Promise<HDKeyPair> => {\n  // Get the deepest possible parent for this key\n  const parent = getParentKey(parentKeys, hdPath.path)\n  // Set the starting derivation key to be the parent key from before\n  let childHDKey = parent.key\n\n  while (parent.path.length) {\n    // Get next child key\n    const index = parent.path.shift()\n    const childKey = await fromIndex(childHDKey, index, network)\n\n    // Add the new key to the current parent key and change the pointer\n    childHDKey.children[index] = childKey\n    childHDKey = childKey\n  }\n\n  // Set the scriptType and chain for the deepest path\n  childHDKey.scriptType = hdPath.scriptType || 'P2PKH'\n  childHDKey.chain = hdPath.chain || 'external'\n\n  return parentKeys\n}\n\nexport const fromPaths = async (\n  parentKey: HDKeyPair | string,\n  hdPaths: Array<HDPath>,\n  network?: string\n): Promise<HDKeyPair> => {\n  // If we get a seed create a master hd key from it\n  if (typeof parentKey === 'string') {\n    parentKey = await fromSeed(parentKey, network)\n  }\n\n  // Create All missing key paths\n  for (const hdPath of hdPaths) {\n    parentKey = await fromPath(parentKey, hdPath)\n  }\n\n  return parentKey\n}\n\nexport const fromString = (\n  extendedKey: string,\n  hdPath?: HDPath,\n  network?: string\n): HDKeyPair => {\n  const keyPair: ExtendedKeyPair = ExtendedKey.fromString(extendedKey, network)\n  return fromExtendedKey(keyPair, hdPath)\n}\n\nexport const getParentKey = (\n  parentKey: HDKeyPair,\n  path: Path\n): { key: HDKeyPair, path: Path } => {\n  const tempPath = [...path]\n  tempPath.shift()\n  while (parentKey.children[tempPath[0]] && tempPath.length) {\n    parentKey = parentKey.children[tempPath.shift()]\n  }\n  return { key: parentKey, path: tempPath }\n}\n\nexport const getKey = (parentKey: HDKeyPair, path: Path): HDKeyPair | null => {\n  const tempPath = [...path]\n  tempPath.shift()\n  while (parentKey && tempPath.length) {\n    parentKey = parentKey.children[tempPath.shift()]\n  }\n  return parentKey\n}\n\nexport const toString = ExtendedKey.toString\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as HDKey from '../../src/hd/hdKey.js'\nimport fixtures from './fixtures/hdKey.json'\n\nconst HDKeyFixtures = fixtures\nconst network = 'main'\n\ndescribe('Testing HD Key', function () {\n  HDKeyFixtures.fromSeed.forEach(test => {\n    it(`Creating HD key from phrase ${test[0]}`, async function () {\n      const childKey = await HDKey.fromSeed(test[1])\n      const xkey = HDKey.toString(childKey)\n      assert.deepEqual(xkey, test[2])\n    })\n  })\n  HDKeyFixtures.fromString.forEach(test => {\n    it(`Creating HD key from xkey ${test[0]} with path ${test[1]}`, function () {\n      const opts = {}\n      if (test[1]) opts.path = test[1].split('/')\n      const hdKey = HDKey.fromString(test[0], opts)\n      assert.equal(hdKey.hardened, test[2])\n      assert.equal(hdKey.path.join('/'), test[3])\n    })\n  })\n  HDKeyFixtures.fromStringErrors.forEach(test => {\n    it(`Error on Creating HD key with error type ${test[2]}`, function () {\n      try {\n        HDKey.fromString(test[0], { path: test[1].split('/') })\n      } catch (e) {\n        assert.equal(e.message, test[2])\n      }\n    })\n  })\n  HDKeyFixtures.fromPath.forEach(test => {\n    it(`Deriving HD key from xkey ${test[0]} with path ${\n      test[1]\n    }`, async function () {\n      const path = test[1].split('/')\n      const parentKey = HDKey.fromString(test[0])\n      let hdKey = await HDKey.fromPath(parentKey, { path })\n      path.shift()\n      let testIndex = 2\n      while (path.length) {\n        const index = path.shift()\n        hdKey = hdKey.children[index]\n        const xprivkey = HDKey.toString(hdKey)\n        const xpubkey = HDKey.toString(hdKey, network, true)\n        assert.equal(xprivkey, test[testIndex][0], 'xpriv')\n        assert.equal(xpubkey, test[testIndex][1], 'xpub')\n        testIndex++\n      }\n    })\n  })\n})\n","// @flow\n\nimport { type HDPath } from '../../types/hd.js'\nimport { networks } from '../core/networkInfo.js'\n\nexport const createPath = (\n  account: number = 0,\n  parent: HDPath = { path: ['m'] },\n  hardened?: boolean\n): HDPath => {\n  const { chain = 'external', scriptType = 'P2PKH' } = parent\n\n  const accountStr = `${account}${hardened ? \"'\" : ''}`\n  const index = chain === 'external' ? '0' : '1'\n  const path = [...parent.path, accountStr, index]\n\n  return { path, chain, scriptType }\n}\n\nexport const createPaths = (\n  purpose?: number | Array<number>,\n  coinType: number = 0,\n  account: number = 0,\n  network: string = 'main'\n): Array<HDPath> => {\n  const { HDPaths } = networks[network]\n  if (!purpose) purpose = HDPaths[0].purpose\n\n  if (Array.isArray(purpose)) {\n    const paths = []\n    for (const p of purpose) {\n      paths.push(...createPaths(p, coinType, account, network))\n    }\n    return paths\n  }\n\n  if (purpose === 32) return [createPath(account)]\n\n  const pathSettings = HDPaths.find(path => path.purpose === purpose)\n  if (!pathSettings) throw new Error(`Unknown derivation purpose ${purpose}`)\n\n  const { scriptType } = pathSettings\n  const path = ['m', `${purpose}'`, `${coinType || 0}'`]\n  const hdPath = { path, scriptType }\n  const hdPathInt = { ...hdPath, chain: 'internal' }\n\n  return [\n    createPath(account, hdPath, true),\n    createPath(account, hdPathInt, true)\n  ]\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as HDKey from '../../src/hd/hdKey.js'\nimport { createPaths } from '../../src/hd/path.js'\nimport fixtures from './fixtures/path.json'\n\nconst network = 'main'\n\ndescribe('Testing Bip44 HD Key path derivation', function () {\n  fixtures.createPaths.forEach(test => {\n    it(`Deriving HD key ${test[0]} from HD Settings ${\n      test[3]\n    }`, async function () {\n      const parentKey = HDKey.fromString(test[0])\n\n      let account = 0\n      let coinType = 0\n      if (test[1]) {\n        account = test[1][0]\n        coinType = test[1][1]\n      }\n      const hdPaths = createPaths(test[2], coinType, account, 'bitcoin')\n      const hdKey = await HDKey.fromPaths(parentKey, hdPaths, network)\n      let testIndex = 3\n      for (const hdPath of hdPaths) {\n        const key = HDKey.getKey(hdKey, hdPath.path)\n        if (!key) throw new Error('No Key')\n        const xprivkey = HDKey.toString(key)\n        const xpubkey = HDKey.toString(key, network, true)\n        assert.equal(xprivkey, test[testIndex++], 'xpriv')\n        assert.equal(xpubkey, test[testIndex++], 'xpub')\n      }\n    })\n  })\n})\n","// @flow\n\nimport babel from 'rollup-plugin-babel'\nimport flowEntry from 'rollup-plugin-flow-entry'\nimport json from 'rollup-plugin-json'\n\nimport packageJson from './package.json'\n\nexport default {\n  input: './index.js',\n  external: [\n    ...Object.keys(packageJson.dependencies),\n    ...Object.keys(packageJson.devDependencies),\n    'bindings',\n    'elliptic'\n  ],\n  output: [\n    { file: packageJson.main, format: 'cjs', sourcemap: true },\n    { file: packageJson.module, format: 'es', sourcemap: true }\n  ],\n  plugins: [\n    json(),\n    babel({\n      babelrc: false,\n      presets: ['@babel/preset-flow'],\n      plugins: ['@babel/plugin-proposal-object-rest-spread']\n    }),\n    flowEntry()\n  ]\n}\n","import babel from 'rollup-plugin-babel'\nimport json from 'rollup-plugin-json'\nimport multiEntry from 'rollup-plugin-multi-entry'\n\nimport config from '../rollup.config.js'\n\nconst babelOptions = {\n  babelrc: false,\n  presets: ['@babel/preset-flow'],\n  plugins: ['@babel/plugin-proposal-object-rest-spread']\n}\n\nexport default {\n  external: config.external,\n  input: './test/**/*.js',\n  output: [\n    { file: 'build/tests.cjs.js', format: 'cjs', sourcemap: true },\n    { file: 'build/tests.js', format: 'es', sourcemap: true }\n  ],\n  plugins: [multiEntry(), json(), babel(babelOptions)]\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { base } from '../../src/utils/base.js'\nimport { sha512Hmac } from '../../src/utils/hash.js'\nimport fixtures from './fixtures.json'\n\nconst key =\n  '00ab0063a7ea84d7c5f4a9ad8690c69b80a2d650343fbc9266b2d73c7b26bb2cc780000020'\nconst data = '485efe44bc445946b58ba03e8da75d5cf44fc9196eaa88204667629c4e04c38d'\nconst res =\n  '405fcc33d3f409f16571e19bd27053cd1d05e74df6eba0dc93c4c0a91599052429203b410e284513e14f67287843f91875bf69986f9cebf7037e79b0b13bbdbc'\n\nconst baseFixtures = fixtures.base\n\nconst hash = sha512Hmac(key, data)\nassert.equal(hash, res)\n\nfor (const fixture in baseFixtures) {\n  describe(`Testing base ${fixture}`, function () {\n    const fixtureBase = base[fixture].check\n\n    baseFixtures[fixture].valid.forEach(({ string, payload }) => {\n      it(`Decode valid string: ${string}`, async function () {\n        const resultedPaylod = fixtureBase.decode(string)\n        assert.equal(resultedPaylod, payload)\n      })\n      it(`Encode valid payload: ${payload}`, async function () {\n        const resultedString = fixtureBase.encode(payload)\n        assert.equal(resultedString, string)\n      })\n    })\n\n    baseFixtures[fixture].invalid.forEach(({ string, exception }) => {\n      it(`Test invalid string: ${string}`, async function () {\n        try {\n          fixtureBase.decode(string)\n        } catch (e) {\n          assert.equal(e.message, exception)\n        }\n      })\n    })\n  })\n}\n","// @flow\n\nimport {\n  type LoadFunc,\n  type PersistStatus,\n  type SaveFunc\n} from '../../types/utils.js'\n\nexport const persist = (\n  save: SaveFunc,\n  load: LoadFunc | Object,\n  delay: number = 100,\n  cache: Object = {},\n  data: Object = cache,\n  status: PersistStatus = {}\n) => {\n  return new Proxy((Object.assign(() => save(cache), data): any), {\n    apply: async (target, thisArgs, args) => {\n      const updateCache = newCache => {\n        cache = newCache\n        data = newCache\n        for (const key in target) {\n          if (data[key] === undefined) {\n            delete target[key]\n          }\n        }\n        Object.assign(target, newCache)\n      }\n\n      // Try to load the cache from disk in case it never happend before\n      if (!status.loaded) {\n        const rawData = typeof load === 'function' ? await load() : load\n        updateCache({ ...rawData, ...cache })\n        status.loaded = true\n      }\n\n      // Load/Stop the cache based on the argument\n      if (args && args.length) {\n        if (typeof args[0] === 'object') updateCache({ ...args[0] })\n        else if (args[0] === 'stop') {\n          if (status.saving) {\n            clearTimeout(status.saving)\n            status.saving = null\n          }\n          status.changed = false\n          await Reflect.apply(target, target, [])\n          return\n        }\n      }\n\n      // Stop looping in case nothing changed or we already have a save timer\n      if (!status.changed || status.saving) return\n\n      // If something changed, set flags and call save\n      status.changed = false\n\n      // Set save loop after the desired delay\n      status.saving = setTimeout(() => {\n        if (status.saving) {\n          clearTimeout(status.saving)\n          status.saving = null\n        }\n        Reflect.apply(thisArgs, thisArgs, [])\n      }, delay)\n\n      await Reflect.apply(target, target, [])\n    },\n    set: (target: any, prop: string, value: any, receiver: any) => {\n      // Only update/save if the param actually changed\n      if (data[prop] !== value) {\n        Reflect.set(data, prop, value)\n        Reflect.set(target, prop, value)\n        status.changed = true\n        if (!status.saving) Reflect.apply(receiver, receiver, [])\n      }\n      return true\n    },\n    get: (target: any, prop: string) => {\n      if (prop === 'status') return status\n      // Get the value\n      const value = Reflect.get(data, prop)\n      // Return any non object values\n      if (typeof value !== 'object') return value\n      // Create a proxy from the child to trimgger saves on the top parent\n      return persist(save, load, delay, cache, value, status)\n    }\n  })\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { after, before, describe, it } from 'mocha'\n\nimport { persist } from '../../src/utils/persister.js'\nimport fixtures from './fixtures.json'\n\nconst createSave = (expected: any, delay: number, cbs: any) => {\n  let saveAttempts = -1\n  let firstSaveTime = 0\n\n  return async cacheData => {\n    if (cbs.stop) return\n    cbs.e = new Error()\n\n    assert.notEqual(cacheData, expected)\n    assert.deepEqual(cacheData, expected)\n\n    saveAttempts++\n    if (!firstSaveTime) firstSaveTime = Date.now()\n    const saveTime = Date.now() - firstSaveTime\n\n    if (delay) {\n      const minDelay = delay * saveAttempts\n      assert.isAtLeast(saveTime, minDelay)\n    }\n\n    cbs.e = null\n    // console.log(saveTime, '- SAVE -', cacheData, saveAttempts)\n  }\n}\n\nconst cbs = {}\n\nfor (const test in fixtures.persister) {\n  const testNum = test.replace('scenario ', '')\n  const { cache, delay, sets } = fixtures.persister[test]\n  const expected = JSON.parse(JSON.stringify(cache || {}))\n  const save = createSave(expected, delay, cbs)\n  const load = testNum !== '1' ? (): Object => expected : cache\n  const persistedCache = persist(save, load, delay)\n\n  describe(`Testing persister for ${test} with delay of ${delay ||\n    100}ms`, function () {\n    this.timeout(0)\n    before('Test using cache as a function', async function () {\n      cbs.stop = false\n      await persistedCache({})\n      await persistedCache(cache)\n    })\n\n    sets.map(([param, value, saveTime], i) => {\n      it(`Set '${param}' to ${value}, after ${saveTime} milliseconds`, function (done) {\n        let child = persistedCache\n        let expectedChild = expected\n\n        param = param.split('.')\n        while (param.length > 1) {\n          const key = param.shift()\n          child = child[key]\n          expectedChild = expectedChild[key]\n        }\n\n        const key = param[0]\n        const interval = !i ? saveTime : saveTime - sets[i - 1][2]\n\n        setTimeout(() => {\n          expectedChild[key] = value\n          child[key] = value\n          assert.equal(expectedChild[key], child[key])\n          done(cbs.e)\n        }, interval)\n      })\n    })\n\n    after('Stop the caceh using cache as a function', async function () {\n      cbs.stop = true\n      await persistedCache('stop')\n    })\n  })\n}\n"],"names":["isHexString","hex","test","toUint8Array","hexString","Error","length","match","bytes","map","byte","parseInt","Uint8Array","fromUint8Array","reduce","str","toString","padStart","formatFunction","func","opts","numParams","encoder","results","sync","input","output","encode","i","cps","a","newCps","p","paramEncoder","encodeResult","res","param","waitResult","params","result","lazyHandler","activeModule","get","target","prop","receiver","loadedModule","inject","Proxy","args","lazify","unsafeModule","parentModule","injectedModule","loadUnsafe","defaultModule","Object","assign","parentProxy","secp256k1","require","Buffer","from","publicKeyCreate","signatureNormalize","signatureExport","privateKeyTweakAdd","publicKeyTweakAdd","verify","signature","sign","hashjs","digest","hash","data","uintArray","rawRes","update","resArray","digestHmac","hmac","key","uintKey","hmacHash","sha256","ripemd160","sha512Hmac","sha512","hash256","hash160","ALPHABETS","createCheckSumBase","base","hashFunc","hexStr","checksum","checkHex","slice","decode","baseString","payload","newChecksum","startsWith","createHexEncoder","newBase","check","decoders","alphabet","baseDecoder","basex","bech32","bip32","purpose","scriptType","xpriv","stringPrefix","prefix","decoder","xpub","address","bip44","bip49","bip84","main","coinType","wif","HDPaths","txHash","sigHash","forks","replayProtection","forkSighash","forcedMinVersion","forkId","testnet","getHDSetting","network","value","networks","hdSetting","setting","Array","isArray","find","getDecoder","createInfo","info","newNetwork","set","mainSet","infoSet","concat","filter","v","s","indexOf","createNetworks","newInfos","infos","networkType","partialInfo","name","toLowerCase","Networks","validateHDKeyVersion","version","fromHex","keyHex","firstHeaderByte","keyPair","privateKey","secondHeaderByte","pub","publicKey","e","privateFromWIF","compress","fromWif","toHex","KeyPairFixtures","fixtures","describe","forEach","it","assert","equal","HARDENED","MAX_INDEX","TWEAK_OUT_OF_RANGE_ERROR","left","right","deriveKeyPoint","entropy","index","hardened","Secp256k1","tweakPoint","chainCode","childIndex","derivePublic","rest","childKey","message","includes","derivePrivate","deriveKeyPair","parentKeys","keyIndex","childPublicKey","deriveFixtures","private","expectedChildKey","Derive","deepEqual","privateWithPublic","public","MAX_DEPTH","SEED","fromSeed","seed","masterKeyPair","parentFingerPrint","depth","fromIndex","derivedKey","KeyPair","fromString","hdKey","forcePublic","XKeyFixtures","string","base58Key","xkey","resultedXkey","ExtendedKey","resultedBase58Key","path","children","fromExtendedKey","hdPath","parentPath","indexStr","adjIndex","unshift","push","chain","parentKey","childHDPath","fromPath","parent","getParentKey","childHDKey","shift","fromPaths","hdPaths","extendedKey","tempPath","getKey","HDKeyFixtures","HDKey","split","join","fromStringErrors","testIndex","xprivkey","xpubkey","createPath","account","accountStr","createPaths","paths","pathSettings","hdPathInt","external","keys","packageJson","dependencies","devDependencies","file","format","sourcemap","module","plugins","json","babel","babelrc","presets","flowEntry","babelOptions","config","multiEntry","baseFixtures","fixture","fixtureBase","valid","resultedPaylod","resultedString","invalid","exception","persist","save","load","delay","cache","status","apply","thisArgs","updateCache","newCache","undefined","loaded","rawData","saving","clearTimeout","changed","Reflect","setTimeout","createSave","expected","cbs","saveAttempts","firstSaveTime","cacheData","stop","notEqual","Date","now","saveTime","minDelay","isAtLeast","persister","testNum","replace","sets","JSON","parse","stringify","persistedCache","timeout","before","done","child","expectedChild","interval","after"],"mappings":"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"}