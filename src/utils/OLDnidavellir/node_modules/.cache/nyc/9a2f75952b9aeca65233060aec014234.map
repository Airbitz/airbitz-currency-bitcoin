{"version":3,"file":"tests.cjs.js","sources":["../src/utils/jsonSearch.js","../test/utils/fixtures/jsonSearch.js","../test/utils/jsonSearch.js"],"sourcesContent":["// @flow\n\nimport { type JsonSearchParams } from '../../types/utils'\n\nexport const search = (searchParams: JsonSearchParams, jsonObj: any): Array<any> => {\n  // If jsonObj is undefined we can't compare anything and so we fail early\n  if (typeof jsonObj === 'undefined') return []\n\n  const {\n    keyToMatch,\n    valueToMatch,\n    // keyToReturn,\n    parent,\n    tokenizeKeys = keyToMatch ? keyToMatch.split('.') : []\n  } = searchParams\n\n  // If we ran out of tokenizeKeys it means we need to verify that we found the right key with the correct value\n  if (!tokenizeKeys.length) {\n    if (typeof valueToMatch === 'undefined' || valueToMatch === jsonObj) {\n      return parent ? [parent] : [jsonObj]\n    }\n  }\n\n  let results = []\n  // const addResults = (obj: any, shiftToken?: boolean) => {\n  //   const newSearchParams: JsonSearchParams = {\n  //     keyToMatch,\n  //     valueToMatch,\n  //     // keyToReturn,\n  //     tokenizeKeys\n  //   }\n\n  //   if (parent) newSearchParams.parent = jsonObj\n  //   if (shiftToken) {\n  //     newSearchParams.tokenizeKeys = tokenizeKeys.slice(1)\n  //     obj = [obj]\n  //   }\n\n  //   for (const key in obj) {\n  //     const result = search(newSearchParams, obj[key])\n  //     results = results.concat(result)\n  //   }\n  // }\n\n  // If we are searching in an Array, we would go over each child without moving the token counter\n  if (Array.isArray(jsonObj)) {\n    for (const item of jsonObj) {\n      results = results.concat(\n        search({\n          keyToMatch,\n          valueToMatch,\n          // keyToReturn,\n          parent: jsonObj,\n          tokenizeKeys\n        }, item)\n      )\n    }\n  } else if (typeof jsonObj === 'object') {\n    const firstToken = tokenizeKeys[0]\n    // if (firstToken === '*') {\n    // } else {\n    // }\n\n    // Search one level down based on the first key in tokenizeKeys with ourself as the parent\n    results = results.concat(\n      search({\n        keyToMatch,\n        valueToMatch,\n        // keyToReturn,\n        parent: jsonObj,\n        tokenizeKeys: tokenizeKeys.slice(1)\n      }, jsonObj[firstToken])\n    )\n\n    // If there is no parent yet, it means that we still have the full tokenizeKeys\n    // So we will try to use the same tokenizeKeys for every child of jsonObj\n    if (!parent) {\n      for (const key in jsonObj) {\n        results = results.concat(\n          search({\n            keyToMatch,\n            valueToMatch,\n            // keyToReturn,\n            tokenizeKeys\n          }, jsonObj[key])\n        )\n      }\n    }\n  }\n\n  return results\n}\n","export const jsonObj = {\n  alpha: 1,\n  bravo: [1, 2, 3],\n  charlie: { delta: 1 },\n  india: {\n    kilo: 4,\n    lima: 4\n  },\n  uniform: {\n    kilo: 4,\n    lima: 4\n  },\n  echo: {\n    foxtrot: [1, 2, 3],\n    golf: {\n      india: {\n        kilo: 4,\n        lima: 4\n      },\n      juliet: {\n        kilo: 4,\n        lima: 5\n      },\n      mike: [\n        { kilo: 4 },\n        6,\n        { lima: 5 },\n        { lima: 6, kilo: 7 },\n        { charlie: { delta: 1 } },\n        { alpha: 1 },\n        [ 6, { lima: 5 }, 10 ]\n      ],\n      november: 8\n    }\n  }\n}\n\nconst working = [\n  [ [], [jsonObj] ],\n  [ ['alpha', 1], [\n    jsonObj,\n    jsonObj['echo']['golf']['mike'][5]\n  ] ],\n  [ ['alpha', 2], [] ],\n  [ ['bravo', 0], [] ],\n  [ ['bravo', 1], [jsonObj['bravo']] ],\n  [ ['charlie', 1], [] ],\n  [ ['charlie.delta', 1], [\n    jsonObj['charlie'],\n    jsonObj['echo']['golf']['mike'][4]['charlie']\n  ] ],\n  [ ['india.kilo', 5], [] ],\n  [ ['india.lima', 5], [] ],\n\n  [ ['echo.foxtrot', 2], [\n    jsonObj['echo']['foxtrot']\n  ] ],\n\n  [ ['echo.golf.india.kilo', 4], [jsonObj['echo']['golf']['india']] ],\n  [ ['echo.golf.india.kilo', 5], [] ],\n  [ ['echo.golf.november', 8], [jsonObj['echo']['golf']] ],\n\n  [ ['india.kilo', 4], [\n    jsonObj['india'],\n    jsonObj['echo']['golf']['india']\n  ] ],\n\n  [ ['lima', 5], [\n    jsonObj['echo']['golf']['juliet'],\n    jsonObj['echo']['golf']['mike'][2],\n    jsonObj['echo']['golf']['mike'][6][1]\n  ] ],\n\n  [ ['lima', 4], [\n    jsonObj['india'],\n    jsonObj['uniform'],\n    jsonObj['echo']['golf']['india']\n  ] ],\n\n  [ ['kilo', 4], [\n    jsonObj['india'],\n    jsonObj['uniform'],\n    jsonObj['echo']['golf']['india'],\n    jsonObj['echo']['golf']['juliet'],\n    jsonObj['echo']['golf']['mike'][0]\n  ] ]\n]\n\nexport const fixtures = [\n  [ ['mike.*.delta', 1], [\n    jsonObj['charlie'],\n    jsonObj['echo']['golf']['mike'][4]['charlie']\n  ] ]\n]\n// .concat(working)\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { search } from '../../src/utils/jsonSearch.js'\nimport { fixtures, jsonObj } from './fixtures/jsonSearch.js'\n\ndescribe('Testing Json Search', function () {\n  fixtures.forEach(([ test, expected ]) => {\n    it(`Testing search with: ${JSON.stringify(test)} `, function () {\n      const searchParams = {\n        keyToMatch: test[0],\n        valueToMatch: test[1]\n        // keyToReturn: test[2]\n      }\n      const results = search(searchParams, jsonObj)\n      // console.log('results', results)\n      // console.log('expected', expected)\n      assert.deepEqual(results, expected)\n    })\n  })\n})\n"],"names":["search","searchParams","jsonObj","keyToMatch","valueToMatch","parent","tokenizeKeys","split","length","results","Array","isArray","item","concat","firstToken","slice","key","alpha","bravo","charlie","delta","india","kilo","lima","uniform","echo","foxtrot","golf","juliet","mike","november","working","fixtures","describe","forEach","test","expected","it","JSON","stringify","assert","deepEqual"],"mappings":"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"}