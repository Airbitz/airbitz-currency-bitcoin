{"version":3,"file":"tests.cjs.js","sources":["../src/utils/require.js","../src/utils/uintArray.js","../src/utils/hash.js","../src/utils/base.js","../src/hd/paths.js","../src/networks/baseInfo.js","../src/networks/bitcoin.js","../src/core/networkInfo.js","../src/utils/formatter.js","../src/utils/secp256k1.js","../src/core/privateKey.js","../test/core/privateKey.js","../src/hd/common.js","../src/hd/private.js","../src/hd/public.js","../src/hd/path.js","../src/hd/hdKey.js","../test/hd/hdKey.js","../test/hd/path.js","../test/hd/private.js","../test/hd/public.js","../rollup.config.js","../test/rollup.config.js","../test/utils/base.js","../test/utils/fixtures/jsonSearch.js","../src/utils/jsonSearch.js","../test/utils/jsonSearch.js","../src/utils/persister.js","../test/utils/persister.js"],"sourcesContent":["const lazyHandler = activeModule => ({\n  get: (target, prop, receiver) => {\n    // If already loaded return the loaded module\n    if (activeModule) return activeModule[prop]\n    // Try to inject the loaded module\n    if (prop === 'inject') {\n      return loadedModule => {\n        activeModule = loadedModule\n        for (const prop in target) {\n          target[prop].inject(activeModule[prop])\n        }\n      }\n    }\n    // Create a new child proxy if this prop not yet exists\n    if (!target[prop]) {\n      target[prop] = new Proxy(function (...args) {\n        if (!activeModule) target()\n        return activeModule[prop](...args)\n      }, lazyHandler())\n    }\n    return target[prop]\n  }\n})\n\nexport const lazify = unsafeModule => {\n  const parentModule = function (injectedModule = {}, loadUnsafe = true) {\n    const defaultModule = loadUnsafe ? unsafeModule() : {}\n    const loadedModule = Object.assign(defaultModule, injectedModule)\n    parentProxy.inject(loadedModule)\n  }\n  const parentProxy = new Proxy(parentModule, lazyHandler())\n  return parentProxy\n}\n","// @flow\n\nexport const isHexString = (hex: string) =>\n  typeof hex === 'string' && /^[0-9a-f]*$/i.test(hex)\n\nexport const toUint8Array = (hexString: string): Uint8Array => {\n  if (!isHexString(hexString)) {\n    throw new Error(`${hexString} is Not a Hex string`)\n  }\n  if (hexString.length % 2 !== 0) hexString = `0${hexString}`\n  const hex = hexString.match(/.{1,2}/g) || []\n  const bytes = hex.map(byte => parseInt(byte, 16))\n  return new Uint8Array(bytes)\n}\n\nexport const fromUint8Array = (bytes: Uint8Array): string =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '')\n","// @flow\n\nimport { type Hashes } from '../../types/utils.js'\nimport { lazify } from './require.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const hashjs: Hashes<Uint8Array> = (lazify(() =>\n  require('hash.js')\n): any)\n\nexport const digest = (hash: Function) => (data: string) => {\n  const uintArray = toUint8Array(data)\n  const rawRes = hash()\n    .update(uintArray)\n    .digest()\n  const resArray = new Uint8Array(rawRes)\n  return fromUint8Array(resArray)\n}\n\nexport const digestHmac = (hmac: Function, hash: Function) => (\n  key: string,\n  data: string\n) => {\n  const uintKey = toUint8Array(key)\n  const hmacHash = () => hmac(hash, uintKey)\n  return digest(hmacHash)(data)\n}\n\nexport const sha256 = digest(hashjs.sha256)\nexport const sha512 = digest(hashjs.sha512)\nexport const ripemd160 = digest(hashjs.ripemd160)\nexport const sha512Hmac = digestHmac(hashjs.hmac, hashjs.sha512)\n\nexport const hash256 = (data: string) => sha256(sha256(data))\nexport const hash160 = (data: string) => ripemd160(sha256(data))\n","// @flow\n\nimport { Buffer } from 'buffer'\n\nimport basex from 'base-x'\n\nimport {\n  type Alphabet,\n  type BaseCheck,\n  type BaseDecoder,\n  type Bases,\n  type HashFunction\n} from '../../types/utils.js'\nimport { hash256 } from './hash.js'\n\n// The default ALPHABETS, the name of the base codec will be the alphabet's length\nexport const ALPHABETS: Array<Alphabet> = [\n  '01',\n  '01234567',\n  '0123456789a',\n  '0123456789abcdef',\n  '0123456789ABCDEFGHJKMNPQRSTVWXYZ',\n  '0123456789abcdefghijklmnopqrstuvwxyz',\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n]\n\nexport const createCheckSumBase = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseDecoder => ({\n  encode: (hexStr: string): string => {\n    const checksum = (hashFunc || hash256)(hexStr)\n    const checkHex = `${hexStr}${checksum.slice(0, 8)}`\n    return base.encode(checkHex)\n  },\n  decode: (baseString: string): string => {\n    const hexStr = base.decode(baseString)\n    const payload = hexStr.slice(0, -8)\n    const newChecksum = (hashFunc || hash256)(payload)\n    const checksum = hexStr.slice(-8)\n    if (newChecksum.startsWith(checksum)) return payload\n    throw new Error('Invalid checksum')\n  }\n})\n\nexport const createHexEncoder = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseCheck => {\n  const newBase = { ...base }\n  const encode: (buf: Buffer) => string = newBase.encode\n  const decode: (str: string) => Buffer = newBase.decode\n  newBase.encode = a => encode(Buffer.from(a, 'hex'))\n  newBase.decode = a => decode(a).toString('hex')\n  return { ...newBase, check: createCheckSumBase(newBase, hashFunc) }\n}\n\nexport const base: Bases = ALPHABETS.reduce((decoders, alphabet) => {\n  const baseDecoder = createHexEncoder(basex(alphabet))\n  return { ...decoders, [alphabet.length]: baseDecoder }\n}, {})\n","// @flow\n\nimport { type HDPathSetting, type HDPathsSetting } from '../../types/core'\nimport { base } from '../utils/base.js'\n// TODO - Actually get bech32\nconst bech32 = base['58'].check\nconst base58 = base['58'].check\n\nconst BasePath: HDPathSetting = {\n  scriptType: 'P2PKH',\n  xpriv: { prefix: 0x0488ade4, stringPrefix: 'xprv', decoder: { base: 'xprv', ...base58 } },\n  xpub: { prefix: 0x0488b21e, stringPrefix: 'xpub', decoder: { base: 'xpub', ...base58 } },\n  address: { prefix: 0x80, stringPrefix: '1', decoder: { base: '1', ...base58 } }\n}\n\nconst SupportedPaths: HDPathsSetting = {\n  '32': BasePath,\n  '44': BasePath,\n  '49': {\n    scriptType: 'P2WPKH-P2SH',\n    xpriv: { prefix: 0x049d7878, stringPrefix: 'yprv', decoder: base58 },\n    xpub: { prefix: 0x049d7cb2, stringPrefix: 'ypub', decoder: base58 },\n    address: { prefix: 0x05, stringPrefix: '3', decoder: base58 }\n  },\n  '84': {\n    scriptType: 'P2WPKH',\n    xpriv: { prefix: 0x04b2430c, stringPrefix: 'zprv', decoder: base58 },\n    xpub: { prefix: 0x04b24746, stringPrefix: 'zpub', decoder: base58 },\n    address: { prefix: -1, stringPrefix: 'bc', decoder: bech32 }\n  }\n}\n\nexport default SupportedPaths\n","// @flow\n\nimport { type NetworkInfo } from '../../types/core.js'\nimport Paths from '../hd/paths.js'\nimport { base } from '../utils/base.js'\nimport { hash256 } from '../utils/hash.js'\n\nexport const main: NetworkInfo = {\n  coinType: 0,\n  wif: {\n    prefix: 0x80,\n    stringPrefix: '1',\n    decoder: base['58'].check\n  },\n  HDPaths: { '32': Paths['32'], '44': Paths['44'] },\n  DefaultHDPath: 44,\n  txHash: hash256,\n  sigHash: (str: Buffer) => Buffer.from(hash256(str.toString('hex')), 'hex')\n}\n","// @flow\n\nimport Paths from '../hd/paths.js'\n\nexport const main = {\n  HDPaths: { '49': Paths['49'], '84': Paths['84'] },\n  DefaultHDPath: 84\n}\n\nexport const testnet = {\n  coinType: 1,\n  wif: 0xef,\n  HDPaths: {\n    '32': {\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0x6f\n    },\n    '44': {\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0x6f\n    },\n    '49': {\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0xc4\n    },\n    '84': {\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 'tb'\n    }\n  }\n}\n","// @flow\n\nimport {\n  type HDPathSetting,\n  type NetworkInfo,\n  type NetworkInfos,\n  type NewNetworks\n} from '../../types/core.js'\nimport { main } from '../networks/baseInfo.js'\nimport * as Networks from '../networks/networks.js'\n\nexport const createInfo = (info: $Shape<NetworkInfo>): NetworkInfo => {\n  const newNetwork: NetworkInfo = ({}: any)\n\n  for (const set in main) {\n    const mainSet = main[set]\n    const infoSet = info[set]\n\n    if (Array.isArray(mainSet)) {\n      newNetwork[set] = (infoSet || [])\n        .concat(mainSet)\n        .filter((v, i, s) => s.indexOf(v) === i)\n    } else if (typeof mainSet === 'object') {\n      newNetwork[set] = { ...mainSet, ...(infoSet || {}) }\n    } else if (typeof infoSet !== 'undefined') {\n      newNetwork[set] = infoSet\n    } else newNetwork[set] = mainSet\n  }\n\n  return newNetwork\n}\n\nexport const createNetworks = (newInfos: NewNetworks) => {\n  const networks = { main }\n  for (const network in newInfos) {\n    const infos = newInfos[network]\n    for (const networkType in infos) {\n      const partialInfo = infos[networkType]\n      let name = network\n      if (networkType !== 'main') name += networkType.toLowerCase()\n      networks[name] = createInfo(partialInfo)\n    }\n  }\n  return networks\n}\n\nexport const networks: NetworkInfos = createNetworks(Networks)\n\nexport const addNetworks = (newInfos: NewNetworks) =>\n  Object.assign(networks, createNetworks(newInfos))\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\nexport const getHDSetting = (value: any, network?: string): HDPathSetting => {\n  // If no network is specified, check all available networks\n  if (!network) {\n    for (const network in networks) {\n      try {\n        return getHDSetting(value, network)\n      } catch (e) {}\n    }\n    throw new Error('Unknown prefix')\n  }\n\n  const { HDPaths } = networks[network]\n  for (const purpose in HDPaths) {\n    const hdPath = HDPaths[purpose]\n    for (const key in hdPath) {\n      const setting = hdPath[key]\n      // checking if address that has legacy\n      if (Array.isArray(setting)) {\n        return setting.find(\n          ({ prefix, stringPrefix }) =>\n            prefix === value || stringPrefix === value\n        )\n      }\n\n      // checking if xpub, xpriv, or address\n      if (\n        typeof setting === 'object' &&\n        (setting.prefix === value || setting.stringPrefix === value)\n      ) {\n        return hdPath\n      }\n\n      // if scriptType or purpose\n      if (setting === value) return hdPath\n    }\n  }\n  throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n\nexport const getDecoder = (network: string, value: any) => {\n  const hdPath = getHDSetting(value, network)\n  for (const key in hdPath) {\n    const decoder = hdPath[key]\n\n    if (Array.isArray(decoder)) {\n      return decoder.find(\n        ({ prefix, stringPrefix }) =>\n          prefix === value || stringPrefix === value\n      )\n    }\n\n    if (decoder.prefix === value || decoder.stringPrefix === value) {\n      return decoder.decoder\n    }\n  }\n  throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n","// @flow\n\nimport { type FunctionFormatterOptions } from '../../types/utils.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const formatFunction = (\n  func: Function,\n  opts?: FunctionFormatterOptions = {}\n) => {\n  const { numParams = 1, encoder, results = [], sync } = opts\n  const { input = toUint8Array, output = fromUint8Array } = encoder || {}\n\n  const encode = (i: number, cps = a => a) => {\n    if (!i--) return cps\n    const newCps = (p: any) => {\n      p[i] = input(p[i])\n      return cps(p)\n    }\n    return encode(i, newCps)\n  }\n\n  const paramEncoder = encode(numParams)\n\n  let encodeResult = (res: any) => output(res)\n  if (!results) {\n    encodeResult = (res: any) => res\n  } else if (results.length) {\n    encodeResult = (res: any) => {\n      for (const param of results) {\n        res[param] = output(res[param])\n      }\n      return res\n    }\n  }\n\n  let waitResult = async (res: any) => {\n    res = await res\n    return encodeResult(res)\n  }\n  if (sync) waitResult = (res: any) => encodeResult(res)\n\n  return (...params: any): any => {\n    const result = func(...paramEncoder(params))\n    return waitResult(result)\n  }\n}\n\nexport const formatByteSize = (\n  originalByteSize: number,\n  newByteSize: number,\n  pad: boolean = originalByteSize > newByteSize\n) => (data: Array<number>) => {\n  let acc = 0\n  let bits = 0\n  const ret = []\n  const maxNum = (1 << newByteSize) - 1\n  for (let p = 0; p < data.length; ++p) {\n    const value = data[p]\n    if (value < 0 || value >> originalByteSize !== 0) {\n      throw new Error('Wrong bit value')\n    }\n    acc = (acc << originalByteSize) | value\n    bits += originalByteSize\n    while (bits >= newByteSize) {\n      bits -= newByteSize\n      ret.push((acc >> bits) & maxNum)\n    }\n  }\n  if (pad && bits > 0) {\n    ret.push((acc << (newByteSize - bits)) & maxNum)\n  } else if (\n    bits >= originalByteSize ||\n    (acc << (newByteSize - bits)) & maxNum\n  ) {\n    throw new Error('Wrong bit value')\n  }\n  return ret\n}\n","// @flow\n\nimport { type Secp256k1 } from '../../types/utils.js'\nimport { formatFunction } from './formatter.js'\nimport { lazify } from './require.js'\n\nexport const secp256k1: Secp256k1<Uint8Array> = (lazify(() =>\n  require('secp256k1')\n): any)\n\nconst encoder = {\n  input: a => Buffer.from(a, 'hex'),\n  output: a => a.toString('hex')\n}\n\nexport const publicKeyCreate = formatFunction(secp256k1.publicKeyCreate, {\n  encoder\n})\nexport const signatureNormalize = formatFunction(secp256k1.signatureNormalize, {\n  encoder\n})\nexport const signatureExport = formatFunction(secp256k1.signatureExport, {\n  encoder\n})\nexport const privateKeyTweakAdd = formatFunction(secp256k1.privateKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const publicKeyTweakAdd = formatFunction(secp256k1.publicKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const verify = formatFunction(secp256k1.verify, {\n  encoder,\n  numParams: 3,\n  results: null\n})\nexport const signature = formatFunction(secp256k1.sign, {\n  encoder,\n  numParams: 2,\n  results: ['signature']\n})\n\nexport const sign = (message: string, privateKey: string) =>\n  signature(message, privateKey)\n    .then(({ signature }) => signature)\n    .then(signatureNormalize)\n    .then(signatureExport)\n","// @flow\n\nimport { networks } from './networkInfo.js'\nimport {\n  publicKeyCreate,\n  sign as Sign,\n  verify as Verify\n} from '../../src/utils/secp256k1.js'\n\nexport const fromWIF = (\n  wif: string,\n  network: string = 'main'\n): { privateKey: string, compress: boolean } => {\n  const { prefix, decoder } = networks[network].wif\n  const keyHex = decoder.decode(wif)\n  if (parseInt(keyHex.slice(0, 2), 16) !== prefix) {\n    throw new Error(\n      `Unknown key prefix ${keyHex.slice(0, 2)} for network ${network}`\n    )\n  }\n  const privateKey = keyHex.slice(2, 66)\n  let compress = false\n  if (keyHex.length >= 68) {\n    if (parseInt(keyHex.slice(66, 68), 16) !== 1) {\n      throw new Error(`Unknown compression flag ${keyHex.slice(66, 68)}`)\n    }\n    compress = true\n  }\n  return { privateKey, compress }\n}\n\nexport const toWIF = (\n  privateKey: string,\n  network: string = 'main',\n  compress: boolean = true\n): string => {\n  if (privateKey.length !== 64) throw new Error(`Wrong key length`)\n  const { prefix, decoder } = networks[network].wif\n  const prefixStr = prefix.toString(16)\n  const compressFlag = compress ? '01' : ''\n  const hexKey = `${prefixStr}${privateKey}${compressFlag}`\n  return decoder.encode(hexKey)\n}\n\nexport const toPublic = async (\n  privateKey: string,\n  compress: boolean = true\n): Promise<string> => publicKeyCreate(privateKey, compress)\n\nexport const sign = async (privateKey: string, msg: string): Promise<string> => Sign(msg, privateKey)\n\nexport const verify = async (\n  msg: string,\n  signature: string,\n  publicKey?: string,\n  privateKey?: string\n): Promise<Boolean> => {\n  if (!publicKey) {\n    if (!privateKey) throw new Error('Cannot verify without keys.')\n    publicKey = await publicKeyCreate(privateKey, true)\n  }\n  const verified = await Verify(msg, signature, publicKey)\n  return verified\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { fromWIF, toPublic, toWIF } from '../../src/core/privateKey.js'\n\nimport keys from './fixtures.json'\n\nconst network = 'main'\n\ndescribe('Testing HD Key', function () {\n  keys.forEach(test => {\n    it(`Creating Private Key from WIF ${test[0]}`, function () {\n      const wif = test[0]\n      const { privateKey, compress } = fromWIF(wif, network)\n      assert.equal(compress, test[1])\n      assert.equal(privateKey, test[2])\n    })\n\n    it(`Creating Public Key from Private Key ${test[1]}`, async function () {\n      const compress = test[1]\n      const privateKey = test[2]\n      const publicKey = await toPublic(privateKey, compress)\n      assert.equal(publicKey, test[3])\n    })\n\n    it(`Creating WIF from from Private Key ${test[1]}`, function () {\n      const compress = test[1]\n      const privateKey = test[2]\n      const wif = toWIF(privateKey, network, compress)\n      assert.equal(wif, test[0])\n    })\n  })\n})\n","// @flow\n\nimport {\n  type ExtendedKey,\n  type DerivedPoint,\n  type ExtendedData\n} from '../../types/hd.js'\nimport { hash160, sha512Hmac } from '../utils/hash.js'\nimport { getHDSetting } from '../core/networkInfo.js'\n\nexport const HARDENED = 0x80000000\nexport const MAX_INDEX = 0xffffffff\nexport const MAX_DEPTH = 0xff\nexport const TWEAK_OUT_OF_RANGE_ERROR = 'tweak out of range'\nexport const XKEY_DEFAULTS = {\n  childNumber: 0,\n  parentFingerPrint: 0,\n  depth: 0\n}\n\nexport const getTweakPoint = (\n  key: string,\n  chainCode: string,\n  index?: number\n): DerivedPoint => {\n  if (typeof index === 'number') {\n    if (index > MAX_INDEX) throw new Error('Index out of range.')\n    key += index.toString(16).padStart(8, '0')\n  }\n  const hash = sha512Hmac(chainCode, key)\n\n  return {\n    point: hash.slice(0, 64),\n    chainCode: hash.slice(64, 128)\n  }\n}\n\nexport const deriveKey = async (\n  key: string,\n  tweakKey: string,\n  index: number,\n  parentKey: ExtendedKey,\n  keyTweakAdd: (key: string, point: string) => Promise<string>\n): Promise<ExtendedData & { key: string }> => {\n  const { depth, version, publicKey, chainCode } = parentKey\n  // Can't derive more then the maximum depth\n  if (depth >= MAX_DEPTH) throw new Error('Depth too high.')\n  try {\n    const { point, chainCode: childCode } = getTweakPoint(tweakKey, chainCode, index)\n    const childKey = await keyTweakAdd(key, point)\n    const parentFingerPrint = publicKey ? hash160(publicKey).slice(0, 8) : 0\n\n    return {\n      key: childKey,\n      childNumber: index,\n      chainCode: childCode,\n      depth: depth + 1,\n      parentFingerPrint: parseInt(parentFingerPrint, 16),\n      version\n    }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    return deriveKey(key, tweakKey, index + 1, parentKey, keyTweakAdd)\n  }\n}\n\nexport const dataToHex = (data: ExtendedData): string => {\n  return (\n    data.version.toString(16).padStart(8, '0') +\n    data.depth.toString(16).padStart(2, '0') +\n    data.parentFingerPrint.toString(16).padStart(8, '0') +\n    data.childNumber.toString(16).padStart(8, '0') +\n    data.chainCode\n  )\n}\n\nexport const dataFromHex = (keyHex: string, network?: string): ExtendedData => {\n  // Check the entire hex length\n  if (keyHex.length !== 156) throw new Error('Wrong key length')\n\n  // Check that the key prefix matches the network's prefix if given a network\n  const version = parseInt(keyHex.slice(0, 8), 16)\n  if (network) {\n    const setting = getHDSetting(version, network)\n    if (!setting) throw new Error('Wrong extended key version for network')\n  }\n  return {\n    version,\n    depth: parseInt(keyHex.slice(9, 10), 16),\n    parentFingerPrint: parseInt(keyHex.slice(10, 18), 16),\n    childNumber: parseInt(keyHex.slice(18, 26), 16),\n    chainCode: keyHex.slice(26, 90)\n  }\n}\n","// @flow\n\nimport { getHDSetting, getDecoder } from '../core/networkInfo.js'\nimport { hash160 } from '../utils/hash.js'\nimport {\n  type ExtendedPrivateKey,\n  type ExtendedPublicKey\n} from '../../types/hd.js'\nimport { getTweakPoint, dataFromHex, dataToHex, XKEY_DEFAULTS, HARDENED, MAX_DEPTH, deriveKey } from './common.js'\nimport { toPublic } from '../core/privateKey.js'\nimport { privateKeyTweakAdd } from '../utils/secp256k1.js'\n\nexport const SEED = '426974636f696e2073656564'\n\nexport const deriveIndex = async (parentKey: ExtendedPrivateKey, index: number): Promise<ExtendedPrivateKey> => {\n  if (!parentKey.publicKey) {\n    parentKey.publicKey = await toPublic(parentKey.privateKey, true)\n  }\n  const { privateKey, publicKey, depth, version } = parentKey\n  // If the index is hardended, set 'key' to be the privateKey, otherwise the publicKey\n  const tweakKey = index < HARDENED ? publicKey : `00${privateKey}`\n  // Can't derive more then the maximum depth\n  if (depth >= MAX_DEPTH) throw new Error('Depth too high.')\n  const child = await deriveKey(privateKey, tweakKey, index, parentKey, privateKeyTweakAdd)\n  const parentFingerPrint = hash160(publicKey).slice(0, 8)\n\n  return {\n    privateKey: child.key,\n    chainCode: child.chainCode,\n    childNumber: child.childNumber,\n    parentFingerPrint: parseInt(parentFingerPrint, 16),\n    version,\n    depth: depth + 1\n  }\n}\n\nexport const fromKey = (key: $Shape<ExtendedPrivateKey>, network?: string): ExtendedPrivateKey => {\n  if (!key.chainCode) return fromSeed(key.privateKey)\n  const xKey = { ...XKEY_DEFAULTS, ...key }\n  if (!xKey.version) {\n    const { xpriv: { prefix } } = getHDSetting('xprv', network)\n    xKey.version = prefix\n  }\n  return xKey\n}\n\nexport const fromSeed = (\n  seed: string,\n  network?: string,\n  version: string = 'xprv'\n): ExtendedPrivateKey => {\n  const { point: privateKey, chainCode } = getTweakPoint(seed, SEED)\n  const { xpriv: { prefix } } = getHDSetting(version, network)\n  return fromKey({\n    privateKey,\n    chainCode,\n    version: prefix\n  }, network)\n}\n\nexport const fromHex = (keyHex: string, network?: string): ExtendedPrivateKey => {\n  // Get the byte which tells us what type of key we're expecting\n  const headerByte = parseInt(keyHex.slice(90, 92), 16)\n  if (headerByte !== 0) throw new Error('Wrong private key header')\n\n  return {\n    privateKey: keyHex.slice(92, 156),\n    ...dataFromHex(keyHex, network)\n  }\n}\n\nexport const toHex = (key: ExtendedPrivateKey): string => {\n  if (key.privateKey.length !== 64) throw new Error('Wrong private key length')\n  return dataToHex(key) + `00${key.privateKey}`\n}\n\nexport const fromString = (\n  hdKey: string,\n  network: string = 'main'\n): ExtendedPrivateKey => {\n  const keyHex = getDecoder(network, hdKey.slice(0, 4)).decode(hdKey)\n  return fromHex(keyHex, network)\n}\n\nexport const toString = (\n  hdKey: ExtendedPrivateKey,\n  network: string = 'main'\n): string => getDecoder(network, hdKey.version).encode(toHex(hdKey))\n\nexport const toXPub = async (hdKey: ExtendedPrivateKey, network?: string): Promise<ExtendedPublicKey> => {\n  const { privateKey, ...rest } = hdKey\n  const { xpub: { prefix } } = getHDSetting(hdKey.version, network)\n  let { publicKey } = hdKey\n  if (!publicKey) publicKey = await toPublic(privateKey, true)\n\n  const result = {\n    ...rest,\n    version: prefix,\n    publicKey\n  }\n  return result\n}\n","// @flow\n\nimport { getDecoder, getHDSetting } from '../core/networkInfo.js'\nimport { dataFromHex, dataToHex, XKEY_DEFAULTS, HARDENED, MAX_DEPTH, deriveKey } from './common.js'\nimport { hash160 } from '../utils/hash.js'\nimport { publicKeyTweakAdd } from '../utils/secp256k1.js'\nimport { toXPub } from './private.js'\nimport { type ExtendedPublicKey } from '../../types/hd.js'\n\nexport const deriveIndex = async (parentKey: ExtendedPublicKey, index: number): Promise<ExtendedPublicKey> => {\n  if (index >= HARDENED) throw new Error('Cannot derive hardened index from a public key')\n  const { publicKey, version, depth } = parentKey\n\n  // Can't derive more then the maximum depth\n  if (depth >= MAX_DEPTH) throw new Error('Depth too high.')\n  const child = await deriveKey(publicKey, publicKey, index, parentKey, publicKeyTweakAdd)\n  const parentFingerPrint = hash160(publicKey).slice(0, 8)\n\n  return {\n    publicKey: child.key,\n    chainCode: child.chainCode,\n    childNumber: child.childNumber,\n    parentFingerPrint: parseInt(parentFingerPrint, 16),\n    version,\n    depth: depth + 1\n  }\n}\n\nexport const fromKey = (key: $Shape<ExtendedPublicKey>, network?: string): ExtendedPublicKey => {\n  const xKey = { ...XKEY_DEFAULTS, ...key }\n  if (!xKey.version) {\n    const { xpub: { prefix } } = getHDSetting('xpub', network)\n    xKey.version = prefix\n  }\n  return xKey\n}\n\nexport const fromHex = (keyHex: string, network?: string): ExtendedPublicKey => {\n  // Get the byte which tells us what type of key we're expecting\n  const headerByte = parseInt(keyHex.slice(90, 92), 16)\n  if (headerByte !== 2 && headerByte !== 3) throw new Error('Wrong public key header')\n\n  return {\n    publicKey: keyHex.slice(90, 156),\n    ...dataFromHex(keyHex, network)\n  }\n}\n\nexport const toHex = (key: ExtendedPublicKey): string =>\n  dataToHex(key) + key.publicKey\n\nexport const fromString = (\n  hdKey: string,\n  network: string = 'main'\n): ExtendedPublicKey => {\n  const keyHex = getDecoder(network, hdKey.slice(0, 4)).decode(hdKey)\n  return fromHex(keyHex, network)\n}\n\nexport const toString = (\n  hdKey: ExtendedPublicKey,\n  network: string = 'main'\n): string => getDecoder(network, hdKey.version).encode(toHex(hdKey))\n\nexport const fromXPriv = toXPub\n","// @flow\n\nimport { type HDPath, type Bip32Path, type Bip44Path } from '../../types/hd.js'\nimport { HARDENED, MAX_INDEX } from './common.js'\nimport { networks } from '../core/networkInfo.js'\n\nexport const parseToken = (token: string): number => {\n  // Check for hardened flag\n  const hardened = token[token.length - 1] === '\\''\n  // If hardened, we need to add the HARDENED param to the token\n  const num = hardened\n    ? parseInt(token.slice(0, -1)) + HARDENED\n    : parseInt(token)\n  return num\n}\n\nexport const stringifyToken = (token: number, harden: boolean = false): string => {\n  if (token >= HARDENED) {\n    harden = true\n    token = token - HARDENED\n  }\n  return harden ? `${token}'` : `${token}`\n}\n\nexport const verify = (index: string | Array<string>): boolean => {\n  // If it's an array, check each index and return true only if non failed\n  if (Array.isArray(index)) return !!index.map(verify)\n  // If it's a full path, split it then check\n  if (index.includes('/')) return verify(index.split('\\''))\n  // Return true if it's the master index\n  if (index === 'm') return true\n  if (parseToken(index) > MAX_INDEX) throw new Error(`Index out of range: ${index}`)\n  return true\n}\n\nexport const fromString = (path: string): Array<string> => {\n  try {\n    const pathArr = path.split('/')\n    verify(pathArr)\n    return pathArr\n  } catch (e) {\n    e.message = `Bad path: ${path}\\n\\t${e.message}`\n    throw e\n  }\n}\n\nexport const toString = (path: Array<string>): string => {\n  try {\n    verify(path)\n    return path.join('/')\n  } catch (e) {\n    e.message = `Bad path: ${JSON.stringify(path)}\\n\\t${e.message}`\n    throw e\n  }\n}\n\nexport const parse = (path: string): Array<number> => {\n  const pathArr = fromString(path)\n  if (pathArr[0] === 'm') pathArr.shift()\n  return pathArr.map(parseToken)\n}\n\nexport const Bip32 = {\n  toString: ({ account, chain, index }: Bip32Path): string => {\n    if (chain !== 0 && chain !== 1) throw new Error('Unknown chain')\n    return toString([\n      'm',\n      stringifyToken(account),\n      stringifyToken(chain),\n      stringifyToken(index)\n    ])\n  },\n  fromString: (path: string): Bip32Path => {\n    const pathArr = fromString(path)\n    if (pathArr.length !== 4) throw new Error('Unknown path depth')\n    if (pathArr[0] !== 'm') throw new Error('Unknown path header')\n    const chain = parseToken(pathArr[2])\n    if (chain !== 0 && chain !== 1) throw new Error('Unknown chain')\n    return {\n      account: parseToken(pathArr[1]),\n      index: parseToken(pathArr[3]),\n      chain\n    }\n  }\n}\n\nexport const Bip44 = {\n  toString: ({ purpose, coinType, account, change, index }: Bip44Path): string => {\n    if (change !== 0 && change !== 1) throw new Error('Unknown chain')\n    if (index >= HARDENED) throw new Error(`Index should be smaller then ${HARDENED}`)\n    return toString([\n      'm',\n      stringifyToken(purpose, true),\n      stringifyToken(coinType, true),\n      stringifyToken(account, true),\n      stringifyToken(change),\n      stringifyToken(index)\n    ])\n  },\n  fromString: (path: string): Bip44Path => {\n    const pathArr = fromString(path)\n    if (pathArr.length !== 6) throw new Error('Unknown path depth')\n    if (pathArr[0] !== 'm') throw new Error('Unknown path header')\n    const purpose = parseToken(pathArr[1])\n    if (purpose < HARDENED) throw new Error('Purpose has to be hardened')\n    const coinType = parseToken(pathArr[2])\n    if (coinType < HARDENED) throw new Error('Coin Type has to be hardened')\n    const account = parseToken(pathArr[3])\n    if (account < HARDENED) throw new Error('Account has to be hardened')\n    const change = parseToken(pathArr[4])\n    if (change !== 0 && change !== 1) throw new Error('Unknown chain')\n    const index = parseToken(pathArr[5])\n    if (index >= HARDENED) throw new Error('Index should not be hardened')\n    return { purpose, coinType, account, change, index }\n  }\n}\n\nexport const createPath = (\n  account: number = 0,\n  parent: HDPath = { path: ['m'] },\n  hardened?: boolean\n): HDPath => {\n  const { chain = 'external', scriptType = 'P2PKH' } = parent\n\n  const accountStr = `${account}${hardened ? \"'\" : ''}`\n  const index = chain === 'external' ? '0' : '1'\n  const path = [...parent.path, accountStr, index]\n\n  return { path, chain, scriptType }\n}\n\nexport const createPaths = (\n  purpose?: number | Array<number>,\n  coinType: number = 0,\n  account: number = 0,\n  network: string = 'main'\n): Array<HDPath> => {\n  if (Array.isArray(purpose)) {\n    const paths = []\n    for (const p of purpose) {\n      paths.push(...createPaths(p, coinType, account, network))\n    }\n    return paths\n  }\n\n  const { HDPaths, DefaultHDPath } = networks[network]\n  if (!purpose) purpose = DefaultHDPath\n\n  if (purpose === 32) return [createPath(account)]\n\n  const pathSettings = HDPaths[`${purpose}`]\n  if (!pathSettings) throw new Error(`Unknown derivation purpose ${purpose}`)\n\n  const { scriptType } = pathSettings\n  const path = ['m', `${purpose}'`, `${coinType || 0}'`]\n  const hdPath = { path, scriptType }\n  const hdPathInt = { ...hdPath, chain: 'internal' }\n\n  return [\n    createPath(account, hdPath, true),\n    createPath(account, hdPathInt, true)\n  ]\n}\n","// @flow\n\nimport {\n  type ExtendedKey,\n  type HDKeyPair,\n  type HDPath,\n  type Index,\n  type Path\n} from '../../types/hd.js'\n\nimport * as Private from './private.js'\nimport * as Public from './public.js'\nimport { HARDENED } from './common.js'\nimport { parseToken } from './path.js'\n\nexport const fromSeed = async (\n  seed: string,\n  network?: string\n): Promise<HDKeyPair> => {\n  const masterKeyPair = await Private.fromSeed(seed)\n  return {\n    ...masterKeyPair,\n    index: masterKeyPair.childNumber,\n    hardened: false,\n    path: ['m'],\n    children: {}\n  }\n}\n\nexport const fromExtendedKey = (\n  keyPair: ExtendedKey,\n  hdPath?: HDPath\n): HDKeyPair => {\n  const hardened = keyPair.childNumber >= HARDENED\n  const { path: parentPath = [] } = hdPath || {}\n  let indexStr = 'm'\n\n  const path = [...parentPath]\n  if (keyPair.depth) {\n    const adjIndex = hardened ? keyPair.childNumber - HARDENED : keyPair.childNumber\n    indexStr = `${adjIndex}${hardened ? \"'\" : ''}`\n  }\n\n  if (path[0] !== 'm') path.unshift('m')\n  if (path.length === keyPair.depth) {\n    path.push(indexStr)\n  }\n  if (path.length !== keyPair.depth + 1) {\n    throw new Error('Wrong path depth for key')\n  }\n  if (path[path.length - 1] !== indexStr) {\n    throw new Error('Wrong index for key')\n  }\n\n  const hdKey: HDKeyPair = { ...keyPair, path, hardened, children: {} }\n  const { scriptType, chain } = hdPath || {}\n  if (scriptType) hdKey.scriptType = scriptType\n  if (chain) hdKey.chain = chain\n\n  return hdKey\n}\n\nexport const fromIndex = async (\n  parentKey: HDKeyPair,\n  index: Index,\n  network?: string\n): Promise<HDKeyPair> => {\n  let child\n  const indexNum = parseToken(index)\n  if (parentKey.privateKey) {\n    child = await Private.deriveIndex({ ...parentKey }, indexNum)\n  } else {\n    child = await Public.deriveIndex({ ...parentKey }, indexNum)\n  }\n\n  const childHDPath = {\n    ...parentKey,\n    path: [...parentKey.path, index]\n  }\n  // Create an HD key from the ExtendedKey\n  return fromExtendedKey(child, childHDPath)\n}\n\nexport const fromPath = async (\n  parentKeys: HDKeyPair,\n  hdPath: HDPath,\n  network?: string\n): Promise<HDKeyPair> => {\n  // Get the deepest possible parent for this key\n  const parent = getParentKey(parentKeys, hdPath.path)\n  // Set the starting derivation key to be the parent key from before\n  let childHDKey = parent.key\n\n  while (parent.path.length) {\n    // Get next child key\n    const index = parent.path.shift()\n    const childKey = await fromIndex(childHDKey, index, network)\n\n    // Add the new key to the current parent key and change the pointer\n    childHDKey.children[index] = childKey\n    childHDKey = childKey\n  }\n\n  // Set the scriptType and chain for the deepest path\n  childHDKey.scriptType = hdPath.scriptType || 'P2PKH'\n  childHDKey.chain = hdPath.chain || 'external'\n\n  return parentKeys\n}\n\nexport const fromPaths = async (\n  parentKey: HDKeyPair | string,\n  hdPaths: Array<HDPath>,\n  network?: string\n): Promise<HDKeyPair> => {\n  // If we get a seed create a master hd key from it\n  if (typeof parentKey === 'string') {\n    parentKey = await fromSeed(parentKey, network)\n  }\n\n  // Create All missing key paths\n  for (const hdPath of hdPaths) {\n    parentKey = await fromPath(parentKey, hdPath)\n  }\n\n  return parentKey\n}\n\nexport const fromString = (\n  extendedKey: string,\n  hdPath?: HDPath,\n  network?: string\n): HDKeyPair => {\n  let xKey\n  try {\n    xKey = Private.fromString(extendedKey, network)\n  } catch (e) {\n    xKey = Public.fromString(extendedKey, network)\n  }\n  return fromExtendedKey(xKey, hdPath)\n}\n\nexport const getParentKey = (\n  parentKey: HDKeyPair,\n  path: Path\n): { key: HDKeyPair, path: Path } => {\n  const tempPath = [...path]\n  tempPath.shift()\n  while (parentKey.children[tempPath[0]] && tempPath.length) {\n    parentKey = parentKey.children[tempPath.shift()]\n  }\n  return { key: parentKey, path: tempPath }\n}\n\nexport const getKey = (parentKey: HDKeyPair, path: Path): HDKeyPair | null => {\n  const tempPath = [...path]\n  tempPath.shift()\n  while (parentKey && tempPath.length) {\n    parentKey = parentKey.children[tempPath.shift()]\n  }\n  return parentKey\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as HDKey from '../../src/hd/hdKey.js'\nimport * as Private from '../../src/hd/private.js'\nimport * as Public from '../../src/hd/public.js'\nimport fixtures from './fixtures/hdKey.json'\n\nconst HDKeyFixtures = fixtures\nconst network = 'main'\n\ndescribe('Testing HD Key', function () {\n  HDKeyFixtures.fromSeed.forEach(test => {\n    it(`Creating HD key from phrase ${test[0]}`, function () {\n      const childKey = Private.fromSeed(test[1])\n      const xkey = Private.toString(childKey)\n      assert.deepEqual(xkey, test[2])\n    })\n  })\n  HDKeyFixtures.fromString.forEach(test => {\n    it(`Creating HD key from xkey ${test[0]} with path ${test[1]}`, function () {\n      const opts = {}\n      if (test[1]) opts.path = test[1].split('/')\n      const hdKey = HDKey.fromString(test[0], opts)\n      assert.equal(hdKey.hardened, test[2])\n      assert.equal(hdKey.path.join('/'), test[3])\n    })\n  })\n  HDKeyFixtures.fromStringErrors.forEach(test => {\n    it(`Error on Creating HD key with error type ${test[2]}`, function () {\n      try {\n        HDKey.fromString(test[0], { path: test[1].split('/') })\n      } catch (e) {\n        assert.equal(e.message, test[2])\n      }\n    })\n  })\n  HDKeyFixtures.fromPath.forEach(test => {\n    it(`Deriving HD key from xkey ${test[0]} with path ${\n      test[1]\n    }`, async function () {\n      const path = test[1].split('/')\n      const parentKey = HDKey.fromString(test[0])\n      let hdKey = await HDKey.fromPath(parentKey, { path })\n      path.shift()\n      let testIndex = 2\n      // console.log('Parent - hdKey', hdKey)\n      while (path.length) {\n        const index = path.shift()\n        hdKey = hdKey.children[index]\n        // console.log('Child - hdKey', hdKey)\n        const xprivkey = Private.toString(hdKey, network)\n        // console.log('Child - xprivkey', xprivkey)\n        const publicKey = await Private.toXPub(hdKey, network)\n        const xpubkey = Public.toString(publicKey, network)\n        // console.log('Child - xpubkey', xpubkey)\n        assert.equal(xprivkey, test[testIndex][0], 'xpriv')\n        assert.equal(xpubkey, test[testIndex][1], 'xpub')\n        testIndex++\n      }\n    })\n  })\n})\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as HDKey from '../../src/hd/hdKey.js'\nimport * as Private from '../../src/hd/private.js'\nimport * as Public from '../../src/hd/public.js'\nimport { createPaths } from '../../src/hd/path.js'\nimport fixtures from './fixtures/path.json'\n\nconst network = 'main'\n\ndescribe('Testing Bip44 HD Key path derivation', function () {\n  fixtures.createPaths.forEach(test => {\n    it(`Deriving HD key ${test[0]} from HD Settings ${\n      test[3]\n    }`, async function () {\n      const parentKey = HDKey.fromString(test[0])\n\n      let account = 0\n      let coinType = 0\n      if (test[1]) {\n        account = test[1][0]\n        coinType = test[1][1]\n      }\n      const hdPaths = createPaths(test[2], coinType, account, 'bitcoin')\n      const hdKey = await HDKey.fromPaths(parentKey, hdPaths, network)\n      let testIndex = 3\n      for (const hdPath of hdPaths) {\n        const key: any = HDKey.getKey(hdKey, hdPath.path)\n        if (!key) throw new Error('No Key')\n\n        const xprivkey = Private.toString(key, network)\n        const pubKey = await Private.toXPub(key)\n        const xpubkey = Public.toString(pubKey, network)\n        assert.equal(xprivkey, test[testIndex++], 'xpriv')\n        assert.equal(xpubkey, test[testIndex++], 'xpub')\n      }\n    })\n  })\n})\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as Private from '../../src/hd/private.js'\nimport fixtures from './fixtures/private.json'\n\nconst { network } = fixtures\n\ndescribe('Testing HD Private Key', function () {\n  fixtures.string.forEach(test => {\n    const base58Key = test[0]\n    const privateKey = {\n      privateKey: test[1],\n      version: test[2],\n      depth: test[3],\n      parentFingerPrint: test[4],\n      childNumber: test[5],\n      chainCode: test[6]\n    }\n\n    it(`Extended key from string: ${test[0]}`, function () {\n      const resultedXkey = Private.fromString(base58Key, network)\n      assert.deepEqual(resultedXkey, privateKey)\n    })\n\n    it(`Extended key to string: ${test[1]}`, function () {\n      const resultedBase58Key = Private.toString(privateKey, network)\n      assert.equal(resultedBase58Key, base58Key)\n    })\n  })\n\n  fixtures.derive.forEach(test => {\n    it(`Deriving key ${test[0]} for index ${test[2]}`, async function () {\n      const privateKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const publicKey = test[6]\n      const expectedChildKey = {\n        privateKey: test[3],\n        chainCode: test[4],\n        childNumber: test[5]\n      }\n      const xKey = Private.fromKey({ privateKey, chainCode, publicKey })\n      const childKey = await Private.deriveIndex(xKey, index)\n      assert.deepEqual({\n        privateKey: childKey.privateKey,\n        chainCode: childKey.chainCode,\n        childNumber: childKey.childNumber\n      }, expectedChildKey)\n    })\n  })\n})\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as Public from '../../src/hd/public.js'\nimport fixtures from './fixtures/public.json'\n\nconst { network } = fixtures\n\ndescribe('Testing HD Public Key', function () {\n  fixtures.string.forEach(test => {\n    const base58Key = test[0]\n    const publicKey = {\n      publicKey: test[1],\n      version: test[2],\n      depth: test[3],\n      parentFingerPrint: test[4],\n      childNumber: test[5],\n      chainCode: test[6]\n    }\n\n    it(`Extended key from string: ${test[0]}`, function () {\n      const resultedXkey = Public.fromString(base58Key, network)\n      assert.deepEqual(resultedXkey, publicKey)\n    })\n\n    it(`Extended key to string: ${test[1]}`, function () {\n      const resultedBase58Key = Public.toString(publicKey, network)\n      assert.equal(resultedBase58Key, base58Key)\n    })\n  })\n\n  fixtures.derive.forEach(test => {\n    it(`Deriving key ${test[0]} for index ${test[2]}`, async function () {\n      const publicKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const expectedChildKey = {\n        publicKey: test[3],\n        chainCode: test[4],\n        childNumber: test[5]\n      }\n      const xKey = Public.fromKey({ publicKey, chainCode })\n      const childKey = await Public.deriveIndex(xKey, index)\n      assert.deepEqual({\n        publicKey: childKey.publicKey,\n        chainCode: childKey.chainCode,\n        childNumber: childKey.childNumber\n      }, expectedChildKey)\n    })\n  })\n})\n","// @flow\n\nimport babel from 'rollup-plugin-babel'\nimport flowEntry from 'rollup-plugin-flow-entry'\nimport json from 'rollup-plugin-json'\n\nimport packageJson from './package.json'\n\nexport default {\n  input: './index.js',\n  external: [\n    ...Object.keys(packageJson.dependencies),\n    ...Object.keys(packageJson.devDependencies),\n    'bindings',\n    'elliptic'\n  ],\n  output: [\n    { file: packageJson.main, format: 'cjs', sourcemap: true },\n    { file: packageJson.module, format: 'es', sourcemap: true }\n  ],\n  plugins: [\n    json(),\n    babel({\n      babelrc: false,\n      presets: ['@babel/preset-flow'],\n      plugins: ['@babel/plugin-proposal-object-rest-spread']\n    }),\n    flowEntry()\n  ]\n}\n","import babel from 'rollup-plugin-babel'\nimport json from 'rollup-plugin-json'\nimport multiEntry from 'rollup-plugin-multi-entry'\n\nimport config from '../rollup.config.js'\n\nconst babelOptions = {\n  babelrc: false,\n  presets: ['@babel/preset-flow'],\n  plugins: ['@babel/plugin-proposal-object-rest-spread']\n}\n\nexport default {\n  external: config.external,\n  input: './test/**/*.js',\n  output: [\n    { file: 'build/tests.cjs.js', format: 'cjs', sourcemap: true },\n    { file: 'build/tests.js', format: 'es', sourcemap: true }\n  ],\n  plugins: [multiEntry(), json(), babel(babelOptions)]\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { base } from '../../src/utils/base.js'\nimport { sha512Hmac } from '../../src/utils/hash.js'\nimport fixtures from './fixtures/base.json'\n\nconst data =\n  '00ab0063a7ea84d7c5f4a9ad8690c69b80a2d650343fbc9266b2d73c7b26bb2cc780000020'\nconst key = '485efe44bc445946b58ba03e8da75d5cf44fc9196eaa88204667629c4e04c38d'\nconst res =\n  '405fcc33d3f409f16571e19bd27053cd1d05e74df6eba0dc93c4c0a91599052429203b410e284513e14f67287843f91875bf69986f9cebf7037e79b0b13bbdbc'\n\nconst hash = sha512Hmac(key, data)\nassert.equal(hash, res)\n\nfor (const fixture in fixtures) {\n  describe(`Testing base ${fixture}`, function () {\n    const fixtureBase = base[fixture].check\n\n    fixtures[fixture].valid.forEach(({ string, payload }) => {\n      it(`Decode valid string: ${string}`, async function () {\n        const resultedPaylod = fixtureBase.decode(string)\n        assert.equal(resultedPaylod, payload)\n      })\n      it(`Encode valid payload: ${payload}`, async function () {\n        const resultedString = fixtureBase.encode(payload)\n        assert.equal(resultedString, string)\n      })\n    })\n\n    fixtures[fixture].invalid.forEach(({ string, exception }) => {\n      it(`Test invalid string: ${string}`, async function () {\n        try {\n          fixtureBase.decode(string)\n        } catch (e) {\n          assert.equal(e.message, exception)\n        }\n      })\n    })\n  })\n}\n","export const jsonObj = {\n  alpha: 1,\n  bravo: [1, 2, 3],\n  charlie: { delta: 1 },\n  india: {\n    kilo: 4,\n    lima: 4\n  },\n  uniform: {\n    kilo: 4,\n    lima: 4\n  },\n  echo: {\n    foxtrot: [1, 2, 3],\n    golf: {\n      india: {\n        kilo: 4,\n        lima: 4\n      },\n      juliet: {\n        kilo: 4,\n        lima: 5\n      },\n      mike: [\n        { kilo: 4 },\n        6,\n        { lima: 5 },\n        { lima: 6, kilo: 7 },\n        { charlie: { delta: 1 } },\n        { alpha: 1 },\n        [ 6, { lima: 5 }, 10 ]\n      ],\n      november: 8\n    }\n  }\n}\n\nexport const fixtures = [\n  [ [], [jsonObj] ],\n\n  [ ['$.lima'], [] ],\n\n  [ ['lima'], [] ],\n\n  [ ['$..lima'], [\n    jsonObj['india']['lima'],\n    jsonObj['uniform']['lima'],\n    jsonObj['echo']['golf']['india']['lima'],\n    jsonObj['echo']['golf']['juliet']['lima'],\n    jsonObj['echo']['golf']['mike'][2]['lima'],\n    jsonObj['echo']['golf']['mike'][3]['lima'],\n    jsonObj['echo']['golf']['mike'][6][1]['lima']\n  ] ],\n\n  [ ['$..charlie'], [\n    jsonObj['echo']['golf']['mike'][4]['charlie'],\n    jsonObj['charlie']\n  ] ],\n\n  [ ['$.charlie.delta', 1], [\n    jsonObj['charlie']\n  ] ],\n\n  [ ['charlie.delta', 1], [\n    jsonObj['charlie']\n  ] ],\n\n  [ ['echo.golf.india.kilo', 4], [\n    jsonObj['echo']['golf']['india']\n  ] ],\n\n  [ ['$.lima', 1], [] ],\n\n  [ ['lima', 1], [] ],\n\n  [ ['$..alpha', 1], [\n    jsonObj['echo']['golf']['mike'][5],\n    jsonObj\n  ] ],\n\n  [ ['$..alpha', 2], [] ],\n\n  [ ['$..charlie', 1], [] ],\n\n  [ ['$..delta', 1], [\n    jsonObj['charlie'],\n    jsonObj['echo']['golf']['mike'][4]['charlie']\n  ] ],\n\n  [ ['$..charlie.delta', 1], [\n    jsonObj['charlie'],\n    jsonObj['echo']['golf']['mike'][4]['charlie']\n  ] ],\n\n  [ ['$..india.kilo', 5], [] ],\n\n  [ ['$..india.lima', 5], [] ],\n\n  [ ['$..echo.golf.india.kilo', 4], [jsonObj['echo']['golf']['india']] ],\n\n  [ ['$..echo.golf.india.kilo', 5], [] ],\n\n  [ ['$..echo.golf.november', 8], [jsonObj['echo']['golf']] ],\n\n  [ ['$..india.kilo', 4], [\n    jsonObj['india'],\n    jsonObj['echo']['golf']['india']\n  ] ],\n\n  [ ['$..lima', 5], [\n    jsonObj['echo']['golf']['juliet'],\n    jsonObj['echo']['golf']['mike'][2],\n    jsonObj['echo']['golf']['mike'][6][1]\n  ] ],\n\n  [ ['$..lima', 4], [\n    jsonObj['india'],\n    jsonObj['uniform'],\n    jsonObj['echo']['golf']['india']\n  ] ],\n\n  [ ['$..kilo', 4], [\n    jsonObj['india'],\n    jsonObj['uniform'],\n    jsonObj['echo']['golf']['india'],\n    jsonObj['echo']['golf']['juliet'],\n    jsonObj['echo']['golf']['mike'][0]\n  ] ],\n\n  [ ['$..golf..delta', 1], [\n    jsonObj['echo']['golf']['mike'][4]['charlie']\n  ] ],\n\n  [ ['$..mike..delta', 1], [\n    jsonObj['echo']['golf']['mike'][4]['charlie']\n  ] ],\n\n  [ ['$..echo.foxtrot', 2], [\n    jsonObj['echo']['foxtrot']\n  ] ],\n\n  [ ['$..bravo', 0], [] ],\n\n  [ ['$..bravo', 1], [jsonObj['bravo']] ],\n\n  [ ['$..bravo'], [\n    jsonObj['bravo']\n  ] ],\n\n  [ ['bravo'], [\n    jsonObj['bravo']\n  ] ],\n\n  [ ['$.bravo'], [\n    jsonObj['bravo']\n  ] ],\n\n  [ ['$.echo.foxtrot'], [\n    jsonObj['echo']['foxtrot']\n  ] ],\n\n  [ ['$..mike'], [\n    jsonObj['echo']['golf']['mike']\n  ] ],\n\n  [ ['$.echo.golf.*'], [\n    jsonObj['echo']['golf']['india'],\n    jsonObj['echo']['golf']['juliet'],\n    jsonObj['echo']['golf']['mike'],\n    jsonObj['echo']['golf']['november']\n  ] ],\n\n  [ ['$.*'], [\n    jsonObj['alpha'],\n    jsonObj['bravo'],\n    jsonObj['charlie'],\n    jsonObj['india'],\n    jsonObj['uniform'],\n    jsonObj['echo']\n  ] ]\n]\n","// @flow\n\nimport {\n  type QueryParams,\n  type RecQueryParams\n} from '../../types/utils'\n\nconst searchRec = (query: RecQueryParams, jsonObj: any, parent: any): Array<any> => {\n  const { value, results, limit, path } = query\n\n  // If jsonObj is undefined or we have enough results we can return\n  if (\n    typeof jsonObj === 'undefined' ||\n    (limit && results.length >= limit)) return results\n\n  // If we ran out of path we check the following possiblities:\n  if (!path.length) {\n    // 1. If there is no value we can just return the object we are on\n    if (value === undefined) results.push(jsonObj)\n    // 2. If the value equals jsonObj, we need to return the parent\n    else if (value === jsonObj) results.push(parent)\n    // 3. If the jsonObj is an array, we need to decend one last time again\n    else if (Array.isArray(jsonObj)) {\n      jsonObj.forEach(c => searchRec(query, c, jsonObj))\n    }\n  } else if (typeof jsonObj === 'object') {\n    // Get a mutable version of path\n    let { path } = query\n\n    // If it's a recursive token, decent into all children\n    // And remove the recursive token from the path array\n    if (!path[0]) {\n      path = path.slice(1)\n      for (const key in jsonObj) {\n        searchRec(query, jsonObj[key], jsonObj)\n      }\n    }\n\n    const childKey = path[0]\n    const childQuery = { ...query, path: path.slice(1) }\n\n    if (childKey === '*') {\n      for (const key in jsonObj) {\n        searchRec(childQuery, jsonObj[key], jsonObj)\n      }\n    } else {\n      // Decent into child based on the first key in path\n      // With jsonObj as the parent and shifted path\n      searchRec(childQuery, jsonObj[childKey], jsonObj)\n    }\n  }\n\n  return results\n}\n\nexport const search = (query: QueryParams | string, jsonObj: any): Array<any> => {\n  if (typeof query === 'string') query = { path: query }\n  const { path: stringPath, ...rest } = query\n  // If nothing was requested, return the current object\n  if (!stringPath) return [jsonObj]\n  // Tokenize the search terms\n  const path = stringPath.split('.')\n  // Remove the root token if exists\n  if (path[0] === '$') path.shift()\n  // Call the recursive search\n  return searchRec({ ...rest, path, results: [] }, jsonObj)\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { search } from '../../src/utils/jsonSearch.js'\nimport { fixtures, jsonObj } from './fixtures/jsonSearch.js'\n\ndescribe('Testing Json Search', function () {\n  fixtures.forEach(([ test, expected ]) => {\n    it(`Testing search with: ${JSON.stringify(test)} and no limit`, function () {\n      const searchParams = {\n        path: test[0],\n        value: test[1]\n      }\n      const results = search(searchParams, jsonObj)\n      assert.deepEqual(results, expected)\n    })\n\n    for (let i = 1; i <= expected.length; i++) {\n      it(`Testing search with: ${JSON.stringify(test)} and limit ${i}`, function () {\n        const searchParams = {\n          path: test[0],\n          value: test[1],\n          limit: i\n        }\n        const results = search(searchParams, jsonObj)\n        assert.deepEqual(results, expected.slice(0, i))\n      })\n    }\n  })\n})\n","// @flow\n\nimport {\n  type LoadFunc,\n  type PersistStatus,\n  type SaveFunc\n} from '../../types/utils.js'\n\nexport const persist = (\n  save: SaveFunc,\n  load: LoadFunc | Object,\n  delay: number = 100,\n  cache: Object = {},\n  data: Object = cache,\n  status: PersistStatus = {}\n) => {\n  return new Proxy((Object.assign(() => save(cache), data): any), {\n    apply: async (target, thisArgs, args) => {\n      const updateCache = newCache => {\n        cache = newCache\n        data = newCache\n        for (const key in target) {\n          if (data[key] === undefined) {\n            delete target[key]\n          }\n        }\n        Object.assign(target, newCache)\n      }\n\n      // Try to load the cache from disk in case it never happend before\n      if (!status.loaded) {\n        const rawData = typeof load === 'function' ? await load() : load\n        updateCache({ ...rawData, ...cache })\n        status.loaded = true\n      }\n\n      // Load/Stop the cache based on the argument\n      if (args && args.length) {\n        if (typeof args[0] === 'object') updateCache({ ...args[0] })\n        else if (args[0] === 'stop') {\n          if (status.saving) {\n            clearTimeout(status.saving)\n            status.saving = null\n          }\n          status.changed = false\n          await Reflect.apply(target, target, [])\n          return\n        }\n      }\n\n      // Stop looping in case nothing changed or we already have a save timer\n      if (!status.changed || status.saving) return\n\n      // If something changed, set flags and call save\n      status.changed = false\n\n      // Set save loop after the desired delay\n      status.saving = setTimeout(() => {\n        if (status.saving) {\n          clearTimeout(status.saving)\n          status.saving = null\n        }\n        Reflect.apply(thisArgs, thisArgs, [])\n      }, delay)\n\n      await Reflect.apply(target, target, [])\n    },\n    set: (target: any, prop: string, value: any, receiver: any) => {\n      // Only update/save if the param actually changed\n      if (data[prop] !== value) {\n        Reflect.set(data, prop, value)\n        Reflect.set(target, prop, value)\n        status.changed = true\n        if (!status.saving) Reflect.apply(receiver, receiver, [])\n      }\n      return true\n    },\n    get: (target: any, prop: string) => {\n      if (prop === 'status') return status\n      // Get the value\n      const value = Reflect.get(data, prop)\n      // Return any non object values\n      if (typeof value !== 'object') return value\n      // Create a proxy from the child to trimgger saves on the top parent\n      return persist(save, load, delay, cache, value, status)\n    }\n  })\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { after, before, describe, it } from 'mocha'\n\nimport { persist } from '../../src/utils/persister.js'\nimport fixtures from './fixtures/persistor.json'\n\nconst createSave = (expected: any, delay: number, cbs: any) => {\n  let saveAttempts = -1\n  let firstSaveTime = 0\n\n  return async cacheData => {\n    if (cbs.stop) return\n    cbs.e = new Error()\n\n    assert.notEqual(cacheData, expected)\n    assert.deepEqual(cacheData, expected)\n\n    saveAttempts++\n    if (!firstSaveTime) firstSaveTime = Date.now()\n    const saveTime = Date.now() - firstSaveTime\n\n    if (delay) {\n      const minDelay = delay * saveAttempts\n      assert.isAtLeast(saveTime, minDelay)\n    }\n\n    cbs.e = null\n    // console.log(saveTime, '- SAVE -', cacheData, saveAttempts)\n  }\n}\n\nconst cbs = {}\n\nfor (const test in fixtures) {\n  const testNum = test.replace('scenario ', '')\n  const { cache, delay, sets } = fixtures[test]\n  const expected = JSON.parse(JSON.stringify(cache || {}))\n  const save = createSave(expected, delay, cbs)\n  const load = testNum !== '1' ? (): Object => expected : cache\n  const persistedCache = persist(save, load, delay)\n\n  describe(`Testing persister for ${test} with delay of ${delay ||\n    100}ms`, function () {\n    this.timeout(0)\n    before('Test using cache as a function', async function () {\n      cbs.stop = false\n      await persistedCache({})\n      await persistedCache(cache)\n    })\n\n    sets.map(([param, value, saveTime], i) => {\n      it(`Set '${param}' to ${value}, after ${saveTime} milliseconds`, function (done) {\n        let child = persistedCache\n        let expectedChild = expected\n\n        param = param.split('.')\n        while (param.length > 1) {\n          const key = param.shift()\n          child = child[key]\n          expectedChild = expectedChild[key]\n        }\n\n        const key = param[0]\n        const interval = !i ? saveTime : saveTime - sets[i - 1][2]\n\n        setTimeout(() => {\n          expectedChild[key] = value\n          child[key] = value\n          assert.equal(expectedChild[key], child[key])\n          done(cbs.e)\n        }, interval)\n      })\n    })\n\n    after('Stop the caceh using cache as a function', async function () {\n      cbs.stop = true\n      await persistedCache('stop')\n    })\n  })\n}\n"],"names":["lazyHandler","activeModule","get","target","prop","receiver","loadedModule","inject","Proxy","args","lazify","unsafeModule","parentModule","injectedModule","loadUnsafe","defaultModule","Object","assign","parentProxy","isHexString","hex","test","toUint8Array","hexString","Error","length","match","bytes","map","byte","parseInt","Uint8Array","fromUint8Array","reduce","str","toString","padStart","hashjs","require","digest","hash","data","uintArray","rawRes","update","resArray","digestHmac","hmac","key","uintKey","hmacHash","sha256","ripemd160","sha512Hmac","sha512","hash256","hash160","ALPHABETS","createCheckSumBase","base","hashFunc","encode","hexStr","checksum","checkHex","slice","decode","baseString","payload","newChecksum","startsWith","createHexEncoder","newBase","a","Buffer","from","check","decoders","alphabet","baseDecoder","basex","bech32","base58","BasePath","scriptType","xpriv","prefix","stringPrefix","decoder","xpub","address","SupportedPaths","main","coinType","wif","HDPaths","Paths","DefaultHDPath","txHash","sigHash","testnet","createInfo","info","newNetwork","set","mainSet","infoSet","Array","isArray","concat","filter","v","i","s","indexOf","createNetworks","newInfos","networks","network","infos","networkType","partialInfo","name","toLowerCase","Networks","getHDSetting","value","e","purpose","hdPath","setting","find","getDecoder","formatFunction","func","opts","numParams","encoder","results","sync","input","output","cps","newCps","p","paramEncoder","encodeResult","res","param","waitResult","params","result","secp256k1","publicKeyCreate","signatureNormalize","signatureExport","privateKeyTweakAdd","publicKeyTweakAdd","verify","signature","sign","fromWIF","keyHex","privateKey","compress","toWIF","prefixStr","compressFlag","hexKey","toPublic","describe","keys","forEach","it","assert","equal","publicKey","HARDENED","MAX_INDEX","MAX_DEPTH","TWEAK_OUT_OF_RANGE_ERROR","XKEY_DEFAULTS","childNumber","parentFingerPrint","depth","getTweakPoint","chainCode","index","point","deriveKey","tweakKey","parentKey","keyTweakAdd","version","childCode","childKey","message","includes","dataToHex","dataFromHex","SEED","deriveIndex","child","fromKey","fromSeed","xKey","seed","fromHex","headerByte","toHex","fromString","hdKey","toXPub","rest","parseToken","token","hardened","num","createPath","account","parent","path","chain","accountStr","createPaths","paths","push","pathSettings","hdPathInt","masterKeyPair","Private","children","fromExtendedKey","keyPair","parentPath","indexStr","adjIndex","unshift","fromIndex","indexNum","Public","childHDPath","fromPath","parentKeys","getParentKey","childHDKey","shift","fromPaths","hdPaths","extendedKey","tempPath","getKey","HDKeyFixtures","fixtures","xkey","deepEqual","split","HDKey","join","fromStringErrors","testIndex","xprivkey","xpubkey","pubKey","string","base58Key","resultedXkey","resultedBase58Key","derive","expectedChildKey","external","packageJson","dependencies","devDependencies","file","format","sourcemap","module","plugins","json","babel","babelrc","presets","flowEntry","babelOptions","config","multiEntry","fixture","fixtureBase","valid","resultedPaylod","resultedString","invalid","exception","jsonObj","alpha","bravo","charlie","delta","india","kilo","lima","uniform","echo","foxtrot","golf","juliet","mike","november","searchRec","query","limit","undefined","c","childQuery","search","stringPath","expected","JSON","stringify","searchParams","persist","save","load","delay","cache","status","apply","thisArgs","updateCache","newCache","loaded","rawData","saving","clearTimeout","changed","Reflect","setTimeout","createSave","cbs","saveAttempts","firstSaveTime","cacheData","stop","notEqual","Date","now","saveTime","minDelay","isAtLeast","testNum","replace","sets","parse","persistedCache","timeout","before","done","expectedChild","interval","after"],"mappings":"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"}