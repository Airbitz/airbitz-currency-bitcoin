{"version":3,"file":"tests.cjs.js","sources":["../src/utils/require.js","../src/utils/uintArray.js","../src/utils/hash.js","../src/utils/base.js","../src/networks/baseInfo.js","../src/networks/bitcoin.js","../src/core/networkInfo.js","../src/utils/formatter.js","../src/utils/secp256k1.js","../src/core/privateKey.js","../test/core/privateKey.js","../src/hd/common.js","../src/utils/utils.js","../src/hd/path.js","../src/hd/xpriv.js","../src/hd/xpub.js","../src/hd/xkey.js","../test/hd/xkey.js","../test/hd/xpriv.js","../test/hd/xpub.js","../rollup.config.js","../test/rollup.config.js","../test/utils/base.js","../test/utils/fixtures/jsonSearch.js","../src/utils/jsonSearch.js","../test/utils/jsonSearch.js","../src/utils/persister.js","../test/utils/persister.js"],"sourcesContent":["const lazyHandler = activeModule => ({\n  get: (target, prop, receiver) => {\n    // If already loaded return the loaded module\n    if (activeModule) return activeModule[prop]\n    // Try to inject the loaded module\n    if (prop === 'inject') {\n      return loadedModule => {\n        activeModule = loadedModule\n        for (const prop in target) {\n          target[prop].inject(activeModule[prop])\n        }\n      }\n    }\n    // Create a new child proxy if this prop not yet exists\n    if (!target[prop]) {\n      target[prop] = new Proxy(function (...args) {\n        if (!activeModule) target()\n        return activeModule[prop](...args)\n      }, lazyHandler())\n    }\n    return target[prop]\n  }\n})\n\nexport const lazify = unsafeModule => {\n  const parentModule = function (injectedModule = {}, loadUnsafe = true) {\n    const defaultModule = loadUnsafe ? unsafeModule() : {}\n    const loadedModule = Object.assign(defaultModule, injectedModule)\n    parentProxy.inject(loadedModule)\n  }\n  const parentProxy = new Proxy(parentModule, lazyHandler())\n  return parentProxy\n}\n","// @flow\n\nexport const isHexString = (hex: string) =>\n  typeof hex === 'string' && /^[0-9a-f]*$/i.test(hex)\n\nexport const toUint8Array = (hexString: string): Uint8Array => {\n  if (!isHexString(hexString)) {\n    throw new Error(`${hexString} is Not a Hex string`)\n  }\n  if (hexString.length % 2 !== 0) hexString = `0${hexString}`\n  const hex = hexString.match(/.{1,2}/g) || []\n  const bytes = hex.map(byte => parseInt(byte, 16))\n  return new Uint8Array(bytes)\n}\n\nexport const fromUint8Array = (bytes: Uint8Array): string =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '')\n","// @flow\n\nimport { type Hashes } from '../../types/utils.js'\nimport { lazify } from './require.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const hashjs: Hashes<Uint8Array> = (lazify(() =>\n  require('hash.js')\n): any)\n\nexport const digest = (hash: Function) => (data: string) => {\n  const uintArray = toUint8Array(data)\n  const rawRes = hash()\n    .update(uintArray)\n    .digest()\n  const resArray = new Uint8Array(rawRes)\n  return fromUint8Array(resArray)\n}\n\nexport const digestHmac = (hmac: Function, hash: Function) => (\n  key: string,\n  data: string\n) => {\n  const uintKey = toUint8Array(key)\n  const hmacHash = () => hmac(hash, uintKey)\n  return digest(hmacHash)(data)\n}\n\nexport const sha256 = digest(hashjs.sha256)\nexport const sha512 = digest(hashjs.sha512)\nexport const ripemd160 = digest(hashjs.ripemd160)\nexport const sha512Hmac = digestHmac(hashjs.hmac, hashjs.sha512)\n\nexport const hash256 = (data: string) => sha256(sha256(data))\nexport const hash160 = (data: string) => ripemd160(sha256(data))\n","// @flow\n\nimport { Buffer } from 'buffer'\n\nimport basex from 'base-x'\n\nimport {\n  type Alphabet,\n  type BaseCheck,\n  type BaseDecoder,\n  type Bases,\n  type HashFunction\n} from '../../types/utils.js'\nimport { hash256 } from './hash.js'\n\n// The default ALPHABETS, the name of the base codec will be the alphabet's length\nexport const ALPHABETS: Array<Alphabet> = [\n  '01',\n  '01234567',\n  '0123456789a',\n  '0123456789abcdef',\n  '0123456789ABCDEFGHJKMNPQRSTVWXYZ',\n  '0123456789abcdefghijklmnopqrstuvwxyz',\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n]\n\nexport const createCheckSumBase = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseDecoder => ({\n  encode: (hexStr: string): string => {\n    const checksum = (hashFunc || hash256)(hexStr)\n    const checkHex = `${hexStr}${checksum.slice(0, 8)}`\n    return base.encode(checkHex)\n  },\n  decode: (baseString: string): string => {\n    const hexStr = base.decode(baseString)\n    const payload = hexStr.slice(0, -8)\n    const newChecksum = (hashFunc || hash256)(payload)\n    const checksum = hexStr.slice(-8)\n    if (newChecksum.startsWith(checksum)) return payload\n    throw new Error('Invalid checksum')\n  }\n})\n\nexport const createHexEncoder = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseCheck => {\n  const newBase = { ...base }\n  const encode: (buf: Buffer) => string = newBase.encode\n  const decode: (str: string) => Buffer = newBase.decode\n  newBase.encode = a => encode(Buffer.from(a, 'hex'))\n  newBase.decode = a => decode(a).toString('hex')\n  return { ...newBase, check: createCheckSumBase(newBase, hashFunc) }\n}\n\nexport const base: Bases = ALPHABETS.reduce((decoders, alphabet) => {\n  const baseDecoder = createHexEncoder(basex(alphabet))\n  return { ...decoders, [alphabet.length]: baseDecoder }\n}, {})\n","// @flow\n\nimport { type NetworkInfo, type HDPathsSetting } from '../../types/core'\nimport { base } from '../utils/base.js'\nimport { hash256 } from '../utils/hash.js'\n\n// TODO - Actually get bech32\nconst bech32 = base['58'].check\nconst base58 = base['58'].check\n\nconst HDPaths: HDPathsSetting = {\n  '32': {\n    scriptType: 'P2PKH',\n    xpriv: { prefix: 0x0488ade4, stringPrefix: 'xprv', decoder: { ...base58, base: 'xprv' } },\n    xpub: { prefix: 0x0488b21e, stringPrefix: 'xpub', decoder: { ...base58, base: 'xpub' } },\n    address: { prefix: 0x80, stringPrefix: '1', decoder: { ...base58, base: '1' } }\n  },\n  '44': {\n    scriptType: 'P2PKH',\n    xpriv: { prefix: 0x0488ade4, stringPrefix: 'xprv', decoder: { ...base58, base: 'xprv' } },\n    xpub: { prefix: 0x0488b21e, stringPrefix: 'xpub', decoder: { ...base58, base: 'xpub' } },\n    address: { prefix: 0x80, stringPrefix: '1', decoder: { ...base58, base: '1' } }\n  },\n  '49': {\n    scriptType: 'P2WPKH-P2SH',\n    xpriv: { prefix: 0x049d7878, stringPrefix: 'yprv', decoder: base58 },\n    xpub: { prefix: 0x049d7cb2, stringPrefix: 'ypub', decoder: base58 },\n    address: { prefix: 0x05, stringPrefix: '3', decoder: base58 }\n  },\n  '84': {\n    scriptType: 'P2WPKH',\n    xpriv: { prefix: 0x04b2430c, stringPrefix: 'zprv', decoder: base58 },\n    xpub: { prefix: 0x04b24746, stringPrefix: 'zpub', decoder: base58 },\n    address: { prefix: -1, stringPrefix: 'bc', decoder: bech32 }\n  }\n}\n\nexport const main: NetworkInfo = {\n  coinType: 0,\n  wif: {\n    prefix: 0x80,\n    stringPrefix: '1',\n    decoder: base['58'].check\n  },\n  HDPaths,\n  DefaultHDPath: 44,\n  txHash: hash256,\n  sigHash: (str: Buffer) => Buffer.from(hash256(str.toString('hex')), 'hex')\n}\n","// @flow\n\nexport const main = { DefaultHDPath: 84 }\n\nexport const testnet = {\n  coinType: 1,\n  wif: 0xef,\n  HDPaths: {\n    '32': {\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0x6f\n    },\n    '44': {\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0x6f\n    },\n    '49': {\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0xc4\n    },\n    '84': {\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 'tb'\n    }\n  }\n}\n","// @flow\nimport { type BaseDecoder } from '../../types/utils.js'\nimport {\n  type HDPathSetting,\n  type NetworkInfo,\n  type NetworkInfos,\n  type NewNetworks\n} from '../../types/core.js'\nimport { main } from '../networks/baseInfo.js'\nimport * as Networks from '../networks/networks.js'\n\nexport const createInfo = (info: $Shape<NetworkInfo>): NetworkInfo => {\n  const newNetwork: NetworkInfo = ({}: any)\n\n  for (const set in main) {\n    const mainSet = main[set]\n    const infoSet = info[set]\n\n    if (Array.isArray(mainSet)) {\n      newNetwork[set] = (infoSet || [])\n        .concat(mainSet)\n        .filter((v, i, s) => s.indexOf(v) === i)\n    } else if (typeof mainSet === 'object') {\n      newNetwork[set] = { ...mainSet, ...(infoSet || {}) }\n    } else if (typeof infoSet !== 'undefined') {\n      newNetwork[set] = infoSet\n    } else newNetwork[set] = mainSet\n  }\n\n  return newNetwork\n}\n\nexport const createNetworks = (newInfos: NewNetworks) => {\n  const networks = { main }\n  for (const network in newInfos) {\n    const infos = newInfos[network]\n    for (const networkType in infos) {\n      const partialInfo = infos[networkType]\n      let name = network\n      if (networkType !== 'main') name += networkType.toLowerCase()\n      networks[name] = createInfo(partialInfo)\n    }\n  }\n  return networks\n}\n\nexport const networks: NetworkInfos = createNetworks(Networks)\n\nexport const addNetworks = (newInfos: NewNetworks) =>\n  Object.assign(networks, createNetworks(newInfos))\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\n// /////////////////\nexport const getHDSetting = (value: any, network?: string): HDPathSetting => {\n  // If no network is specified, check all available networks\n  if (!network) {\n    for (const network in networks) {\n      try {\n        return getHDSetting(value, network)\n      } catch (e) {}\n    }\n    throw new Error('Unknown prefix')\n  }\n\n  const { HDPaths } = networks[network]\n  for (const purpose in HDPaths) {\n    const hdPath = HDPaths[purpose]\n    for (const key in hdPath) {\n      const setting = hdPath[key]\n      // checking if address that has legacy\n      if (Array.isArray(setting)) {\n        return setting.find(\n          ({ prefix, stringPrefix }) =>\n            prefix === value || stringPrefix === value\n        )\n      }\n\n      // checking if xpub, xpriv, or address\n      if (\n        typeof setting === 'object' &&\n        (setting.prefix === value || setting.stringPrefix === value)\n      ) {\n        return hdPath\n      }\n\n      // if scriptType or purpose\n      if (setting === value) return hdPath\n    }\n  }\n  throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n\nexport const getDecoder = (network: string, value: any): BaseDecoder => {\n  const hdPath = getHDSetting(value, network)\n  for (const key in hdPath) {\n    const decoder = hdPath[key]\n\n    if (Array.isArray(decoder)) {\n      return decoder.find(\n        ({ prefix, stringPrefix }) =>\n          prefix === value || stringPrefix === value\n      )\n    }\n\n    if (decoder.prefix === value || decoder.stringPrefix === value) {\n      return decoder.decoder\n    }\n  }\n  throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n","// @flow\n\nimport { type FunctionFormatterOptions } from '../../types/utils.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const formatFunction = (\n  func: Function,\n  opts?: FunctionFormatterOptions = {}\n) => {\n  const { numParams = 1, encoder, results = [], sync } = opts\n  const { input = toUint8Array, output = fromUint8Array } = encoder || {}\n\n  const encode = (i: number, cps = a => a) => {\n    if (!i--) return cps\n    const newCps = (p: any) => {\n      p[i] = input(p[i])\n      return cps(p)\n    }\n    return encode(i, newCps)\n  }\n\n  const paramEncoder = encode(numParams)\n\n  let encodeResult = (res: any) => output(res)\n  if (!results) {\n    encodeResult = (res: any) => res\n  } else if (results.length) {\n    encodeResult = (res: any) => {\n      for (const param of results) {\n        res[param] = output(res[param])\n      }\n      return res\n    }\n  }\n\n  let waitResult = async (res: any) => {\n    res = await res\n    return encodeResult(res)\n  }\n  if (sync) waitResult = (res: any) => encodeResult(res)\n\n  return (...params: any): any => {\n    const result = func(...paramEncoder(params))\n    return waitResult(result)\n  }\n}\n\nexport const formatByteSize = (\n  originalByteSize: number,\n  newByteSize: number,\n  pad: boolean = originalByteSize > newByteSize\n) => (data: Array<number>) => {\n  let acc = 0\n  let bits = 0\n  const ret = []\n  const maxNum = (1 << newByteSize) - 1\n  for (let p = 0; p < data.length; ++p) {\n    const value = data[p]\n    if (value < 0 || value >> originalByteSize !== 0) {\n      throw new Error('Wrong bit value')\n    }\n    acc = (acc << originalByteSize) | value\n    bits += originalByteSize\n    while (bits >= newByteSize) {\n      bits -= newByteSize\n      ret.push((acc >> bits) & maxNum)\n    }\n  }\n  if (pad && bits > 0) {\n    ret.push((acc << (newByteSize - bits)) & maxNum)\n  } else if (\n    bits >= originalByteSize ||\n    (acc << (newByteSize - bits)) & maxNum\n  ) {\n    throw new Error('Wrong bit value')\n  }\n  return ret\n}\n","// @flow\n\nimport { type Secp256k1 } from '../../types/utils.js'\nimport { formatFunction } from './formatter.js'\nimport { lazify } from './require.js'\n\nexport const secp256k1: Secp256k1<Uint8Array> = (lazify(() =>\n  require('secp256k1')\n): any)\n\nconst encoder = {\n  input: a => Buffer.from(a, 'hex'),\n  output: a => a.toString('hex')\n}\n\nexport const publicKeyCreate = formatFunction(secp256k1.publicKeyCreate, {\n  encoder\n})\nexport const signatureNormalize = formatFunction(secp256k1.signatureNormalize, {\n  encoder\n})\nexport const signatureExport = formatFunction(secp256k1.signatureExport, {\n  encoder\n})\nexport const privateKeyTweakAdd = formatFunction(secp256k1.privateKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const publicKeyTweakAdd = formatFunction(secp256k1.publicKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const verify = formatFunction(secp256k1.verify, {\n  encoder,\n  numParams: 3,\n  results: null\n})\nexport const signature = formatFunction(secp256k1.sign, {\n  encoder,\n  numParams: 2,\n  results: ['signature']\n})\n\nexport const sign = (message: string, privateKey: string) =>\n  signature(message, privateKey)\n    .then(({ signature }) => signature)\n    .then(signatureNormalize)\n    .then(signatureExport)\n","// @flow\n\nimport { networks } from './networkInfo.js'\nimport {\n  publicKeyCreate,\n  sign as Sign,\n  verify as Verify\n} from '../../src/utils/secp256k1.js'\n\nexport const fromWIF = (\n  wif: string,\n  network: string = 'main'\n): { privateKey: string, compress: boolean } => {\n  const { prefix, decoder } = networks[network].wif\n  const keyHex = decoder.decode(wif)\n  if (parseInt(keyHex.slice(0, 2), 16) !== prefix) {\n    throw new Error(\n      `Unknown key prefix ${keyHex.slice(0, 2)} for network ${network}`\n    )\n  }\n  const privateKey = keyHex.slice(2, 66)\n  let compress = false\n  if (keyHex.length >= 68) {\n    if (parseInt(keyHex.slice(66, 68), 16) !== 1) {\n      throw new Error(`Unknown compression flag ${keyHex.slice(66, 68)}`)\n    }\n    compress = true\n  }\n  return { privateKey, compress }\n}\n\nexport const toWIF = (\n  privateKey: string,\n  network: string = 'main',\n  compress: boolean = true\n): string => {\n  if (privateKey.length !== 64) throw new Error(`Wrong key length`)\n  const { prefix, decoder } = networks[network].wif\n  const prefixStr = prefix.toString(16)\n  const compressFlag = compress ? '01' : ''\n  const hexKey = `${prefixStr}${privateKey}${compressFlag}`\n  return decoder.encode(hexKey)\n}\n\nexport const fromString = fromWIF\nexport const fromHex = toWIF\n\nexport const toPublic = async (\n  privateKey: string,\n  compress: boolean = true\n): Promise<string> => publicKeyCreate(privateKey, compress)\n\nexport const toSignature = async (privateKey: string, msg: string): Promise<string> => Sign(msg, privateKey)\n\nexport const verify = async (\n  msg: string,\n  signature: string,\n  publicKey?: string,\n  privateKey?: string\n): Promise<Boolean> => {\n  if (!publicKey) {\n    if (!privateKey) throw new Error('Cannot verify without keys.')\n    publicKey = await publicKeyCreate(privateKey, true)\n  }\n  const verified = await Verify(msg, signature, publicKey)\n  return verified\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { fromWIF, toPublic, toWIF } from '../../src/core/privateKey.js'\n\nimport keys from './fixtures.json'\n\nconst network = 'main'\n\ndescribe('Testing HD Key', function () {\n  keys.forEach(test => {\n    it(`Creating Private Key from WIF ${test[0]}`, function () {\n      const wif = test[0]\n      const { privateKey, compress } = fromWIF(wif, network)\n      assert.equal(compress, test[1])\n      assert.equal(privateKey, test[2])\n    })\n\n    it(`Creating Public Key from Private Key ${test[1]}`, async function () {\n      const compress = test[1]\n      const privateKey = test[2]\n      const publicKey = await toPublic(privateKey, compress)\n      assert.equal(publicKey, test[3])\n    })\n\n    it(`Creating WIF from from Private Key ${test[1]}`, function () {\n      const compress = test[1]\n      const privateKey = test[2]\n      const wif = toWIF(privateKey, network, compress)\n      assert.equal(wif, test[0])\n    })\n  })\n})\n","// @flow\n\nimport { type ExtendedData } from '../../types/hd.js'\nimport { getHDSetting } from '../core/networkInfo.js'\n\nexport const HARDENED = 0x80000000\nexport const SEED = '426974636f696e2073656564'\nexport const MAX_INDEX = 0xffffffff\nexport const MAX_DEPTH = 0xff\nexport const TWEAK_OUT_OF_RANGE_ERROR = 'tweak out of range'\nexport const XKEY_DEFAULTS = {\n  childNumber: 0,\n  parentFingerPrint: 0,\n  depth: 0\n}\n\nexport const dataToHex = (data: ExtendedData): string =>\n  data.version.toString(16).padStart(8, '0') +\n  data.depth.toString(16).padStart(2, '0') +\n  data.parentFingerPrint.toString(16).padStart(8, '0') +\n  data.childNumber.toString(16).padStart(8, '0') +\n  data.chainCode\n\nexport const dataFromHex = (keyHex: string, network?: string): ExtendedData => {\n  // Check the entire hex length\n  if (keyHex.length !== 156) throw new Error('Wrong key length')\n\n  // Check that the key prefix matches the network's prefix if given a network\n  const version = parseInt(keyHex.slice(0, 8), 16)\n  if (network) {\n    const setting = getHDSetting(version, network)\n    if (!setting) throw new Error('Wrong extended key version for network')\n  }\n  return {\n    version,\n    depth: parseInt(keyHex.slice(9, 10), 16),\n    parentFingerPrint: parseInt(keyHex.slice(10, 18), 16),\n    childNumber: parseInt(keyHex.slice(18, 26), 16),\n    chainCode: keyHex.slice(26, 90)\n  }\n}\n","// @flow\n\nexport const isNumeric = (str: string) => /^-{0,1}\\d+$/.test(str)\n","// @flow\n\nimport { type HDPath } from '../../types/hd.js'\nimport { HARDENED, MAX_INDEX } from './common.js'\nimport { isNumeric } from '../utils/utils.js'\n\nexport const fromNumber = (index: number, harden: boolean = false): string => {\n  if (index > MAX_INDEX) throw new Error(`Index out of range: ${index}`)\n  // If it's a harden index, we need to set the flag and normalize the index\n  if (index >= HARDENED) {\n    harden = true\n    index = index - HARDENED\n  }\n  return harden ? `${index}'` : `${index}`\n}\n\nexport const toNumber = (index: string): number => {\n  // Check for hardened flag\n  const hardened = index[index.length - 1] === '\\''\n  // If hardened, we need to remove the harden flag\n  if (hardened) index = index.slice(0, -1)\n  // Index must be a number\n  if (!isNumeric(index)) throw new Error(`Index must be a number: ${index}`)\n  let indexNumber = parseInt(index)\n  // If hardened, we need to add the HARDENED param to the index\n  if (hardened) indexNumber += HARDENED\n\n  if (indexNumber > MAX_INDEX) throw new Error(`Index out of range: ${indexNumber}`)\n  return indexNumber\n}\n\nexport const toString = (path: HDPath): string => {\n  try {\n    return 'm/' + path.map(a => fromNumber(a)).join('/')\n  } catch (e) {\n    e.message = `Bad path: ${JSON.stringify(path)}\\n\\t${e.message}`\n    throw e\n  }\n}\n\nexport const fromString = (path: string, root: string = 'm'): HDPath => {\n  try {\n    const pathArr = path.split('/')\n    const pathRoot = pathArr.shift()\n    if (pathRoot !== root) throw new Error(`Unknown path root: '${pathRoot}', expected: '${root}'`)\n    return pathArr.map(toNumber)\n  } catch (e) {\n    e.message = `Bad path: ${path}\\n\\t${e.message}`\n    throw e\n  }\n}\n","// @flow\n\nimport * as API from '../../types/publicAPI.js'\nimport { getHDSetting, getDecoder } from '../core/networkInfo.js'\nimport { type ExtendedPrivateKey } from '../../types/hd.js'\nimport { dataFromHex, dataToHex, XKEY_DEFAULTS, HARDENED, SEED, MAX_INDEX, MAX_DEPTH, TWEAK_OUT_OF_RANGE_ERROR } from './common.js'\nimport { sha512Hmac, hash160 } from '../utils/hash.js'\nimport * as Path from './path.js'\nimport { toPublic as toPublicKey } from '../core/privateKey.js'\nimport { privateKeyTweakAdd } from '../utils/secp256k1.js'\n\nexport const fromXPriv: API.FromXKey<ExtendedPrivateKey> = (key, network) => {\n  const { privateKey, chainCode } = key\n  if (!privateKey) throw new Error('Missing private key')\n  if (!chainCode) return fromSeed(privateKey)\n  const fullKey = { ...XKEY_DEFAULTS, ...key }\n  if (typeof fullKey.version !== 'number') {\n    const { xpriv: { prefix } } = getHDSetting('xprv', network)\n    fullKey.version = prefix\n  }\n  return fullKey\n}\n\nexport const fromSeed: API.FromSeed<ExtendedPrivateKey> = (seed, network, version = 'xprv') => {\n  const hash = sha512Hmac(SEED, seed)\n  const { xpriv: { prefix } } = getHDSetting(version, network)\n  if (typeof prefix !== 'number') throw new Error('')\n  return fromXPriv({\n    privateKey: hash.slice(0, 64),\n    chainCode: hash.slice(64, 128),\n    version: prefix\n  }, network)\n}\n\nexport const fromHex: API.FromHex<ExtendedPrivateKey> = (keyHex, network) => {\n  // Get the byte which tells us what type of key we're expecting\n  const headerByte = parseInt(keyHex.slice(90, 92), 16)\n  if (headerByte !== 0) throw new Error('Wrong private key header')\n\n  return {\n    privateKey: keyHex.slice(92, 156),\n    ...dataFromHex(keyHex, network)\n  }\n}\n\nexport const fromString: API.FromString<ExtendedPrivateKey> = (xKey, network = 'main') => {\n  const keyHex = getDecoder(network, xKey.slice(0, 4)).decode(xKey)\n  return fromHex(keyHex, network)\n}\n\nexport const toIndex: API.ToIndex<ExtendedPrivateKey> = async (key, index, hardended = false) => {\n  try {\n    const { depth, version, privateKey, chainCode } = key\n    if (index > MAX_INDEX) throw new Error('Index out of range.')\n    if (depth >= MAX_DEPTH) throw new Error('Depth too high.')\n    const publicKey = key.publicKey || await toPublicKey(privateKey, true)\n    // If the index is non-hardended, set 'tweakKey' to be the publicKey, otherwise the privateKey\n    let tweakKey = index < HARDENED || hardended ? publicKey : `00${privateKey}`\n    tweakKey += index.toString(16).padStart(8, '0')\n    const hash = sha512Hmac(chainCode, tweakKey)\n\n    const childKey = await privateKeyTweakAdd(privateKey, hash.slice(0, 64))\n    const parentFingerPrint = publicKey ? hash160(publicKey).slice(0, 8) : 0\n\n    return {\n      privateKey: childKey,\n      childNumber: index,\n      chainCode: hash.slice(64, 128),\n      depth: depth + 1,\n      parentFingerPrint: parseInt(parentFingerPrint, 16),\n      version\n    }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    return toIndex(key, index + 1)\n  }\n}\n\nexport const toPath: API.ToPath<ExtendedPrivateKey> = async (key, path) => {\n  if (typeof path === 'string') path = Path.fromString(path)\n  for (const index of path) {\n    key = await toIndex(key, index)\n  }\n  return key\n}\n\nexport const toHex: API.ToHex<ExtendedPrivateKey> = key => {\n  const { privateKey, publicKey, ...rest } = key\n  if (privateKey.length !== 64) throw new Error('Wrong private key length')\n  return dataToHex(rest) + `00${privateKey}`\n}\n\nexport const toString: API.ToString<ExtendedPrivateKey> = (hdKey, network = 'main') =>\n  getDecoder(network, hdKey.version).encode(toHex(hdKey))\n\nexport const toXPub: API.ToXPub<ExtendedPrivateKey> = async (hdKey, network) => {\n  const { privateKey, version, ...rest } = hdKey\n  const { xpub: { prefix } } = getHDSetting(hdKey.version, network)\n  const publicKey = hdKey.publicKey || await toPublicKey(privateKey, true)\n  return { publicKey, version: prefix, ...rest }\n}\n","// @flow\n\nimport * as API from '../../types/publicAPI.js'\nimport { type ExtendedPublicKey } from '../../types/hd.js'\nimport { getDecoder, getHDSetting } from '../core/networkInfo.js'\nimport { dataFromHex, dataToHex, XKEY_DEFAULTS, HARDENED, MAX_INDEX, MAX_DEPTH, TWEAK_OUT_OF_RANGE_ERROR } from './common.js'\nimport { sha512Hmac, hash160 } from '../utils/hash.js'\nimport { publicKeyTweakAdd } from '../utils/secp256k1.js'\nimport * as Path from './path.js'\n\nexport const fromXPub: API.FromXKey<ExtendedPublicKey> = (key, network) => {\n  const { publicKey, chainCode, ...rest } = key\n  if (!publicKey) throw new Error('Missing public key')\n  if (!chainCode) throw new Error('Missing chainCode')\n  const xKey = { ...XKEY_DEFAULTS, publicKey, chainCode, ...rest }\n  if (!xKey.version) {\n    const { xpub: { prefix } } = getHDSetting('xpub', network)\n    xKey.version = prefix\n  }\n  return xKey\n}\n\nexport const fromHex: API.FromHex<ExtendedPublicKey> = (keyHex, network) => {\n  // Get the byte which tells us what type of key we're expecting\n  const headerByte = parseInt(keyHex.slice(90, 92), 16)\n  if (headerByte !== 2 && headerByte !== 3) throw new Error('Wrong public key header')\n\n  return {\n    publicKey: keyHex.slice(90, 156),\n    ...dataFromHex(keyHex, network)\n  }\n}\n\nexport const fromString: API.FromString<ExtendedPublicKey> = (hdKey, network = 'main') => {\n  const keyHex = getDecoder(network, hdKey.slice(0, 4)).decode(hdKey)\n  return fromHex(keyHex, network)\n}\n\nexport const toIndex: API.ToIndex<ExtendedPublicKey> = async (key, index) => {\n  try {\n    const { depth, version, publicKey, chainCode } = key\n    if (index >= HARDENED) throw new Error('Cannot derive hardened index from a public key')\n    if (index > MAX_INDEX) throw new Error('Index out of range.')\n    if (depth >= MAX_DEPTH) throw new Error('Depth too high.')\n\n    const tweakKey = publicKey + index.toString(16).padStart(8, '0')\n    const hash = sha512Hmac(chainCode, tweakKey)\n    const childKey = await publicKeyTweakAdd(publicKey, hash.slice(0, 64))\n    const parentFingerPrint = hash160(publicKey).slice(0, 8)\n\n    return {\n      publicKey: childKey,\n      childNumber: index,\n      chainCode: hash.slice(64, 128),\n      depth: depth + 1,\n      parentFingerPrint: parseInt(parentFingerPrint, 16),\n      version\n    }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    return toIndex(key, index + 1)\n  }\n}\n\nexport const toPath: API.ToPath<ExtendedPublicKey> = async (key, path) => {\n  if (typeof path === 'string') path = Path.fromString(path, 'M')\n  for (const index of path) {\n    key = await toIndex(key, index)\n  }\n  return key\n}\n\nexport const toHex: API.ToHex<ExtendedPublicKey> = ({ publicKey, ...rest }) =>\n  dataToHex(rest) + publicKey\n\nexport const toString: API.ToString<ExtendedPublicKey> = (key, network = 'main') =>\n  getDecoder(network, key.version).encode(toHex(key))\n","// @flow\n\nimport * as API from '../../types/publicAPI.js'\nimport { type ExtendedKey } from '../../types/hd.js'\nimport { getHDSetting } from '../core/networkInfo.js'\nimport * as XPriv from './xpriv.js'\nimport * as XPub from './xpub.js'\n\nexport const fromHex: API.FromHex<ExtendedKey> = (keyHex, network) => {\n  const headerByte = parseInt(keyHex.slice(90, 92), 16)\n  if (headerByte === 0) return XPriv.fromHex(keyHex, network)\n  else if (headerByte === 2 && headerByte === 3) return XPub.fromHex(keyHex, network)\n  throw new Error('Wrong key prefix')\n}\n\nexport const fromString: API.FromString<ExtendedKey> = (xKey, network = 'main') => {\n  const prefixStr = xKey.slice(0, 4)\n  const hdSetting = getHDSetting(prefixStr, network)\n  if (prefixStr === hdSetting.xpriv.stringPrefix) {\n    return XPriv.fromString(xKey, network)\n  }\n  return XPub.fromString(xKey, network)\n}\n\nexport const fromSeed: API.FromSeed<ExtendedKey> = (...a) => XPriv.fromSeed(...a)\n\nconst keySelector = (privType: string, pubType: string = privType) =>\n  (key: ExtendedKey, ...params: any) => {\n    const { privateKey = null, publicKey = null, ...rest } = key\n    if (privateKey) {\n      return XPriv[privType]({ privateKey, ...rest }, ...params)\n    } else if (publicKey) return XPub[pubType]({ publicKey, ...rest }, ...params)\n    throw new Error('Must provide a key')\n  }\n\n// $FlowFixMe\nexport const fromXKey: API.FromXKey<ExtendedKey> = keySelector('fromXPriv', 'fromXPub')\nexport const toIndex: API.ToIndex<ExtendedKey> = keySelector('toIndex')\nexport const toPath: API.ToPath<ExtendedKey> = keySelector('toPath')\nexport const toString: API.ToString<ExtendedKey> = keySelector('toString')\nexport const toXPub: API.ToXPub<ExtendedKey> = keySelector('toXPub', 'fromXPub')\nexport const toHex: API.ToHex<ExtendedKey> = keySelector('toHex')\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as XKey from '../../src/hd/xkey.js'\nimport * as Path from '../../src/hd/path.js'\nimport { HARDENED } from '../../src/hd/common.js'\nimport privateFixures from './fixtures/xpriv.json'\nimport publicFixures from './fixtures/xpub.json'\n\nlet { network } = privateFixures\n\ndescribe('Testing XKey Private Key', function () {\n  privateFixures.fromSeed.forEach(test => {\n    it(`Extended key from seed ${test[1]}`, function () {\n      const childKey = XKey.fromSeed(test[1], network)\n      const xkey = XKey.toString(childKey)\n      assert.deepEqual(xkey, test[2])\n    })\n  })\n\n  privateFixures.string.forEach(test => {\n    const base58Key = test[0]\n    const privateKey = {\n      privateKey: test[1],\n      version: test[2],\n      depth: test[3],\n      parentFingerPrint: test[4],\n      childNumber: test[5],\n      chainCode: test[6]\n    }\n\n    it(`XKey key from string: ${test[0]}`, function () {\n      const resultedXkey = XKey.fromString(base58Key, network)\n      assert.deepEqual(resultedXkey, privateKey)\n    })\n\n    it(`XKey key to string: ${test[1]}`, function () {\n      const resultedBase58Key = XKey.toString(privateKey, network)\n      assert.equal(resultedBase58Key, base58Key)\n    })\n  })\n\n  privateFixures.toIndex.forEach(test => {\n    it(`Deriving key ${test[0]} for index ${test[2]}`, async function () {\n      const privateKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const publicKey = test[6]\n      const expectedChildKey = {\n        privateKey: test[3],\n        chainCode: test[4],\n        childNumber: test[5]\n      }\n      // $FlowFixMe\n      const xKey = XKey.fromXKey({ privateKey, chainCode, publicKey }, network)\n      // $FlowFixMe\n      const childKey = await XKey.toIndex(xKey, index)\n      assert.deepEqual({\n        privateKey: childKey.privateKey,\n        chainCode: childKey.chainCode,\n        childNumber: childKey.childNumber\n      }, expectedChildKey)\n    })\n  })\n\n  privateFixures.toPath1.forEach(test => {\n    it(`Deriving XKey key ${test[0]} from XKey Settings ${\n      test[3]\n    }`, async function () {\n      const xkey = test[0]\n      const parentKey = XKey.fromString(xkey, network)\n\n      let account = 0\n      let coinType = 0\n      let bips = test[2]\n      if (!bips) bips = [84]\n      if (test[1]) {\n        account = test[1][0]\n        coinType = test[1][1]\n      }\n      let testIndex = 3\n\n      const testPath = async (path) => {\n        const hdKey = await XKey.toPath(parentKey, path)\n        const xprivkey = XKey.toString(hdKey, network)\n        const pubKey = await XKey.toXPub(hdKey, network)\n        const xpubkey = XKey.toString(pubKey, network)\n        assert.equal(xprivkey, test[testIndex++], 'xpriv')\n        assert.equal(xpubkey, test[testIndex++], 'xpub')\n      }\n\n      for (const purpose of bips) {\n        if (purpose === 32) {\n          await testPath(['m', `${account}`, 0].join('/'))\n          testIndex -= 2\n          await testPath([account, 0])\n        } else {\n          await testPath(['m', `${purpose}'`, `${coinType}'`, `${account}'`, 0].join('/'))\n          await testPath(['m', `${purpose}'`, `${coinType}'`, `${account}'`, 1].join('/'))\n          testIndex -= 4\n          await testPath([purpose + HARDENED, coinType + HARDENED, account + HARDENED, 0])\n          await testPath([purpose + HARDENED, coinType + HARDENED, account + HARDENED, 1])\n        }\n      }\n    })\n  })\n\n  privateFixures.toPath2.forEach(test => {\n    it(`Deriving XKey key from xkey ${test[0]} with path ${\n      test[1]\n    }`, async function () {\n      const path = Path.fromString(test[1])\n      const parentKey = XKey.fromString(test[0])\n      let testIndex = 2\n      while (path.length) {\n        const hdKey = await XKey.toPath(parentKey, path)\n        const xprivkey = XKey.toString(hdKey, network)\n        const publicKey = await XKey.toXPub(hdKey, network)\n        const xpubkey = XKey.toString(publicKey, network)\n        assert.equal(xprivkey, test[testIndex][0], 'xpriv')\n        assert.equal(xpubkey, test[testIndex][1], 'xpub')\n        path.pop()\n        testIndex++\n      }\n    })\n  })\n})\n\nnetwork = publicFixures.network\n\ndescribe('Testing XKey Public Key', function () {\n  publicFixures.string.forEach(test => {\n    const base58Key = test[0]\n    const publicKey = {\n      publicKey: test[1],\n      version: test[2],\n      depth: test[3],\n      parentFingerPrint: test[4],\n      childNumber: test[5],\n      chainCode: test[6]\n    }\n\n    it(`XKey key from string: ${test[0]}`, function () {\n      const resultedXkey = XKey.fromString(base58Key, network)\n      assert.deepEqual(resultedXkey, publicKey)\n    })\n\n    it(`XKey key to string: ${test[1]}`, function () {\n      const resultedBase58Key = XKey.toString(publicKey, network)\n      assert.equal(resultedBase58Key, base58Key)\n    })\n  })\n\n  publicFixures.toIndex.forEach(test => {\n    it(`Deriving key ${test[0]} for index ${test[2]}`, async function () {\n      const publicKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const expectedChildKey = {\n        publicKey: test[3],\n        chainCode: test[4],\n        childNumber: test[5]\n      }\n      const xKey = XKey.fromXKey({ publicKey, chainCode })\n      const childKey = await XKey.toIndex(xKey, index)\n      assert.deepEqual({\n        publicKey: childKey.publicKey,\n        chainCode: childKey.chainCode,\n        childNumber: childKey.childNumber\n      }, expectedChildKey)\n    })\n  })\n})\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\nimport * as XPriv from '../../src/hd/xpriv.js'\nimport * as Path from '../../src/hd/path.js'\nimport { HARDENED } from '../../src/hd/common.js'\nimport * as XPub from '../../src/hd/xpub.js'\nimport fixtures from './fixtures/xpriv.json'\n\nconst { network } = fixtures\n\ndescribe('Testing XPriv Key', function () {\n  fixtures.fromSeed.forEach(test => {\n    it(`XPriv from seed ${test[1]}`, function () {\n      const childKey = XPriv.fromSeed(test[1], network)\n      const xkey = XPriv.toString(childKey)\n      assert.deepEqual(xkey, test[2])\n    })\n  })\n\n  fixtures.string.forEach(test => {\n    const base58Key = test[0]\n    const privateKey = {\n      privateKey: test[1],\n      version: test[2],\n      depth: test[3],\n      parentFingerPrint: test[4],\n      childNumber: test[5],\n      chainCode: test[6]\n    }\n\n    it(`XPriv from string: ${test[0]}`, function () {\n      const resultedXkey = XPriv.fromString(base58Key, network)\n      assert.deepEqual(resultedXkey, privateKey)\n    })\n\n    it(`XPriv to string: ${test[1]}`, function () {\n      const resultedBase58Key = XPriv.toString(privateKey, network)\n      assert.equal(resultedBase58Key, base58Key)\n    })\n  })\n\n  fixtures.toIndex.forEach(test => {\n    it(`Deriving XPriv ${test[0]} for index ${test[2]}`, async function () {\n      const privateKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const publicKey = test[6] || null\n      const expectedChildKey = {\n        privateKey: test[3],\n        chainCode: test[4],\n        childNumber: test[5]\n      }\n      const xKey = XPriv.fromXPriv({ privateKey, chainCode, publicKey })\n      const childKey = await XPriv.toIndex(xKey, index)\n      assert.deepEqual({\n        privateKey: childKey.privateKey,\n        chainCode: childKey.chainCode,\n        childNumber: childKey.childNumber\n      }, expectedChildKey)\n    })\n  })\n\n  fixtures.toPath1.forEach(test => {\n    it(`Deriving key ${test[0]} for bips ${test[2]}`, async function () {\n      const xkey = test[0]\n      const parentKey = XPriv.fromString(xkey, network)\n\n      let account = 0\n      let coinType = 0\n      let bips = test[2]\n      if (!bips) bips = [84]\n      if (test[1]) {\n        account = test[1][0]\n        coinType = test[1][1]\n      }\n      let testIndex = 3\n\n      const testPath = async (path) => {\n        const hdKey = await XPriv.toPath(parentKey, path)\n        const xprivkey = XPriv.toString(hdKey, network)\n        const pubKey = await XPriv.toXPub(hdKey)\n        const xpubkey = XPub.toString(pubKey, network)\n        assert.equal(xprivkey, test[testIndex++], 'xpriv')\n        assert.equal(xpubkey, test[testIndex++], 'xpub')\n      }\n\n      for (const purpose of bips) {\n        if (purpose === 32) {\n          await testPath(['m', `${account}`, 0].join('/'))\n          testIndex -= 2\n          await testPath([account, 0])\n        } else {\n          await testPath(['m', `${purpose}'`, `${coinType}'`, `${account}'`, 0].join('/'))\n          await testPath(['m', `${purpose}'`, `${coinType}'`, `${account}'`, 1].join('/'))\n          testIndex -= 4\n          await testPath([purpose + HARDENED, coinType + HARDENED, account + HARDENED, 0])\n          await testPath([purpose + HARDENED, coinType + HARDENED, account + HARDENED, 1])\n        }\n      }\n    })\n  })\n\n  fixtures.toPath2.forEach(test => {\n    it(`Deriving XPriv key from xkey ${test[0]} with path ${\n      test[1]\n    }`, async function () {\n      const path = Path.fromString(test[1])\n      const parentKey = XPriv.fromString(test[0])\n      let testIndex = 2\n      while (path.length) {\n        const hdKey = await XPriv.toPath(parentKey, path)\n        const xprivkey = XPriv.toString(hdKey, network)\n        const publicKey = await XPriv.toXPub(hdKey, network)\n        const xpubkey = XPub.toString(publicKey, network)\n        assert.equal(xprivkey, test[testIndex][0], 'xpriv')\n        assert.equal(xpubkey, test[testIndex][1], 'xpub')\n        path.pop()\n        testIndex++\n      }\n    })\n  })\n})\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as XPub from '../../src/hd/xpub.js'\nimport fixtures from './fixtures/xpub.json'\n\nconst { network } = fixtures\n\ndescribe('Testing XPub', function () {\n  fixtures.string.forEach(test => {\n    const base58Key = test[0]\n    const publicKey = {\n      publicKey: test[1],\n      version: test[2],\n      depth: test[3],\n      parentFingerPrint: test[4],\n      childNumber: test[5],\n      chainCode: test[6]\n    }\n\n    it(`XPub from string: ${test[0]}`, function () {\n      const resultedXkey = XPub.fromString(base58Key, network)\n      assert.deepEqual(resultedXkey, publicKey)\n    })\n\n    it(`XPub to string: ${test[1]}`, function () {\n      const resultedBase58Key = XPub.toString(publicKey, network)\n      assert.equal(resultedBase58Key, base58Key)\n    })\n  })\n\n  fixtures.toIndex.forEach(test => {\n    it(`Deriving XPub ${test[0]} for index ${test[2]}`, async function () {\n      const publicKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const expectedChildKey = {\n        publicKey: test[3],\n        chainCode: test[4],\n        childNumber: test[5]\n      }\n      const xKey = XPub.fromXPub({ publicKey, chainCode })\n      const childKey = await XPub.toIndex(xKey, index)\n      assert.deepEqual({\n        publicKey: childKey.publicKey,\n        chainCode: childKey.chainCode,\n        childNumber: childKey.childNumber\n      }, expectedChildKey)\n    })\n  })\n})\n","// @flow\n\nimport babel from 'rollup-plugin-babel'\nimport flowEntry from 'rollup-plugin-flow-entry'\nimport json from 'rollup-plugin-json'\n\nimport packageJson from './package.json'\n\nexport default {\n  input: './index.js',\n  external: [\n    ...Object.keys(packageJson.dependencies),\n    ...Object.keys(packageJson.devDependencies),\n    'bindings',\n    'elliptic'\n  ],\n  output: [\n    { file: packageJson.main, format: 'cjs', sourcemap: true },\n    { file: packageJson.module, format: 'es', sourcemap: true }\n  ],\n  plugins: [\n    json(),\n    babel({\n      babelrc: false,\n      presets: ['@babel/preset-flow'],\n      plugins: ['@babel/plugin-proposal-object-rest-spread']\n    }),\n    flowEntry()\n  ]\n}\n","import babel from 'rollup-plugin-babel'\nimport json from 'rollup-plugin-json'\nimport multiEntry from 'rollup-plugin-multi-entry'\n\nimport config from '../rollup.config.js'\n\nconst babelOptions = {\n  babelrc: false,\n  presets: ['@babel/preset-flow'],\n  plugins: ['@babel/plugin-proposal-object-rest-spread']\n}\n\nexport default {\n  external: config.external,\n  input: './test/**/*.js',\n  output: [\n    { file: 'build/tests.cjs.js', format: 'cjs', sourcemap: true },\n    { file: 'build/tests.js', format: 'es', sourcemap: true }\n  ],\n  plugins: [multiEntry(), json(), babel(babelOptions)]\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { base } from '../../src/utils/base.js'\nimport { sha512Hmac } from '../../src/utils/hash.js'\nimport fixtures from './fixtures/base.json'\n\nconst data =\n  '00ab0063a7ea84d7c5f4a9ad8690c69b80a2d650343fbc9266b2d73c7b26bb2cc780000020'\nconst key = '485efe44bc445946b58ba03e8da75d5cf44fc9196eaa88204667629c4e04c38d'\nconst res =\n  '405fcc33d3f409f16571e19bd27053cd1d05e74df6eba0dc93c4c0a91599052429203b410e284513e14f67287843f91875bf69986f9cebf7037e79b0b13bbdbc'\n\nconst hash = sha512Hmac(key, data)\nassert.equal(hash, res)\n\nfor (const fixture in fixtures) {\n  describe(`Testing base ${fixture}`, function () {\n    const fixtureBase = base[fixture].check\n\n    fixtures[fixture].valid.forEach(({ string, payload }) => {\n      it(`Decode valid string: ${string}`, async function () {\n        const resultedPaylod = fixtureBase.decode(string)\n        assert.equal(resultedPaylod, payload)\n      })\n      it(`Encode valid payload: ${payload}`, async function () {\n        const resultedString = fixtureBase.encode(payload)\n        assert.equal(resultedString, string)\n      })\n    })\n\n    fixtures[fixture].invalid.forEach(({ string, exception }) => {\n      it(`Test invalid string: ${string}`, async function () {\n        try {\n          fixtureBase.decode(string)\n        } catch (e) {\n          assert.equal(e.message, exception)\n        }\n      })\n    })\n  })\n}\n","export const jsonObj = {\n  alpha: 1,\n  bravo: [1, 2, 3],\n  charlie: { delta: 1 },\n  india: {\n    kilo: 4,\n    lima: 4\n  },\n  uniform: {\n    kilo: 4,\n    lima: 4\n  },\n  echo: {\n    foxtrot: [1, 2, 3],\n    golf: {\n      india: {\n        kilo: 4,\n        lima: 4\n      },\n      juliet: {\n        kilo: 4,\n        lima: 5\n      },\n      mike: [\n        { kilo: 4 },\n        6,\n        { lima: 5 },\n        { lima: 6, kilo: 7 },\n        { charlie: { delta: 1 } },\n        { alpha: 1 },\n        [ 6, { lima: 5 }, 10 ]\n      ],\n      november: 8\n    }\n  }\n}\n\nexport const fixtures = [\n  [ [], [jsonObj] ],\n\n  [ ['$.lima'], [] ],\n\n  [ ['lima'], [] ],\n\n  [ ['$..lima'], [\n    jsonObj['india']['lima'],\n    jsonObj['uniform']['lima'],\n    jsonObj['echo']['golf']['india']['lima'],\n    jsonObj['echo']['golf']['juliet']['lima'],\n    jsonObj['echo']['golf']['mike'][2]['lima'],\n    jsonObj['echo']['golf']['mike'][3]['lima'],\n    jsonObj['echo']['golf']['mike'][6][1]['lima']\n  ] ],\n\n  [ ['$..charlie'], [\n    jsonObj['echo']['golf']['mike'][4]['charlie'],\n    jsonObj['charlie']\n  ] ],\n\n  [ ['$.charlie.delta', 1], [\n    jsonObj['charlie']\n  ] ],\n\n  [ ['charlie.delta', 1], [\n    jsonObj['charlie']\n  ] ],\n\n  [ ['echo.golf.india.kilo', 4], [\n    jsonObj['echo']['golf']['india']\n  ] ],\n\n  [ ['$.lima', 1], [] ],\n\n  [ ['lima', 1], [] ],\n\n  [ ['$..alpha', 1], [\n    jsonObj['echo']['golf']['mike'][5],\n    jsonObj\n  ] ],\n\n  [ ['$..alpha', 2], [] ],\n\n  [ ['$..charlie', 1], [] ],\n\n  [ ['$..delta', 1], [\n    jsonObj['charlie'],\n    jsonObj['echo']['golf']['mike'][4]['charlie']\n  ] ],\n\n  [ ['$..charlie.delta', 1], [\n    jsonObj['charlie'],\n    jsonObj['echo']['golf']['mike'][4]['charlie']\n  ] ],\n\n  [ ['$..india.kilo', 5], [] ],\n\n  [ ['$..india.lima', 5], [] ],\n\n  [ ['$..echo.golf.india.kilo', 4], [jsonObj['echo']['golf']['india']] ],\n\n  [ ['$..echo.golf.india.kilo', 5], [] ],\n\n  [ ['$..echo.golf.november', 8], [jsonObj['echo']['golf']] ],\n\n  [ ['$..india.kilo', 4], [\n    jsonObj['india'],\n    jsonObj['echo']['golf']['india']\n  ] ],\n\n  [ ['$..lima', 5], [\n    jsonObj['echo']['golf']['juliet'],\n    jsonObj['echo']['golf']['mike'][2],\n    jsonObj['echo']['golf']['mike'][6][1]\n  ] ],\n\n  [ ['$..lima', 4], [\n    jsonObj['india'],\n    jsonObj['uniform'],\n    jsonObj['echo']['golf']['india']\n  ] ],\n\n  [ ['$..kilo', 4], [\n    jsonObj['india'],\n    jsonObj['uniform'],\n    jsonObj['echo']['golf']['india'],\n    jsonObj['echo']['golf']['juliet'],\n    jsonObj['echo']['golf']['mike'][0]\n  ] ],\n\n  [ ['$..golf..delta', 1], [\n    jsonObj['echo']['golf']['mike'][4]['charlie']\n  ] ],\n\n  [ ['$..mike..delta', 1], [\n    jsonObj['echo']['golf']['mike'][4]['charlie']\n  ] ],\n\n  [ ['$..echo.foxtrot', 2], [\n    jsonObj['echo']['foxtrot']\n  ] ],\n\n  [ ['$..bravo', 0], [] ],\n\n  [ ['$..bravo', 1], [jsonObj['bravo']] ],\n\n  [ ['$..bravo'], [\n    jsonObj['bravo']\n  ] ],\n\n  [ ['bravo'], [\n    jsonObj['bravo']\n  ] ],\n\n  [ ['$.bravo'], [\n    jsonObj['bravo']\n  ] ],\n\n  [ ['$.echo.foxtrot'], [\n    jsonObj['echo']['foxtrot']\n  ] ],\n\n  [ ['$..mike'], [\n    jsonObj['echo']['golf']['mike']\n  ] ],\n\n  [ ['$.echo.golf.*'], [\n    jsonObj['echo']['golf']['india'],\n    jsonObj['echo']['golf']['juliet'],\n    jsonObj['echo']['golf']['mike'],\n    jsonObj['echo']['golf']['november']\n  ] ],\n\n  [ ['$.*'], [\n    jsonObj['alpha'],\n    jsonObj['bravo'],\n    jsonObj['charlie'],\n    jsonObj['india'],\n    jsonObj['uniform'],\n    jsonObj['echo']\n  ] ]\n]\n","// @flow\n\nimport {\n  type QueryParams,\n  type RecQueryParams\n} from '../../types/utils'\n\nconst searchRec = (query: RecQueryParams, jsonObj: any, parent: any): Array<any> => {\n  const { value, results, limit, path } = query\n\n  // If jsonObj is undefined or we have enough results we can return\n  if (\n    typeof jsonObj === 'undefined' ||\n    (limit && results.length >= limit)) return results\n\n  // If we ran out of path we check the following possiblities:\n  if (!path.length) {\n    // 1. If there is no value we can just return the object we are on\n    if (value === undefined) results.push(jsonObj)\n    // 2. If the value equals jsonObj, we need to return the parent\n    else if (value === jsonObj) results.push(parent)\n    // 3. If the jsonObj is an array, we need to decend one last time again\n    else if (Array.isArray(jsonObj)) {\n      jsonObj.forEach(c => searchRec(query, c, jsonObj))\n    }\n  } else if (typeof jsonObj === 'object') {\n    // Get a mutable version of path\n    let { path } = query\n\n    // If it's a recursive token, decent into all children\n    // And remove the recursive token from the path array\n    if (!path[0]) {\n      path = path.slice(1)\n      for (const key in jsonObj) {\n        searchRec(query, jsonObj[key], jsonObj)\n      }\n    }\n\n    const childKey = path[0]\n    const childQuery = { ...query, path: path.slice(1) }\n\n    if (childKey === '*') {\n      for (const key in jsonObj) {\n        searchRec(childQuery, jsonObj[key], jsonObj)\n      }\n    } else {\n      // Decent into child based on the first key in path\n      // With jsonObj as the parent and shifted path\n      searchRec(childQuery, jsonObj[childKey], jsonObj)\n    }\n  }\n\n  return results\n}\n\nexport const search = (query: QueryParams | string, jsonObj: any): Array<any> => {\n  if (typeof query === 'string') query = { path: query }\n  const { path: stringPath, ...rest } = query\n  // If nothing was requested, return the current object\n  if (!stringPath) return [jsonObj]\n  // Tokenize the search terms\n  const path = stringPath.split('.')\n  // Remove the root token if exists\n  if (path[0] === '$') path.shift()\n  // Call the recursive search\n  return searchRec({ ...rest, path, results: [] }, jsonObj)\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { search } from '../../src/utils/jsonSearch.js'\nimport { fixtures, jsonObj } from './fixtures/jsonSearch.js'\n\ndescribe('Testing Json Search', function () {\n  fixtures.forEach(([ test, expected ]) => {\n    it(`Testing search with: ${JSON.stringify(test)} and no limit`, function () {\n      const searchParams = {\n        path: test[0],\n        value: test[1]\n      }\n      const results = search(searchParams, jsonObj)\n      assert.deepEqual(results, expected)\n    })\n\n    for (let i = 1; i <= expected.length; i++) {\n      it(`Testing search with: ${JSON.stringify(test)} and limit ${i}`, function () {\n        const searchParams = {\n          path: test[0],\n          value: test[1],\n          limit: i\n        }\n        const results = search(searchParams, jsonObj)\n        assert.deepEqual(results, expected.slice(0, i))\n      })\n    }\n  })\n})\n","// @flow\n\nimport {\n  type LoadFunc,\n  type PersistStatus,\n  type SaveFunc\n} from '../../types/utils.js'\n\nexport const persist = (\n  save: SaveFunc,\n  load: LoadFunc | Object,\n  delay: number = 100,\n  cache: Object = {},\n  data: Object = cache,\n  status: PersistStatus = {}\n) => {\n  return new Proxy((Object.assign(() => save(cache), data): any), {\n    apply: async (target, thisArgs, args) => {\n      const updateCache = newCache => {\n        cache = newCache\n        data = newCache\n        for (const key in target) {\n          if (data[key] === undefined) {\n            delete target[key]\n          }\n        }\n        Object.assign(target, newCache)\n      }\n\n      // Try to load the cache from disk in case it never happend before\n      if (!status.loaded) {\n        const rawData = typeof load === 'function' ? await load() : load\n        updateCache({ ...rawData, ...cache })\n        status.loaded = true\n      }\n\n      // Load/Stop the cache based on the argument\n      if (args && args.length) {\n        if (typeof args[0] === 'object') updateCache({ ...args[0] })\n        else if (args[0] === 'stop') {\n          if (status.saving) {\n            clearTimeout(status.saving)\n            status.saving = null\n          }\n          status.changed = false\n          await Reflect.apply(target, target, [])\n          return\n        }\n      }\n\n      // Stop looping in case nothing changed or we already have a save timer\n      if (!status.changed || status.saving) return\n\n      // If something changed, set flags and call save\n      status.changed = false\n\n      // Set save loop after the desired delay\n      status.saving = setTimeout(() => {\n        if (status.saving) {\n          clearTimeout(status.saving)\n          status.saving = null\n        }\n        Reflect.apply(thisArgs, thisArgs, [])\n      }, delay)\n\n      await Reflect.apply(target, target, [])\n    },\n    set: (target: any, prop: string, value: any, receiver: any) => {\n      // Only update/save if the param actually changed\n      if (data[prop] !== value) {\n        Reflect.set(data, prop, value)\n        Reflect.set(target, prop, value)\n        status.changed = true\n        if (!status.saving) Reflect.apply(receiver, receiver, [])\n      }\n      return true\n    },\n    get: (target: any, prop: string) => {\n      if (prop === 'status') return status\n      // Get the value\n      const value = Reflect.get(data, prop)\n      // Return any non object values\n      if (typeof value !== 'object') return value\n      // Create a proxy from the child to trimgger saves on the top parent\n      return persist(save, load, delay, cache, value, status)\n    }\n  })\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { after, before, describe, it } from 'mocha'\n\nimport { persist } from '../../src/utils/persister.js'\nimport fixtures from './fixtures/persistor.json'\n\nconst createSave = (expected: any, delay: number, cbs: any) => {\n  let saveAttempts = -1\n  let firstSaveTime = 0\n\n  return async cacheData => {\n    if (cbs.stop) return\n    cbs.e = new Error()\n\n    assert.notEqual(cacheData, expected)\n    assert.deepEqual(cacheData, expected)\n\n    saveAttempts++\n    if (!firstSaveTime) firstSaveTime = Date.now()\n    const saveTime = Date.now() - firstSaveTime\n\n    if (delay) {\n      const minDelay = delay * saveAttempts\n      assert.isAtLeast(saveTime, minDelay)\n    }\n\n    cbs.e = null\n    // console.log(saveTime, '- SAVE -', cacheData, saveAttempts)\n  }\n}\n\nconst cbs = {}\n\nfor (const test in fixtures) {\n  const testNum = test.replace('scenario ', '')\n  const { cache, delay, sets } = fixtures[test]\n  const expected = JSON.parse(JSON.stringify(cache || {}))\n  const save = createSave(expected, delay, cbs)\n  const load = testNum !== '1' ? (): Object => expected : cache\n  const persistedCache = persist(save, load, delay)\n\n  describe(`Testing persister for ${test} with delay of ${delay ||\n    100}ms`, function () {\n    this.timeout(0)\n    before('Test using cache as a function', async function () {\n      cbs.stop = false\n      await persistedCache({})\n      await persistedCache(cache)\n    })\n\n    sets.map(([param, value, saveTime], i) => {\n      it(`Set '${param}' to ${value}, after ${saveTime} milliseconds`, function (done) {\n        let child = persistedCache\n        let expectedChild = expected\n\n        param = param.split('.')\n        while (param.length > 1) {\n          const key = param.shift()\n          child = child[key]\n          expectedChild = expectedChild[key]\n        }\n\n        const key = param[0]\n        const interval = !i ? saveTime : saveTime - sets[i - 1][2]\n\n        setTimeout(() => {\n          expectedChild[key] = value\n          child[key] = value\n          assert.equal(expectedChild[key], child[key])\n          done(cbs.e)\n        }, interval)\n      })\n    })\n\n    after('Stop the caceh using cache as a function', async function () {\n      cbs.stop = true\n      await persistedCache('stop')\n    })\n  })\n}\n"],"names":["lazyHandler","activeModule","get","target","prop","receiver","loadedModule","inject","Proxy","args","lazify","unsafeModule","parentModule","injectedModule","loadUnsafe","defaultModule","Object","assign","parentProxy","isHexString","hex","test","toUint8Array","hexString","Error","length","match","bytes","map","byte","parseInt","Uint8Array","fromUint8Array","reduce","str","toString","padStart","hashjs","require","digest","hash","data","uintArray","rawRes","update","resArray","digestHmac","hmac","key","uintKey","hmacHash","sha256","ripemd160","sha512Hmac","sha512","hash256","hash160","ALPHABETS","createCheckSumBase","base","hashFunc","encode","hexStr","checksum","checkHex","slice","decode","baseString","payload","newChecksum","startsWith","createHexEncoder","newBase","a","Buffer","from","check","decoders","alphabet","baseDecoder","basex","bech32","base58","HDPaths","scriptType","xpriv","prefix","stringPrefix","decoder","xpub","address","main","coinType","wif","DefaultHDPath","txHash","sigHash","testnet","createInfo","info","newNetwork","set","mainSet","infoSet","Array","isArray","concat","filter","v","i","s","indexOf","createNetworks","newInfos","networks","network","infos","networkType","partialInfo","name","toLowerCase","Networks","getHDSetting","value","e","purpose","hdPath","setting","find","getDecoder","formatFunction","func","opts","numParams","encoder","results","sync","input","output","cps","newCps","p","paramEncoder","encodeResult","res","param","waitResult","params","result","secp256k1","publicKeyCreate","signatureNormalize","signatureExport","privateKeyTweakAdd","publicKeyTweakAdd","verify","signature","sign","fromWIF","keyHex","privateKey","compress","toWIF","prefixStr","compressFlag","hexKey","toPublic","describe","keys","forEach","it","assert","equal","publicKey","HARDENED","SEED","MAX_INDEX","MAX_DEPTH","TWEAK_OUT_OF_RANGE_ERROR","XKEY_DEFAULTS","childNumber","parentFingerPrint","depth","dataToHex","version","chainCode","dataFromHex","isNumeric","toNumber","index","hardened","indexNumber","fromString","path","root","pathArr","split","pathRoot","shift","message","fromXPriv","fromSeed","fullKey","seed","fromHex","headerByte","xKey","toIndex","hardended","toPublicKey","tweakKey","childKey","includes","toPath","Path","toHex","rest","hdKey","toXPub","fromXPub","hdSetting","XPriv","XPub","keySelector","privType","pubType","fromXKey","privateFixures","XKey","xkey","deepEqual","string","base58Key","resultedXkey","resultedBase58Key","expectedChildKey","toPath1","parentKey","account","bips","testIndex","testPath","xprivkey","pubKey","xpubkey","join","toPath2","pop","publicFixures","fixtures","external","packageJson","dependencies","devDependencies","file","format","sourcemap","module","plugins","json","babel","babelrc","presets","flowEntry","babelOptions","config","multiEntry","fixture","fixtureBase","valid","resultedPaylod","resultedString","invalid","exception","jsonObj","alpha","bravo","charlie","delta","india","kilo","lima","uniform","echo","foxtrot","golf","juliet","mike","november","searchRec","query","parent","limit","undefined","push","c","childQuery","search","stringPath","expected","JSON","stringify","searchParams","persist","save","load","delay","cache","status","apply","thisArgs","updateCache","newCache","loaded","rawData","saving","clearTimeout","changed","Reflect","setTimeout","createSave","cbs","saveAttempts","firstSaveTime","cacheData","stop","notEqual","Date","now","saveTime","minDelay","isAtLeast","testNum","replace","sets","parse","persistedCache","timeout","before","done","child","expectedChild","interval","after"],"mappings":"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"}