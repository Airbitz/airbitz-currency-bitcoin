{"version":3,"file":"tests.cjs.js","sources":["../src/utils/jsonSearch.js","../test/utils/jsonSearch.js"],"sourcesContent":["// @flow\n\nimport { type JsonSearchParams } from '../../types/utils'\n\nexport const search = (searchParams: JsonSearchParams, jsonObj: any): any => {\n  // if (Array.isArray(jsonObj)) {\n  //   for (const item of jsonObj) {\n  //     try {\n  //       return search(searchParams, item)\n  //     } catch (e) {}\n  //   }\n  //   throw new Error('Unknown prefix')\n  // }\n\n  if (typeof jsonObj === 'undefined') return null\n\n  const {\n    keyToMatch,\n    valueToMatch,\n    // keyToReturn,\n    results = jsonObj,\n    tokenizeKeys = keyToMatch ? keyToMatch.split('.') : []\n  } = searchParams\n\n  if (!tokenizeKeys.length) {\n    if (typeof valueToMatch === 'undefined' || valueToMatch === jsonObj) {\n      return results\n    }\n    return null\n  }\n\n  if (typeof jsonObj === 'object') {\n    return search({\n      keyToMatch,\n      valueToMatch,\n      // keyToReturn,\n      results: jsonObj,\n      tokenizeKeys: tokenizeKeys.slice(1)\n    }, jsonObj[tokenizeKeys[0]])\n  }\n\n  // for (const purpose in HDPaths) {\n  //   const hdPath = HDPaths[purpose]\n  //   for (const key in hdPath) {\n  //     const setting = hdPath[key]\n  //     // checking if address that has legacy\n  //     if (Array.isArray(setting)) {\n  //       return setting.find(\n  //         ({ prefix, stringPrefix }) =>\n  //           prefix === value || stringPrefix === value\n  //       )\n  //     }\n\n  //     // checking if xpub, xpriv, or address\n  //     if (\n  //       typeof setting === 'object' &&\n  //       (setting.prefix === value || setting.stringPrefix === value)\n  //     ) {\n  //       return hdPath\n  //     }\n\n  //     // if scriptType or purpose\n  //     if (setting === value) return hdPath\n  //   }\n  // }\n  // throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n","// @flow\n\n// import { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { search } from '../../src/utils/jsonSearch.js'\nconst jsonObj = {\n  alpha: 1,\n  // bravo: [1, 2, 3],\n  charlie: { delta: 1 },\n  india: {\n    kilo: 4,\n    lima: 4\n  },\n  uniform: {\n    kilo: 4,\n    lima: 4\n  },\n  echo: {\n    // foxtrot: [1, 2, 3],\n    golf: {\n      india: {\n        kilo: 4,\n        lima: 4\n      },\n      juliet: {\n        kilo: 4,\n        lima: 5\n      },\n      // mike: [\n      //   { kilo: 4 },\n      //   6,\n      //   { lima: 5 },\n      //   { lima: 6, kilo: 7 },\n      //   { charlie: { delta: 1 } },\n      //   { alpha: 1 },\n      //   [ 6, { lima: 5 }, 10 ]\n      // ],\n      november: 8\n    }\n  }\n}\n\nconst fixtures = [\n  ['alpha', 1],\n  [],\n  []\n]\n\ndescribe('Testing Json Search', function () {\n  fixtures.forEach(test => {\n    it(`Testing search with: ${JSON.stringify(test)} `, function () {\n      const searchParams = {\n        keyToMatch: test[0],\n        valueToMatch: test[1]\n        // keyToReturn: test[2]\n      }\n      const result = search(searchParams, jsonObj)\n      console.log(result)\n    })\n  })\n})\n"],"names":["search","searchParams","jsonObj","keyToMatch","valueToMatch","results","tokenizeKeys","split","length","slice","alpha","charlie","delta","india","kilo","lima","uniform","echo","golf","juliet","november","fixtures","describe","forEach","test","it","JSON","stringify","result","console","log"],"mappings":";;;;AAIO,MAAMA,MAAM,GAAG,CAACC,YAAD,EAAiCC,OAAjC,KAAuD;;;;;;;;;MAUvE,OAAOA,OAAP,KAAmB,WAAvB,EAAoC,OAAO,IAAP;QAE9B;IACJC,UADI;IAEJC,YAFI;;IAIJC,OAAO,GAAGH,OAJN;IAKJI,YAAY,GAAGH,UAAU,GAAGA,UAAU,CAACI,KAAX,CAAiB,GAAjB,CAAH,GAA2B;MAClDN,YANJ;;MAQI,CAACK,YAAY,CAACE,MAAlB,EAA0B;QACpB,OAAOJ,YAAP,KAAwB,WAAxB,IAAuCA,YAAY,KAAKF,OAA5D,EAAqE;aAC5DG,OAAP;;;WAEK,IAAP;;;MAGE,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;WACxBF,MAAM,CAAC;MACZG,UADY;MAEZC,YAFY;;MAIZC,OAAO,EAAEH,OAJG;MAKZI,YAAY,EAAEA,YAAY,CAACG,KAAb,CAAmB,CAAnB;KALH,EAMVP,OAAO,CAACI,YAAY,CAAC,CAAD,CAAb,CANG,CAAb;GA5ByE;;;;;;;;;;;;;;;;;;;;;;;;CAAtE;;ACFP;AACA,AAGA,MAAMJ,OAAO,GAAG;EACdQ,KAAK,EAAE,CADO;;EAGdC,OAAO,EAAE;IAAEC,KAAK,EAAE;GAHJ;EAIdC,KAAK,EAAE;IACLC,IAAI,EAAE,CADD;IAELC,IAAI,EAAE;GANM;EAQdC,OAAO,EAAE;IACPF,IAAI,EAAE,CADC;IAEPC,IAAI,EAAE;GAVM;EAYdE,IAAI,EAAE;;IAEJC,IAAI,EAAE;MACJL,KAAK,EAAE;QACLC,IAAI,EAAE,CADD;QAELC,IAAI,EAAE;OAHJ;MAKJI,MAAM,EAAE;QACNL,IAAI,EAAE,CADA;QAENC,IAAI,EAAE;OAPJ;;;;;;;;;;MAkBJK,QAAQ,EAAE;;;CAhChB;AAqCA,MAAMC,QAAQ,GAAG,CACf,CAAC,OAAD,EAAU,CAAV,CADe,EAEf,EAFe,EAGf,EAHe,CAAjB;AAMAC,cAAQ,CAAC,qBAAD,EAAwB,YAAY;EAC1CD,QAAQ,CAACE,OAAT,CAAiBC,IAAI,IAAI;IACvBC,QAAE,CAAE,wBAAuBC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAqB,GAA9C,EAAkD,YAAY;YACxDvB,YAAY,GAAG;QACnBE,UAAU,EAAEqB,IAAI,CAAC,CAAD,CADG;QAEnBpB,YAAY,EAAEoB,IAAI,CAAC,CAAD,CAFC;;OAArB;YAKMI,MAAM,GAAG5B,MAAM,CAACC,YAAD,EAAeC,OAAf,CAArB;MACA2B,OAAO,CAACC,GAAR,CAAYF,MAAZ;KAPA,CAAF;GADF;CADM,CAAR"}