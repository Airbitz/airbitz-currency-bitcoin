{"version":3,"file":"tests.cjs.js","sources":["../src/utils/jsonSearch.js","../test/utils/fixtures/jsonSearch.js","../test/utils/jsonSearch.js"],"sourcesContent":["// @flow\n\nimport { type JsonSearchParams } from '../../types/utils'\n\nexport const search = (searchParams: JsonSearchParams, jsonObj: any): any => {\n  // if (Array.isArray(jsonObj)) {\n  //   for (const item of jsonObj) {\n  //     try {\n  //       return search(searchParams, item)\n  //     } catch (e) {}\n  //   }\n  //   throw new Error('Unknown prefix')\n  // }\n\n  if (typeof jsonObj === 'undefined') return null\n\n  // results = [jsonObj],\n  // tokenizeKeys\n\n  const {\n    keyToMatch,\n    valueToMatch,\n    // keyToReturn,\n    results,\n    tokenizeKeys = keyToMatch ? keyToMatch.split('.') : []\n  } = searchParams\n\n  // if (!tokenizeKeys) {\n  //   const newTokens = keyToMatch ? keyToMatch.split('.') : []\n  // }\n\n  if (!tokenizeKeys.length) {\n    if (typeof valueToMatch === 'undefined' || valueToMatch === jsonObj) {\n      return results || [jsonObj]\n    }\n    return null\n  }\n\n  if (typeof jsonObj === 'object') {\n    return search({\n      keyToMatch,\n      valueToMatch,\n      // keyToReturn,\n      results: [jsonObj],\n      tokenizeKeys: tokenizeKeys.slice(1)\n    }, jsonObj[tokenizeKeys[0]])\n  }\n\n  // for (const purpose in HDPaths) {\n  //   const hdPath = HDPaths[purpose]\n  //   for (const key in hdPath) {\n  //     const setting = hdPath[key]\n  //     // checking if address that has legacy\n  //     if (Array.isArray(setting)) {\n  //       return setting.find(\n  //         ({ prefix, stringPrefix }) =>\n  //           prefix === value || stringPrefix === value\n  //       )\n  //     }\n\n  //     // checking if xpub, xpriv, or address\n  //     if (\n  //       typeof setting === 'object' &&\n  //       (setting.prefix === value || setting.stringPrefix === value)\n  //     ) {\n  //       return hdPath\n  //     }\n\n  //     // if scriptType or purpose\n  //     if (setting === value) return hdPath\n  //   }\n  // }\n  // throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n","export const jsonObj = {\n  alpha: 1,\n  // bravo: [1, 2, 3],\n  charlie: { delta: 1 },\n  india: {\n    kilo: 4,\n    lima: 4\n  },\n  uniform: {\n    kilo: 4,\n    lima: 4\n  },\n  echo: {\n    // foxtrot: [1, 2, 3],\n    golf: {\n      india: {\n        kilo: 4,\n        lima: 4\n      },\n      juliet: {\n        kilo: 4,\n        lima: 5\n      },\n      // mike: [\n      //   { kilo: 4 },\n      //   6,\n      //   { lima: 5 },\n      //   { lima: 6, kilo: 7 },\n      //   { charlie: { delta: 1 } },\n      //   { alpha: 1 },\n      //   [ 6, { lima: 5 }, 10 ]\n      // ],\n      november: 8\n    }\n  }\n}\n\nexport const fixtures = [\n  [ [], [jsonObj] ],\n  [ ['alpha', 1], [jsonObj] ],\n  [ ['alpha', 2], null ],\n  [ ['charlie', 1], null ],\n  [ ['charlie.delta', 1], [jsonObj['charlie']] ],\n  [ ['india.kilo', 5], null ],\n  [ ['india.lima', 5], null ],\n  [ ['echo.golf.india.kilo', 4], [jsonObj['echo']['golf']['india']] ],\n  [ ['echo.golf.india.kilo', 5], null ],\n  [ ['echo.golf.november', 8], [jsonObj['echo']['golf']] ],\n\n  [ ['india.kilo', 4], [ jsonObj['india'], jsonObj['echo']['golf']['india'] ] ],\n\n  [ ['lima', 5], jsonObj['echo']['golf']['juliet'] ],\n  [ ['lima', 4], [\n    jsonObj['india'],\n    jsonObj['uniform'],\n    jsonObj['echo']['golf']['india']\n  ] ],\n\n  [ ['kilo', 4], [\n    jsonObj['india'],\n    jsonObj['uniform'],\n    jsonObj['echo']['golf']['india'],\n    jsonObj['echo']['golf']['juliet']\n  ] ]\n]\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { search } from '../../src/utils/jsonSearch.js'\nimport { fixtures, jsonObj } from './fixtures/jsonSearch.js'\n\ndescribe('Testing Json Search', function () {\n  fixtures.forEach(([ test, expected ]) => {\n    it(`Testing search with: ${JSON.stringify(test)} `, function () {\n      const searchParams = {\n        keyToMatch: test[0],\n        valueToMatch: test[1]\n        // keyToReturn: test[2]\n      }\n      const results = search(searchParams, jsonObj)\n      assert.deepEqual(results, expected)\n      console.log(results)\n    })\n  })\n})\n"],"names":["search","searchParams","jsonObj","keyToMatch","valueToMatch","results","tokenizeKeys","split","length","slice","alpha","charlie","delta","india","kilo","lima","uniform","echo","golf","juliet","november","fixtures","describe","forEach","test","expected","it","JSON","stringify","assert","deepEqual","console","log"],"mappings":"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"}