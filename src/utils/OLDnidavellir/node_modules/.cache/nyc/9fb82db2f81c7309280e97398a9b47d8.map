{"version":3,"file":"tests.cjs.js","sources":["../src/utils/require.js","../src/utils/uintArray.js","../src/utils/hash.js","../src/utils/base.js","../src/hd/paths.js","../src/networks/baseInfo.js","../src/networks/bitcoin.js","../src/core/networkInfo.js","../src/utils/formatter.js","../src/utils/secp256k1.js","../src/core/privateKey.js","../test/core/privateKey.js","../src/hd/derive.js","../test/hd/derive.js","../src/hd/extendedKey.js","../test/hd/extendedKey.js","../src/hd/hdKey.js","../test/hd/hdKey.js","../src/hd/path.js","../test/hd/path.js","../rollup.config.js","../test/rollup.config.js","../test/utils/base.js","../src/utils/persister.js","../test/utils/persister.js"],"sourcesContent":["const lazyHandler = activeModule => ({\n  get: (target, prop, receiver) => {\n    // If already loaded return the loaded module\n    if (activeModule) return activeModule[prop]\n    // Try to inject the loaded module\n    if (prop === 'inject') {\n      return loadedModule => {\n        activeModule = loadedModule\n        for (const prop in target) {\n          target[prop].inject(activeModule[prop])\n        }\n      }\n    }\n    // Create a new child proxy if this prop not yet exists\n    if (!target[prop]) {\n      target[prop] = new Proxy(function (...args) {\n        if (!activeModule) target()\n        return activeModule[prop](...args)\n      }, lazyHandler())\n    }\n    return target[prop]\n  }\n})\n\nexport const lazify = unsafeModule => {\n  const parentModule = function (injectedModule = {}, loadUnsafe = true) {\n    const defaultModule = loadUnsafe ? unsafeModule() : {}\n    const loadedModule = Object.assign(defaultModule, injectedModule)\n    parentProxy.inject(loadedModule)\n  }\n  const parentProxy = new Proxy(parentModule, lazyHandler())\n  return parentProxy\n}\n","// @flow\n\nexport const isHexString = (hex: string) =>\n  typeof hex === 'string' && /^[0-9a-f]*$/i.test(hex)\n\nexport const toUint8Array = (hexString: string): Uint8Array => {\n  if (!isHexString(hexString)) {\n    throw new Error(`${hexString} is Not a Hex string`)\n  }\n  if (hexString.length % 2 !== 0) hexString = `0${hexString}`\n  const hex = hexString.match(/.{1,2}/g) || []\n  const bytes = hex.map(byte => parseInt(byte, 16))\n  return new Uint8Array(bytes)\n}\n\nexport const fromUint8Array = (bytes: Uint8Array): string =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '')\n","// @flow\n\nimport { type Hashes, type SplittedHmac } from '../../types/utils.js'\nimport { lazify } from './require.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const hashjs: Hashes<Uint8Array> = (lazify(() =>\n  require('hash.js')\n): any)\n\nexport const digest = (hash: Function) => (data: string) => {\n  const uintArray = toUint8Array(data)\n  const rawRes = hash()\n    .update(uintArray)\n    .digest()\n  const resArray = new Uint8Array(rawRes)\n  return fromUint8Array(resArray)\n}\n\nexport const digestHmac = (hmac: Function, hash: Function) => (\n  data: string,\n  key: string\n) => {\n  const uintKey = toUint8Array(key)\n  const hmacHash = () => hmac(hash, uintKey)\n  return digest(hmacHash)(data)\n}\n\nexport const sha256 = digest(hashjs.sha256)\nexport const sha512 = digest(hashjs.sha512)\nexport const ripemd160 = digest(hashjs.ripemd160)\nexport const sha512Hmac = digestHmac(hashjs.hmac, hashjs.sha512)\n\nexport const hash256 = (data: string) => sha256(sha256(data))\nexport const hash160 = (data: string) => ripemd160(sha256(data))\nexport const hmacSplit = (key: string, data: string): SplittedHmac => {\n  const hash = sha512Hmac(key, data)\n  const left = hash.slice(0, 64)\n  const right = hash.slice(64, 128)\n  return { left, right }\n}\n","// @flow\n\nimport { Buffer } from 'buffer'\n\nimport basex from 'base-x'\n\nimport {\n  type Alphabet,\n  type BaseCheck,\n  type BaseDecoder,\n  type Bases,\n  type HashFunction\n} from '../../types/utils.js'\nimport { hash256 } from './hash.js'\n\n// The default ALPHABETS, the name of the base codec will be the alphabet's length\nexport const ALPHABETS: Array<Alphabet> = [\n  '01',\n  '01234567',\n  '0123456789a',\n  '0123456789abcdef',\n  '0123456789ABCDEFGHJKMNPQRSTVWXYZ',\n  '0123456789abcdefghijklmnopqrstuvwxyz',\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n]\n\nexport const createCheckSumBase = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseDecoder => ({\n  encode: (hexStr: string): string => {\n    const checksum = (hashFunc || hash256)(hexStr)\n    const checkHex = `${hexStr}${checksum.slice(0, 8)}`\n    return base.encode(checkHex)\n  },\n  decode: (baseString: string): string => {\n    const hexStr = base.decode(baseString)\n    const payload = hexStr.slice(0, -8)\n    const newChecksum = (hashFunc || hash256)(payload)\n    const checksum = hexStr.slice(-8)\n    if (newChecksum.startsWith(checksum)) return payload\n    throw new Error('Invalid checksum')\n  }\n})\n\nexport const createHexEncoder = (\n  base: BaseDecoder,\n  hashFunc?: HashFunction<string>\n): BaseCheck => {\n  const newBase = { ...base }\n  const encode: (buf: Buffer) => string = newBase.encode\n  const decode: (str: string) => Buffer = newBase.decode\n  newBase.encode = a => encode(Buffer.from(a, 'hex'))\n  newBase.decode = a => decode(a).toString('hex')\n  return { ...newBase, check: createCheckSumBase(newBase, hashFunc) }\n}\n\nexport const base: Bases = ALPHABETS.reduce((decoders, alphabet) => {\n  const baseDecoder = createHexEncoder(basex(alphabet))\n  return { ...decoders, [alphabet.length]: baseDecoder }\n}, {})\n","import { base } from '../utils/base.js'\nconst bech32 = base['58'].check\n\nexport const bip32 = {\n  purpose: 32,\n  scriptType: 'P2PKH',\n  xpriv: {\n    stringPrefix: 'xprv',\n    prefix: 0x0488ade4,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'xpub',\n    prefix: 0x0488b21e,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 0x80,\n    decoder: base['58'].check\n  }\n}\n\nexport const bip44 = {\n  purpose: 44,\n  scriptType: 'P2PKH',\n  xpriv: {\n    stringPrefix: 'xprv',\n    prefix: 0x0488ade4,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'xpub',\n    prefix: 0x0488b21e,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 0x80,\n    decoder: base['58'].check\n  }\n}\n\nexport const bip49 = {\n  purpose: 49,\n  scriptType: 'P2WPKH-P2SH',\n  xpriv: {\n    stringPrefix: 'yprv',\n    prefix: 0x049d7878,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'ypub',\n    prefix: 0x049d7cb2,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 0x05,\n    decoder: base['58'].check\n  }\n}\n\nexport const bip84 = {\n  purpose: 84,\n  scriptType: 'P2WPKH',\n  xpriv: {\n    stringPrefix: 'zprv',\n    prefix: 0x04b2430c,\n    decoder: base['58'].check\n  },\n  xpub: {\n    stringPrefix: 'zpub',\n    prefix: 0x04b24746,\n    decoder: base['58'].check\n  },\n  address: {\n    prefix: 'bc',\n    decoder: bech32\n  }\n}\n","// @flow\n\nimport { type NetworkInfo } from '../../types/core.js'\nimport { bip32, bip44 } from '../hd/paths.js'\nimport { base } from '../utils/base.js'\nimport { hash256 } from '../utils/hash.js'\n\nexport const main: NetworkInfo = {\n  coinType: 0,\n  wif: {\n    prefix: 0x80,\n    stringPrefix: '1',\n    decoder: base['58'].check\n  },\n  HDPaths: [bip44, bip32],\n  txHash: hash256,\n  sigHash: (str: Buffer) => Buffer.from(hash256(str.toString('hex')), 'hex'),\n  forks: [],\n  replayProtection: {\n    forkSighash: 0x00,\n    forcedMinVersion: 0,\n    forkId: 0\n  }\n}\n","// @flow\nimport { bip49, bip84 } from '../hd/paths.js'\n\nconst forks = ['bitcoincash', 'bitcoingold', 'bitcoindiamond']\n\nexport const main = { HDPaths: [bip84, bip49], forks }\n\nexport const testnet = {\n  coinType: 1,\n  wif: 0xef,\n  HDPaths: [\n    {\n      purpose: 32,\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0x6f\n    },\n    {\n      purpose: 44,\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0x6f\n    },\n    {\n      purpose: 49,\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 0xc4\n    },\n    {\n      purpose: 84,\n      xpriv: {\n        prefix: 0x04358394,\n        stringPrefix: 'tprv'\n      },\n      xpub: {\n        prefix: 0x043587cf,\n        stringPrefix: 'tpub'\n      },\n      address: 'tb'\n    }\n  ]\n}\n","// @flow\n\nimport {\n  type HDPathSetting,\n  type NetworkInfo,\n  type NetworkInfos,\n  type NewNetworks\n} from '../../types/core.js'\nimport { main } from '../networks/baseInfo.js'\nimport * as Networks from '../networks/networks.js'\n\nexport const getHDSetting = (value: any, network?: string): HDPathSetting => {\n  // If no network is specified, check all available networks\n  if (!network) {\n    for (const network in networks) {\n      try {\n        return getHDSetting(value, network)\n      } catch (e) {}\n    }\n    throw new Error('Unknown prefix')\n  }\n\n  const { HDPaths } = networks[network]\n  for (const hdSetting of HDPaths) {\n    for (const key in hdSetting) {\n      const setting = hdSetting[key]\n      // checking if address that has legacy\n      if (Array.isArray(setting)) {\n        return setting.find(\n          ({ prefix, stringPrefix }) =>\n            prefix === value || stringPrefix === value\n        )\n      }\n\n      // checking if xpub, xpriv, or address\n      if (\n        typeof setting === 'object' &&\n        (setting.prefix === value || setting.stringPrefix === value)\n      ) {\n        return hdSetting\n      }\n\n      // if scriptType or purpose\n      if (setting === value) return hdSetting\n    }\n  }\n  throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n\nexport const getDecoder = (network: string, value: any) => {\n  const { HDPaths } = networks[network]\n  for (const hdSetting of HDPaths) {\n    for (const key in hdSetting) {\n      const decoder = hdSetting[key]\n\n      if (Array.isArray(decoder)) {\n        return decoder.find(\n          ({ prefix, stringPrefix }) =>\n            prefix === value || stringPrefix === value\n        )\n      }\n\n      if (decoder.prefix === value || decoder.stringPrefix === value) {\n        return decoder.decoder\n      }\n    }\n  }\n  throw new Error(`Wrong value: ${value} for network: ${network}`)\n}\n\nexport const createInfo = (info: $Shape<NetworkInfo>): NetworkInfo => {\n  const newNetwork: NetworkInfo = ({}: any)\n\n  for (const set in main) {\n    const mainSet = main[set]\n    const infoSet = info[set]\n\n    if (Array.isArray(mainSet)) {\n      newNetwork[set] = (infoSet || [])\n        .concat(mainSet)\n        .filter((v, i, s) => s.indexOf(v) === i)\n    } else if (typeof mainSet === 'object') {\n      newNetwork[set] = { ...mainSet, ...(infoSet || {}) }\n    } else if (typeof infoSet !== 'undefined') {\n      newNetwork[set] = infoSet\n    } else newNetwork[set] = mainSet\n  }\n\n  return newNetwork\n}\n\nexport const createNetworks = (newInfos: NewNetworks) => {\n  const networks = { main }\n  for (const network in newInfos) {\n    const infos = newInfos[network]\n    for (const networkType in infos) {\n      const partialInfo = infos[networkType]\n      let name = network\n      if (networkType !== 'main') name += networkType.toLowerCase()\n      networks[name] = createInfo(partialInfo)\n    }\n  }\n  return networks\n}\n\nexport const networks: NetworkInfos = createNetworks(Networks)\n\nexport const addNetworks = (newInfos: NewNetworks) =>\n  Object.assign(networks, createNetworks(newInfos))\n\nexport const getScriptType = (prefixNum: number, network: string = 'main') => {\n  const setting = getHDSetting(prefixNum, network)\n  if (!setting) {\n    throw new Error(\n      `Unknown address prefix ${prefixNum} for network ${network}`\n    )\n  }\n  return setting.scriptType\n}\n\nexport const getPrefix = (scriptType: string, network: string = 'main') => {\n  const { HDPaths } = networks[network]\n  const hdSetting = HDPaths.find(\n    ({ scriptType: Script }) => scriptType === Script\n  )\n  if (!hdSetting) return 0\n  const { address } = hdSetting\n  return Array.isArray(address) ? address[0].prefix : address.prefix\n}\n","// @flow\n\nimport { type FunctionFormatterOptions } from '../../types/utils.js'\nimport { fromUint8Array, toUint8Array } from './uintArray.js'\n\nexport const formatFunction = (\n  func: Function,\n  opts?: FunctionFormatterOptions = {}\n) => {\n  const { numParams = 1, encoder, results = [], sync } = opts\n  const { input = toUint8Array, output = fromUint8Array } = encoder || {}\n\n  const encode = (i: number, cps = a => a) => {\n    if (!i--) return cps\n    const newCps = (p: any) => {\n      p[i] = input(p[i])\n      return cps(p)\n    }\n    return encode(i, newCps)\n  }\n\n  const paramEncoder = encode(numParams)\n\n  let encodeResult = (res: any) => output(res)\n  if (!results) {\n    encodeResult = (res: any) => res\n  } else if (results.length) {\n    encodeResult = (res: any) => {\n      for (const param of results) {\n        res[param] = output(res[param])\n      }\n      return res\n    }\n  }\n\n  let waitResult = async (res: any) => {\n    res = await res\n    return encodeResult(res)\n  }\n  if (sync) waitResult = (res: any) => encodeResult(res)\n\n  return (...params: any): any => {\n    const result = func(...paramEncoder(params))\n    return waitResult(result)\n  }\n}\n\nexport const formatByteSize = (\n  originalByteSize: number,\n  newByteSize: number,\n  pad: boolean = originalByteSize > newByteSize\n) => (data: Array<number>) => {\n  let acc = 0\n  let bits = 0\n  const ret = []\n  const maxNum = (1 << newByteSize) - 1\n  for (let p = 0; p < data.length; ++p) {\n    const value = data[p]\n    if (value < 0 || value >> originalByteSize !== 0) {\n      throw new Error('Wrong bit value')\n    }\n    acc = (acc << originalByteSize) | value\n    bits += originalByteSize\n    while (bits >= newByteSize) {\n      bits -= newByteSize\n      ret.push((acc >> bits) & maxNum)\n    }\n  }\n  if (pad && bits > 0) {\n    ret.push((acc << (newByteSize - bits)) & maxNum)\n  } else if (\n    bits >= originalByteSize ||\n    (acc << (newByteSize - bits)) & maxNum\n  ) {\n    throw new Error('Wrong bit value')\n  }\n  return ret\n}\n","// @flow\n\nimport { type Secp256k1 } from '../../types/utils.js'\nimport { formatFunction } from './formatter.js'\nimport { lazify } from './require.js'\n\nexport const secp256k1: Secp256k1<Uint8Array> = (lazify(() =>\n  require('secp256k1')\n): any)\n\nconst encoder = {\n  input: a => Buffer.from(a, 'hex'),\n  output: a => a.toString('hex')\n}\n\nexport const publicKeyCreate = formatFunction(secp256k1.publicKeyCreate, {\n  encoder\n})\nexport const signatureNormalize = formatFunction(secp256k1.signatureNormalize, {\n  encoder\n})\nexport const signatureExport = formatFunction(secp256k1.signatureExport, {\n  encoder\n})\nexport const privateKeyTweakAdd = formatFunction(secp256k1.privateKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const publicKeyTweakAdd = formatFunction(secp256k1.publicKeyTweakAdd, {\n  encoder,\n  numParams: 2\n})\nexport const verify = formatFunction(secp256k1.verify, {\n  encoder,\n  numParams: 3,\n  results: null\n})\nexport const signature = formatFunction(secp256k1.sign, {\n  encoder,\n  numParams: 2,\n  results: ['signature']\n})\n\nexport const sign = (message: string, privateKey: string) =>\n  signature(message, privateKey)\n    .then(({ signature }) => signature)\n    .then(signatureNormalize)\n    .then(signatureExport)\n","// @flow\n\nimport { networks } from './networkInfo.js'\nimport {\n  publicKeyCreate,\n  sign as Sign,\n  verify as Verify\n} from '../../src/utils/secp256k1.js'\n\nexport const fromWIF = (\n  wif: string,\n  network: string = 'main'\n): { privateKey: string, compress: boolean } => {\n  const { prefix, decoder } = networks[network].wif\n  const keyHex = decoder.decode(wif)\n  if (parseInt(keyHex.slice(0, 2), 16) !== prefix) {\n    throw new Error(\n      `Unknown key prefix ${keyHex.slice(0, 2)} for network ${network}`\n    )\n  }\n  const privateKey = keyHex.slice(2, 66)\n  let compress = false\n  if (keyHex.length >= 68) {\n    if (parseInt(keyHex.slice(66, 68), 16) !== 1) {\n      throw new Error(`Unknown compression flag ${keyHex.slice(66, 68)}`)\n    }\n    compress = true\n  }\n  return { privateKey, compress }\n}\n\nexport const toWIF = (\n  privateKey: string,\n  network: string = 'main',\n  compress: boolean = true\n): string => {\n  if (privateKey.length !== 64) throw new Error(`Wrong key length`)\n  const { prefix, decoder } = networks[network].wif\n  const hexKey = `${parseInt(prefix).toString(16)}${privateKey}${compress ? '01' : ''}`\n  console.log(hexKey)\n  return decoder.encode(hexKey)\n}\n\nexport const toPublic = async (\n  privateKey: string,\n  compress: boolean = true\n): Promise<string> => publicKeyCreate(privateKey, compress)\n\nexport const sign = async (privateKey: string, msg: string): Promise<string> => Sign(msg, privateKey)\n\nexport const verify = async (\n  msg: string,\n  signature: string,\n  publicKey?: string,\n  privateKey?: string\n): Promise<Boolean> => {\n  if (!publicKey) {\n    if (!privateKey) throw new Error('Cannot verify without keys.')\n    publicKey = await publicKeyCreate(privateKey, true)\n  }\n  const verified = await Verify(msg, signature, publicKey)\n  return verified\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { fromWIF, toPublic, toWIF } from '../../src/core/privateKey.js'\n\nimport keys from './fixtures.json'\n\nconst network = 'main'\n\ndescribe('Testing HD Key', function () {\n  keys.forEach(test => {\n    it(`Creating Private Key from WIF ${test[0]}`, function () {\n      const wif = test[0]\n      const { privateKey, compress } = fromWIF(wif, network)\n      assert.equal(compress, test[1])\n      assert.equal(privateKey, test[2])\n    })\n\n    it(`Creating Public Key from Private Key ${test[1]}`, async function () {\n      const compress = test[1]\n      const privateKey = test[2]\n      const publicKey = await toPublic(privateKey, compress)\n      assert.equal(publicKey, test[3])\n    })\n\n    it(`Creating WIF from from Private Key ${test[1]}`, function () {\n      const compress = test[1]\n      const privateKey = test[2]\n      const wif = toWIF(privateKey, network, compress)\n      assert.equal(wif, test[0])\n    })\n  })\n})\n","// @flow\n\nimport { toPublic } from '../core/privateKey'\nimport {\n  type DerivedPrivateKey,\n  type DerivedPublicKey,\n  type DerivedKeyPair,\n  type DerivedPoint\n} from '../../types/hd.js'\nimport { hmacSplit } from '../utils/hash.js'\nimport * as Secp256k1 from '../utils/secp256k1'\n\nexport const HARDENED = 0x80000000\nexport const MAX_INDEX = 0xffffffff\nexport const TWEAK_OUT_OF_RANGE_ERROR = 'tweak out of range'\n\nexport const getTweak = async (\n  key: string,\n  entropy: string,\n  index?: number = 0\n): Promise<DerivedPoint> => {\n  if (index > MAX_INDEX) throw new Error('Index out of range.')\n  key += index.toString(16).padStart(8, '0')\n  const { left, right } = hmacSplit(key, entropy)\n  return { tweakPoint: left, chainCode: right }\n}\n\nexport const derivePublic = async (\n  publicKey: string,\n  index: number,\n  entropy: string\n): Promise<DerivedPublicKey> => {\n  if (index >= HARDENED) {\n    throw new Error('Cannot derive a hardened index with a public key.')\n  }\n\n  try {\n    const { tweakPoint, chainCode } = await getTweak(\n      publicKey,\n      entropy,\n      index\n    )\n    const childKey = await Secp256k1.publicKeyTweakAdd(\n      publicKey,\n      tweakPoint,\n      true\n    )\n    return { publicKey: childKey, index, chainCode }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    return derivePublic(publicKey, index + 1, entropy)\n  }\n}\n\nexport const derivePrivate = async (\n  privateKey: string,\n  index: number,\n  entropy: string,\n  hardened: boolean = false,\n  publicKey?: string\n): Promise<DerivedPrivateKey> => {\n  if (hardened && index < HARDENED) index += HARDENED\n  let key = `00${privateKey}`\n  if (index < HARDENED) {\n    key = publicKey || await toPublic(privateKey, true)\n  }\n\n  try {\n    const { tweakPoint, chainCode } = await getTweak(\n      key,\n      entropy,\n      index\n    )\n    const childKey = await Secp256k1.privateKeyTweakAdd(privateKey, tweakPoint)\n    return { privateKey: childKey, index, chainCode }\n  } catch (e) {\n    if (!e.message.includes(TWEAK_OUT_OF_RANGE_ERROR)) throw e\n    if (index > MAX_INDEX) index -= HARDENED\n    return derivePrivate(privateKey, index + 1, entropy, hardened, publicKey)\n  }\n}\n\nexport const deriveKeyPair = async (\n  parentKeys: DerivedKeyPair,\n  indexStr?: string = '0'\n): Promise<DerivedKeyPair> => {\n  const hardened = indexStr[indexStr.length - 1] === \"'\"\n  const index = hardened ? parseInt(indexStr.slice(0, -1)) : parseInt(indexStr)\n  const { chainCode, privateKey, publicKey } = parentKeys\n\n  if (privateKey) {\n    const childKey = await derivePrivate(\n      privateKey,\n      index,\n      chainCode,\n      hardened,\n      publicKey\n    )\n    const childPublicKey = await toPublic(childKey.privateKey, true)\n    return { ...childKey, publicKey: childPublicKey }\n  } else if (hardened) {\n    throw new Error('Cannot derive a hardened index without a private key.')\n  }\n  // $FlowFixMe\n  return derivePublic(publicKey, index, chainCode)\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as Derive from '../../src/hd/derive.js'\nimport fixtures from './fixtures/derive.json'\n\nconst deriveFixtures = fixtures\n\ndescribe('Testing Key derivation', function () {\n  deriveFixtures.private.forEach(test => {\n    it(`Deriving private key without public key ${test[0]} for index ${\n      test[2]\n    }`, async function () {\n      const privateKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const expectedChildKey = {\n        privateKey: test[3],\n        chainCode: test[4],\n        index: test[5]\n      }\n      const hardened = test[6]\n      const childKey = await Derive.derivePrivate(\n        privateKey,\n        index,\n        chainCode,\n        hardened\n      )\n      assert.deepEqual(childKey, expectedChildKey)\n    })\n  })\n\n  deriveFixtures.privateWithPublic.forEach(test => {\n    it(`Deriving private key with public key ${test[0]} for index ${\n      test[2]\n    }`, async function () {\n      const privateKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const expectedChildKey = {\n        privateKey: test[3],\n        chainCode: test[4],\n        index: test[5]\n      }\n      const publicKey = test[6]\n      const childKey = await Derive.derivePrivate(\n        privateKey,\n        index,\n        chainCode,\n        false,\n        publicKey\n      )\n      assert.deepEqual(childKey, expectedChildKey)\n    })\n  })\n\n  deriveFixtures.public.forEach(test => {\n    it(`Deriving public key ${test[0]} for index ${test[2]}`, async function () {\n      const publicKey = test[0]\n      const chainCode = test[1]\n      const index = test[2]\n      const expectedChildKey = {\n        publicKey: test[3],\n        chainCode: test[4],\n        index: test[5]\n      }\n      const childKey = await Derive.derivePublic(\n        publicKey,\n        index,\n        chainCode\n      )\n      assert.deepEqual(childKey, expectedChildKey)\n    })\n  })\n})\n","// @flow\n\nimport {\n  type DerivedKeyPair,\n  type ExtendedKeyPair\n} from '../../types/hd.js'\nimport { toPublic } from '../core/privateKey.js'\nimport {\n  getDecoder,\n  getHDSetting\n} from '../core/networkInfo.js'\nimport { hash160, hmacSplit } from '../utils/hash.js'\nimport { deriveKeyPair } from './derive.js'\n\nconst MAX_DEPTH = 0xff\nconst SEED = '426974636f696e2073656564'\n\nexport const fromSeed = async (\n  seed: string,\n  network: string = 'main',\n  purpose: number = 32\n): Promise<ExtendedKeyPair> => {\n  const { left, right } = hmacSplit(seed, SEED)\n  const publicKey = await toPublic(left, true)\n  const masterKeyPair = {\n    privateKey: left,\n    publicKey,\n    chainCode: right,\n    index: 0\n  }\n  const version = getHDSetting(purpose, network).xpriv.prefix\n  return {\n    ...masterKeyPair,\n    parentFingerPrint: 0,\n    version: parseInt(version),\n    depth: 0\n  }\n}\n\nexport const fromIndex = async (\n  parentKeys: ExtendedKeyPair,\n  index: string\n): Promise<ExtendedKeyPair> => {\n  if (parentKeys.depth >= MAX_DEPTH) throw new Error('Depth too high.')\n\n  const derivedKeyPair: DerivedKeyPair = await deriveKeyPair(parentKeys, index)\n  if (!parentKeys.publicKey) {\n    if (!parentKeys.privateKey) {\n      throw new Error('Cannot create parentFingerPrint without keys')\n    }\n    parentKeys.publicKey = await toPublic(parentKeys.privateKey, true)\n  }\n  const parentFingerPrint = await hash160(parentKeys.publicKey)\n\n  return {\n    ...derivedKeyPair,\n    parentFingerPrint: parseInt(parentFingerPrint.slice(0, 8), 16),\n    version: parentKeys.version,\n    depth: parentKeys.depth + 1\n  }\n}\n\nexport const fromHex = (keyHex: string, network?: string): ExtendedKeyPair => {\n  // Check the entire hex length\n  if (keyHex.length !== 156) throw new Error('Wrong pair length')\n\n  // Check that the key prefix matches the network's prefix if given or any network if not\n  const version = parseInt(keyHex.slice(0, 8), 16)\n  const { xpriv, xpub } = getHDSetting(version, network)\n\n  // Get the byte which tells us what type of key we're expecting\n  const headerByte = parseInt(keyHex.slice(90, 92), 16)\n\n  const key = {}\n\n  if (headerByte === 0 && version === xpriv.prefix) {\n    key.privateKey = keyHex.slice(92, 156)\n  } else if (\n    (headerByte === 2 || headerByte === 3) &&\n    version === xpub.prefix\n  ) {\n    key.publicKey = keyHex.slice(90, 156)\n  } else {\n    throw new Error('Bad key prefix')\n  }\n\n  return {\n    ...key,\n    version,\n    depth: parseInt(keyHex.slice(9, 10), 16),\n    parentFingerPrint: parseInt(keyHex.slice(10, 18), 16),\n    index: parseInt(keyHex.slice(18, 26), 16),\n    chainCode: keyHex.slice(26, 90)\n  }\n}\n\nexport const fromString = (\n  hdKey: string,\n  network: string = 'main'\n): ExtendedKeyPair => {\n  const keyHex = getDecoder(network, hdKey.slice(0, 4)).decode(hdKey)\n  return fromHex(keyHex, network)\n}\n\nexport const toHex = (\n  hdKey: ExtendedKeyPair,\n  network: string = 'main',\n  forcePublic: boolean = false\n): string => {\n  const { xpub, xpriv } = getHDSetting(hdKey.version, network)\n  const { privateKey, publicKey } = hdKey\n  let key = publicKey\n  let version = xpub.prefix\n\n  if (privateKey && !forcePublic) {\n    key = `00${privateKey}`\n    version = xpriv.prefix\n  }\n\n  return (\n    parseInt(version).toString(16).padStart(8, '0') +\n    hdKey.depth.toString(16).padStart(2, '0') +\n    hdKey.parentFingerPrint.toString(16).padStart(8, '0') +\n    hdKey.index.toString(16).padStart(8, '0') +\n    hdKey.chainCode +\n    key\n  )\n}\n\nexport const toString = (\n  hdKey: ExtendedKeyPair,\n  network: string = 'main',\n  forcePublic: boolean = false\n): string => {\n  const keyHex = toHex(hdKey, network, forcePublic)\n  return getDecoder(network, hdKey.version).encode(keyHex)\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as ExtendedKey from '../../src/hd/extendedKey.js'\nimport fixtures from './fixtures/extendedKey.json'\n\nconst XKeyFixtures = fixtures\nconst network = 'main'\n\ndescribe(`Testing Extended Key functions`, function () {\n  XKeyFixtures.string.forEach(test => {\n    const base58Key = test[0]\n    let xkey = {\n      version: test[2],\n      depth: test[3],\n      parentFingerPrint: test[4],\n      index: test[5],\n      chainCode: test[6]\n    }\n\n    if (test[1].length === 64) xkey = { ...xkey, privateKey: test[1] }\n    if (test[1].length === 66) xkey = { ...xkey, publicKey: test[1] }\n\n    it(`Extended key from string: ${test[0]}`, function () {\n      const resultedXkey = ExtendedKey.fromString(base58Key, network)\n      assert.deepEqual(resultedXkey, xkey)\n    })\n\n    it(`Extended key to string: ${test[1]}`, function () {\n      if (!xkey.publicKey) xkey = { ...xkey, publicKey: `02${test[1]}` }\n      const resultedBase58Key = ExtendedKey.toString(xkey, network)\n      assert.equal(resultedBase58Key, base58Key)\n    })\n  })\n})\n","// @flow\n\nimport {\n  type ExtendedKeyPair,\n  type HDKeyPair,\n  type HDPath,\n  type Index,\n  type Path\n} from '../../types/hd.js'\nimport { HARDENED } from './derive.js'\nimport * as ExtendedKey from './extendedKey.js'\n\nexport const fromSeed = async (\n  seed: string,\n  network?: string\n): Promise<HDKeyPair> => {\n  const masterKeyPair = await ExtendedKey.fromSeed(seed, network)\n  return {\n    ...masterKeyPair,\n    hardened: false,\n    path: ['m'],\n    children: {}\n  }\n}\n\nexport const fromExtendedKey = (\n  keyPair: ExtendedKeyPair,\n  hdPath?: HDPath\n): HDKeyPair => {\n  const hardened = keyPair.index >= HARDENED\n  const { path: parentPath = [] } = hdPath || {}\n  let indexStr = 'm'\n\n  const path = [...parentPath]\n  if (keyPair.depth) {\n    const adjIndex = hardened ? keyPair.index - HARDENED : keyPair.index\n    indexStr = `${adjIndex}${hardened ? \"'\" : ''}`\n  }\n\n  if (path[0] !== 'm') path.unshift('m')\n  if (path.length === keyPair.depth) {\n    path.push(indexStr)\n  }\n  if (path.length !== keyPair.depth + 1) {\n    throw new Error('Wrong path depth for key')\n  }\n  if (path[path.length - 1] !== indexStr) {\n    throw new Error('Wrong index for key')\n  }\n\n  const hdKey: HDKeyPair = { ...keyPair, path, hardened, children: {} }\n  const { scriptType, chain } = hdPath || {}\n  if (scriptType) hdKey.scriptType = scriptType\n  if (chain) hdKey.chain = chain\n\n  return hdKey\n}\n\nexport const fromIndex = async (\n  parentKey: HDKeyPair,\n  index: Index,\n  network?: string\n): Promise<HDKeyPair> => {\n  // Derive an ExtendedKey key from the current parentKey and index\n  const childKey = await ExtendedKey.fromIndex(parentKey, index)\n  const childHDPath = {\n    ...parentKey,\n    path: [...parentKey.path, index]\n  }\n  // Create an HD key from the ExtendedKey\n  return fromExtendedKey(childKey, childHDPath)\n}\n\nexport const fromPath = async (\n  parentKeys: HDKeyPair,\n  hdPath: HDPath,\n  network?: string\n): Promise<HDKeyPair> => {\n  // Get the deepest possible parent for this key\n  const parent = getParentKey(parentKeys, hdPath.path)\n  // Set the starting derivation key to be the parent key from before\n  let childHDKey = parent.key\n\n  while (parent.path.length) {\n    // Get next child key\n    const index = parent.path.shift()\n    const childKey = await fromIndex(childHDKey, index, network)\n\n    // Add the new key to the current parent key and change the pointer\n    childHDKey.children[index] = childKey\n    childHDKey = childKey\n  }\n\n  // Set the scriptType and chain for the deepest path\n  childHDKey.scriptType = hdPath.scriptType || 'P2PKH'\n  childHDKey.chain = hdPath.chain || 'external'\n\n  return parentKeys\n}\n\nexport const fromPaths = async (\n  parentKey: HDKeyPair | string,\n  hdPaths: Array<HDPath>,\n  network?: string\n): Promise<HDKeyPair> => {\n  // If we get a seed create a master hd key from it\n  if (typeof parentKey === 'string') {\n    parentKey = await fromSeed(parentKey, network)\n  }\n\n  // Create All missing key paths\n  for (const hdPath of hdPaths) {\n    parentKey = await fromPath(parentKey, hdPath)\n  }\n\n  return parentKey\n}\n\nexport const fromString = (\n  extendedKey: string,\n  hdPath?: HDPath,\n  network?: string\n): HDKeyPair => {\n  const keyPair: ExtendedKeyPair = ExtendedKey.fromString(extendedKey, network)\n  return fromExtendedKey(keyPair, hdPath)\n}\n\nexport const getParentKey = (\n  parentKey: HDKeyPair,\n  path: Path\n): { key: HDKeyPair, path: Path } => {\n  const tempPath = [...path]\n  tempPath.shift()\n  while (parentKey.children[tempPath[0]] && tempPath.length) {\n    parentKey = parentKey.children[tempPath.shift()]\n  }\n  return { key: parentKey, path: tempPath }\n}\n\nexport const getKey = (parentKey: HDKeyPair, path: Path): HDKeyPair | null => {\n  const tempPath = [...path]\n  tempPath.shift()\n  while (parentKey && tempPath.length) {\n    parentKey = parentKey.children[tempPath.shift()]\n  }\n  return parentKey\n}\n\nexport const toString = ExtendedKey.toString\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as HDKey from '../../src/hd/hdKey.js'\nimport fixtures from './fixtures/hdKey.json'\n\nconst HDKeyFixtures = fixtures\nconst network = 'main'\n\ndescribe('Testing HD Key', function () {\n  HDKeyFixtures.fromSeed.forEach(test => {\n    it(`Creating HD key from phrase ${test[0]}`, async function () {\n      const childKey = await HDKey.fromSeed(test[1])\n      const xkey = HDKey.toString(childKey)\n      assert.deepEqual(xkey, test[2])\n    })\n  })\n  HDKeyFixtures.fromString.forEach(test => {\n    it(`Creating HD key from xkey ${test[0]} with path ${test[1]}`, function () {\n      const opts = {}\n      if (test[1]) opts.path = test[1].split('/')\n      const hdKey = HDKey.fromString(test[0], opts)\n      assert.equal(hdKey.hardened, test[2])\n      assert.equal(hdKey.path.join('/'), test[3])\n    })\n  })\n  HDKeyFixtures.fromStringErrors.forEach(test => {\n    it(`Error on Creating HD key with error type ${test[2]}`, function () {\n      try {\n        HDKey.fromString(test[0], { path: test[1].split('/') })\n      } catch (e) {\n        assert.equal(e.message, test[2])\n      }\n    })\n  })\n  HDKeyFixtures.fromPath.forEach(test => {\n    it(`Deriving HD key from xkey ${test[0]} with path ${\n      test[1]\n    }`, async function () {\n      const path = test[1].split('/')\n      const parentKey = HDKey.fromString(test[0])\n      let hdKey = await HDKey.fromPath(parentKey, { path })\n      path.shift()\n      let testIndex = 2\n      while (path.length) {\n        const index = path.shift()\n        hdKey = hdKey.children[index]\n        const xprivkey = HDKey.toString(hdKey)\n        const xpubkey = HDKey.toString(hdKey, network, true)\n        assert.equal(xprivkey, test[testIndex][0], 'xpriv')\n        assert.equal(xpubkey, test[testIndex][1], 'xpub')\n        testIndex++\n      }\n    })\n  })\n})\n","// @flow\n\nimport { type HDPath } from '../../types/hd.js'\nimport { networks } from '../core/networkInfo.js'\n\nexport const createPath = (\n  account: number = 0,\n  parent: HDPath = { path: ['m'] },\n  hardened?: boolean\n): HDPath => {\n  const { chain = 'external', scriptType = 'P2PKH' } = parent\n\n  const accountStr = `${account}${hardened ? \"'\" : ''}`\n  const index = chain === 'external' ? '0' : '1'\n  const path = [...parent.path, accountStr, index]\n\n  return { path, chain, scriptType }\n}\n\nexport const createPaths = (\n  purpose?: number | Array<number>,\n  coinType: number = 0,\n  account: number = 0,\n  network: string = 'main'\n): Array<HDPath> => {\n  const { HDPaths } = networks[network]\n  if (!purpose) purpose = HDPaths[0].purpose\n\n  if (Array.isArray(purpose)) {\n    const paths = []\n    for (const p of purpose) {\n      paths.push(...createPaths(p, coinType, account, network))\n    }\n    return paths\n  }\n\n  if (purpose === 32) return [createPath(account)]\n\n  const pathSettings = HDPaths.find(path => path.purpose === purpose)\n  if (!pathSettings) throw new Error(`Unknown derivation purpose ${purpose}`)\n\n  const { scriptType } = pathSettings\n  const path = ['m', `${purpose}'`, `${coinType || 0}'`]\n  const hdPath = { path, scriptType }\n  const hdPathInt = { ...hdPath, chain: 'internal' }\n\n  return [\n    createPath(account, hdPath, true),\n    createPath(account, hdPathInt, true)\n  ]\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport * as HDKey from '../../src/hd/hdKey.js'\nimport { createPaths } from '../../src/hd/path.js'\nimport fixtures from './fixtures/path.json'\n\nconst network = 'main'\n\ndescribe('Testing Bip44 HD Key path derivation', function () {\n  fixtures.createPaths.forEach(test => {\n    it(`Deriving HD key ${test[0]} from HD Settings ${\n      test[3]\n    }`, async function () {\n      const parentKey = HDKey.fromString(test[0])\n\n      let account = 0\n      let coinType = 0\n      if (test[1]) {\n        account = test[1][0]\n        coinType = test[1][1]\n      }\n      const hdPaths = createPaths(test[2], coinType, account, 'bitcoin')\n      const hdKey = await HDKey.fromPaths(parentKey, hdPaths, network)\n      let testIndex = 3\n      for (const hdPath of hdPaths) {\n        const key = HDKey.getKey(hdKey, hdPath.path)\n        if (!key) throw new Error('No Key')\n        const xprivkey = HDKey.toString(key)\n        const xpubkey = HDKey.toString(key, network, true)\n        assert.equal(xprivkey, test[testIndex++], 'xpriv')\n        assert.equal(xpubkey, test[testIndex++], 'xpub')\n      }\n    })\n  })\n})\n","// @flow\n\nimport babel from 'rollup-plugin-babel'\nimport flowEntry from 'rollup-plugin-flow-entry'\nimport json from 'rollup-plugin-json'\n\nimport packageJson from './package.json'\n\nexport default {\n  input: './index.js',\n  external: [\n    ...Object.keys(packageJson.dependencies),\n    ...Object.keys(packageJson.devDependencies),\n    'bindings',\n    'elliptic'\n  ],\n  output: [\n    { file: packageJson.main, format: 'cjs', sourcemap: true },\n    { file: packageJson.module, format: 'es', sourcemap: true }\n  ],\n  plugins: [\n    json(),\n    babel({\n      babelrc: false,\n      presets: ['@babel/preset-flow'],\n      plugins: ['@babel/plugin-proposal-object-rest-spread']\n    }),\n    flowEntry()\n  ]\n}\n","import babel from 'rollup-plugin-babel'\nimport json from 'rollup-plugin-json'\nimport multiEntry from 'rollup-plugin-multi-entry'\n\nimport config from '../rollup.config.js'\n\nconst babelOptions = {\n  babelrc: false,\n  presets: ['@babel/preset-flow'],\n  plugins: ['@babel/plugin-proposal-object-rest-spread']\n}\n\nexport default {\n  external: config.external,\n  input: './test/**/*.js',\n  output: [\n    { file: 'build/tests.cjs.js', format: 'cjs', sourcemap: true },\n    { file: 'build/tests.js', format: 'es', sourcemap: true }\n  ],\n  plugins: [multiEntry(), json(), babel(babelOptions)]\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { describe, it } from 'mocha'\n\nimport { base } from '../../src/utils/base.js'\nimport { sha512Hmac } from '../../src/utils/hash.js'\nimport fixtures from './fixtures.json'\n\nconst key =\n  '00ab0063a7ea84d7c5f4a9ad8690c69b80a2d650343fbc9266b2d73c7b26bb2cc780000020'\nconst data = '485efe44bc445946b58ba03e8da75d5cf44fc9196eaa88204667629c4e04c38d'\nconst res =\n  '405fcc33d3f409f16571e19bd27053cd1d05e74df6eba0dc93c4c0a91599052429203b410e284513e14f67287843f91875bf69986f9cebf7037e79b0b13bbdbc'\n\nconst baseFixtures = fixtures.base\n\nconst hash = sha512Hmac(key, data)\nassert.equal(hash, res)\n\nfor (const fixture in baseFixtures) {\n  describe(`Testing base ${fixture}`, function () {\n    const fixtureBase = base[fixture].check\n\n    baseFixtures[fixture].valid.forEach(({ string, payload }) => {\n      it(`Decode valid string: ${string}`, async function () {\n        const resultedPaylod = fixtureBase.decode(string)\n        assert.equal(resultedPaylod, payload)\n      })\n      it(`Encode valid payload: ${payload}`, async function () {\n        const resultedString = fixtureBase.encode(payload)\n        assert.equal(resultedString, string)\n      })\n    })\n\n    baseFixtures[fixture].invalid.forEach(({ string, exception }) => {\n      it(`Test invalid string: ${string}`, async function () {\n        try {\n          fixtureBase.decode(string)\n        } catch (e) {\n          assert.equal(e.message, exception)\n        }\n      })\n    })\n  })\n}\n","// @flow\n\nimport {\n  type LoadFunc,\n  type PersistStatus,\n  type SaveFunc\n} from '../../types/utils.js'\n\nexport const persist = (\n  save: SaveFunc,\n  load: LoadFunc | Object,\n  delay: number = 100,\n  cache: Object = {},\n  data: Object = cache,\n  status: PersistStatus = {}\n) => {\n  return new Proxy((Object.assign(() => save(cache), data): any), {\n    apply: async (target, thisArgs, args) => {\n      const updateCache = newCache => {\n        cache = newCache\n        data = newCache\n        for (const key in target) {\n          if (data[key] === undefined) {\n            delete target[key]\n          }\n        }\n        Object.assign(target, newCache)\n      }\n\n      // Try to load the cache from disk in case it never happend before\n      if (!status.loaded) {\n        const rawData = typeof load === 'function' ? await load() : load\n        updateCache({ ...rawData, ...cache })\n        status.loaded = true\n      }\n\n      // Load/Stop the cache based on the argument\n      if (args && args.length) {\n        if (typeof args[0] === 'object') updateCache({ ...args[0] })\n        else if (args[0] === 'stop') {\n          if (status.saving) {\n            clearTimeout(status.saving)\n            status.saving = null\n          }\n          status.changed = false\n          await Reflect.apply(target, target, [])\n          return\n        }\n      }\n\n      // Stop looping in case nothing changed or we already have a save timer\n      if (!status.changed || status.saving) return\n\n      // If something changed, set flags and call save\n      status.changed = false\n\n      // Set save loop after the desired delay\n      status.saving = setTimeout(() => {\n        if (status.saving) {\n          clearTimeout(status.saving)\n          status.saving = null\n        }\n        Reflect.apply(thisArgs, thisArgs, [])\n      }, delay)\n\n      await Reflect.apply(target, target, [])\n    },\n    set: (target: any, prop: string, value: any, receiver: any) => {\n      // Only update/save if the param actually changed\n      if (data[prop] !== value) {\n        Reflect.set(data, prop, value)\n        Reflect.set(target, prop, value)\n        status.changed = true\n        if (!status.saving) Reflect.apply(receiver, receiver, [])\n      }\n      return true\n    },\n    get: (target: any, prop: string) => {\n      if (prop === 'status') return status\n      // Get the value\n      const value = Reflect.get(data, prop)\n      // Return any non object values\n      if (typeof value !== 'object') return value\n      // Create a proxy from the child to trimgger saves on the top parent\n      return persist(save, load, delay, cache, value, status)\n    }\n  })\n}\n","// @flow\n\nimport { assert } from 'chai'\nimport { after, before, describe, it } from 'mocha'\n\nimport { persist } from '../../src/utils/persister.js'\nimport fixtures from './fixtures.json'\n\nconst createSave = (expected: any, delay: number, cbs: any) => {\n  let saveAttempts = -1\n  let firstSaveTime = 0\n\n  return async cacheData => {\n    if (cbs.stop) return\n    cbs.e = new Error()\n\n    assert.notEqual(cacheData, expected)\n    assert.deepEqual(cacheData, expected)\n\n    saveAttempts++\n    if (!firstSaveTime) firstSaveTime = Date.now()\n    const saveTime = Date.now() - firstSaveTime\n\n    if (delay) {\n      const minDelay = delay * saveAttempts\n      assert.isAtLeast(saveTime, minDelay)\n    }\n\n    cbs.e = null\n    // console.log(saveTime, '- SAVE -', cacheData, saveAttempts)\n  }\n}\n\nconst cbs = {}\n\nfor (const test in fixtures.persister) {\n  const testNum = test.replace('scenario ', '')\n  const { cache, delay, sets } = fixtures.persister[test]\n  const expected = JSON.parse(JSON.stringify(cache || {}))\n  const save = createSave(expected, delay, cbs)\n  const load = testNum !== '1' ? (): Object => expected : cache\n  const persistedCache = persist(save, load, delay)\n\n  describe(`Testing persister for ${test} with delay of ${delay ||\n    100}ms`, function () {\n    this.timeout(0)\n    before('Test using cache as a function', async function () {\n      cbs.stop = false\n      await persistedCache({})\n      await persistedCache(cache)\n    })\n\n    sets.map(([param, value, saveTime], i) => {\n      it(`Set '${param}' to ${value}, after ${saveTime} milliseconds`, function (done) {\n        let child = persistedCache\n        let expectedChild = expected\n\n        param = param.split('.')\n        while (param.length > 1) {\n          const key = param.shift()\n          child = child[key]\n          expectedChild = expectedChild[key]\n        }\n\n        const key = param[0]\n        const interval = !i ? saveTime : saveTime - sets[i - 1][2]\n\n        setTimeout(() => {\n          expectedChild[key] = value\n          child[key] = value\n          assert.equal(expectedChild[key], child[key])\n          done(cbs.e)\n        }, interval)\n      })\n    })\n\n    after('Stop the caceh using cache as a function', async function () {\n      cbs.stop = true\n      await persistedCache('stop')\n    })\n  })\n}\n"],"names":["lazyHandler","activeModule","get","target","prop","receiver","loadedModule","inject","Proxy","args","lazify","unsafeModule","parentModule","injectedModule","loadUnsafe","defaultModule","Object","assign","parentProxy","isHexString","hex","test","toUint8Array","hexString","Error","length","match","bytes","map","byte","parseInt","Uint8Array","fromUint8Array","reduce","str","toString","padStart","hashjs","require","digest","hash","data","uintArray","rawRes","update","resArray","digestHmac","hmac","key","uintKey","hmacHash","sha256","ripemd160","sha512Hmac","sha512","hash256","hash160","hmacSplit","left","slice","right","ALPHABETS","createCheckSumBase","base","hashFunc","encode","hexStr","checksum","checkHex","decode","baseString","payload","newChecksum","startsWith","createHexEncoder","newBase","a","Buffer","from","check","decoders","alphabet","baseDecoder","basex","bech32","bip32","purpose","scriptType","xpriv","stringPrefix","prefix","decoder","xpub","address","bip44","bip49","bip84","main","coinType","wif","HDPaths","txHash","sigHash","forks","replayProtection","forkSighash","forcedMinVersion","forkId","testnet","getHDSetting","value","network","networks","e","hdSetting","setting","Array","isArray","find","getDecoder","createInfo","info","newNetwork","set","mainSet","infoSet","concat","filter","v","i","s","indexOf","createNetworks","newInfos","infos","networkType","partialInfo","name","toLowerCase","Networks","formatFunction","func","opts","numParams","encoder","results","sync","input","output","cps","newCps","p","paramEncoder","encodeResult","res","param","waitResult","params","result","secp256k1","publicKeyCreate","signatureNormalize","signatureExport","privateKeyTweakAdd","publicKeyTweakAdd","verify","signature","sign","fromWIF","keyHex","privateKey","compress","toWIF","hexKey","console","log","toPublic","describe","keys","forEach","it","assert","equal","publicKey","HARDENED","MAX_INDEX","TWEAK_OUT_OF_RANGE_ERROR","getTweak","entropy","index","tweakPoint","chainCode","derivePublic","childKey","Secp256k1","message","includes","derivePrivate","hardened","deriveKeyPair","parentKeys","indexStr","childPublicKey","deriveFixtures","fixtures","private","expectedChildKey","Derive","deepEqual","privateWithPublic","public","MAX_DEPTH","SEED","fromSeed","seed","masterKeyPair","version","parentFingerPrint","depth","fromIndex","derivedKeyPair","fromHex","headerByte","fromString","hdKey","toHex","forcePublic","XKeyFixtures","string","base58Key","xkey","resultedXkey","ExtendedKey","resultedBase58Key","path","children","fromExtendedKey","keyPair","hdPath","parentPath","adjIndex","unshift","push","chain","parentKey","childHDPath","fromPath","parent","getParentKey","childHDKey","shift","fromPaths","hdPaths","extendedKey","tempPath","getKey","HDKeyFixtures","HDKey","split","join","fromStringErrors","testIndex","xprivkey","xpubkey","createPath","account","accountStr","createPaths","paths","pathSettings","hdPathInt","external","packageJson","dependencies","devDependencies","file","format","sourcemap","module","plugins","json","babel","babelrc","presets","flowEntry","babelOptions","config","multiEntry","baseFixtures","fixture","fixtureBase","valid","resultedPaylod","resultedString","invalid","exception","persist","save","load","delay","cache","status","apply","thisArgs","updateCache","newCache","undefined","loaded","rawData","saving","clearTimeout","changed","Reflect","setTimeout","createSave","expected","cbs","saveAttempts","firstSaveTime","cacheData","stop","notEqual","Date","now","saveTime","minDelay","isAtLeast","persister","testNum","replace","sets","JSON","parse","stringify","persistedCache","timeout","before","done","child","expectedChild","interval","after"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,WAAW,GAAGC,YAAY,KAAK;EACnCC,GAAG,EAAE,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,KAA4B;;QAE3BJ,YAAJ,EAAkB,OAAOA,YAAY,CAACG,IAAD,CAAnB,CAFa;;QAI3BA,IAAI,KAAK,QAAb,EAAuB;aACdE,YAAY,IAAI;QACrBL,YAAY,GAAGK,YAAf;;aACK,MAAMF,IAAX,IAAmBD,MAAnB,EAA2B;UACzBA,MAAM,CAACC,IAAD,CAAN,CAAaG,MAAb,CAAoBN,YAAY,CAACG,IAAD,CAAhC;;OAHJ;KAL6B;;;QAa3B,CAACD,MAAM,CAACC,IAAD,CAAX,EAAmB;MACjBD,MAAM,CAACC,IAAD,CAAN,GAAe,IAAII,KAAJ,CAAU,UAAU,GAAGC,IAAb,EAAmB;YACtC,CAACR,YAAL,EAAmBE,MAAM;eAClBF,YAAY,CAACG,IAAD,CAAZ,CAAmB,GAAGK,IAAtB,CAAP;OAFa,EAGZT,WAAW,EAHC,CAAf;;;WAKKG,MAAM,CAACC,IAAD,CAAb;;CApB4B,CAAhC;;AAwBA,AAAO,MAAMM,MAAM,GAAGC,YAAY,IAAI;QAC9BC,YAAY,GAAG,UAAUC,cAAc,GAAG,EAA3B,EAA+BC,UAAU,GAAG,IAA5C,EAAkD;UAC/DC,aAAa,GAAGD,UAAU,GAAGH,YAAY,EAAf,GAAoB,EAApD;UACML,YAAY,GAAGU,MAAM,CAACC,MAAP,CAAcF,aAAd,EAA6BF,cAA7B,CAArB;IACAK,WAAW,CAACX,MAAZ,CAAmBD,YAAnB;GAHF;;QAKMY,WAAW,GAAG,IAAIV,KAAJ,CAAUI,YAAV,EAAwBZ,WAAW,EAAnC,CAApB;SACOkB,WAAP;CAPK;;ACtBA,MAAMC,WAAW,GAAIC,GAAD,IACzB,OAAOA,GAAP,KAAe,QAAf,IAA2B,eAAeC,IAAf,CAAoBD,GAApB,CADtB;AAGP,AAAO,MAAME,YAAY,GAAIC,SAAD,IAAmC;MACzD,CAACJ,WAAW,CAACI,SAAD,CAAhB,EAA6B;UACrB,IAAIC,KAAJ,CAAW,GAAED,SAAU,sBAAvB,CAAN;;;MAEEA,SAAS,CAACE,MAAV,GAAmB,CAAnB,KAAyB,CAA7B,EAAgCF,SAAS,GAAI,IAAGA,SAAU,EAA1B;QAC1BH,GAAG,GAAGG,SAAS,CAACG,KAAV,CAAgB,SAAhB,KAA8B,EAA1C;QACMC,KAAK,GAAGP,GAAG,CAACQ,GAAJ,CAAQC,IAAI,IAAIC,QAAQ,CAACD,IAAD,EAAO,EAAP,CAAxB,CAAd;SACO,IAAIE,UAAJ,CAAeJ,KAAf,CAAP;CAPK;AAUP,AAAO,MAAMK,cAAc,GAAIL,KAAD,IAC5BA,KAAK,CAACM,MAAN,CAAa,CAACC,GAAD,EAAML,IAAN,KAAeK,GAAG,GAAGL,IAAI,CAACM,QAAL,CAAc,EAAd,EAAkBC,QAAlB,CAA2B,CAA3B,EAA8B,GAA9B,CAAlC,EAAsE,EAAtE,CADK;;ACTA,MAAMC,MAA0B,GAAI3B,MAAM,CAAC,MAChD4B,OAAO,CAAC,SAAD,CADwC,CAA1C;AAIP,AAAO,MAAMC,MAAM,GAAIC,IAAD,IAAqBC,IAAD,IAAkB;QACpDC,SAAS,GAAGpB,YAAY,CAACmB,IAAD,CAA9B;QACME,MAAM,GAAGH,IAAI,GAChBI,MADY,CACLF,SADK,EAEZH,MAFY,EAAf;QAGMM,QAAQ,GAAG,IAAId,UAAJ,CAAeY,MAAf,CAAjB;SACOX,cAAc,CAACa,QAAD,CAArB;CANK;AASP,AAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAiBP,IAAjB,KAAoC,CAC5DC,IAD4D,EAE5DO,GAF4D,KAGzD;QACGC,OAAO,GAAG3B,YAAY,CAAC0B,GAAD,CAA5B;;QACME,QAAQ,GAAG,MAAMH,IAAI,CAACP,IAAD,EAAOS,OAAP,CAA3B;;SACOV,MAAM,CAACW,QAAD,CAAN,CAAiBT,IAAjB,CAAP;CANK;AASP,AAAO,MAAMU,MAAM,GAAGZ,MAAM,CAACF,MAAM,CAACc,MAAR,CAArB;AACP,AACO,MAAMC,SAAS,GAAGb,MAAM,CAACF,MAAM,CAACe,SAAR,CAAxB;AACP,AAAO,MAAMC,UAAU,GAAGP,UAAU,CAACT,MAAM,CAACU,IAAR,EAAcV,MAAM,CAACiB,MAArB,CAA7B;AAEP,AAAO,MAAMC,OAAO,GAAId,IAAD,IAAkBU,MAAM,CAACA,MAAM,CAACV,IAAD,CAAP,CAAxC;AACP,AAAO,MAAMe,OAAO,GAAIf,IAAD,IAAkBW,SAAS,CAACD,MAAM,CAACV,IAAD,CAAP,CAA3C;AACP,AAAO,MAAMgB,SAAS,GAAG,CAACT,GAAD,EAAcP,IAAd,KAA6C;QAC9DD,IAAI,GAAGa,UAAU,CAACL,GAAD,EAAMP,IAAN,CAAvB;QACMiB,IAAI,GAAGlB,IAAI,CAACmB,KAAL,CAAW,CAAX,EAAc,EAAd,CAAb;QACMC,KAAK,GAAGpB,IAAI,CAACmB,KAAL,CAAW,EAAX,EAAe,GAAf,CAAd;SACO;IAAED,IAAF;IAAQE;GAAf;CAJK;;ACnBA,MAAMC,SAA0B,GAAG,CACxC,IADwC,EAExC,UAFwC,EAGxC,aAHwC,EAIxC,kBAJwC,EAKxC,kCALwC,EAMxC,sCANwC,EAOxC,4DAPwC,EAQxC,gEARwC,EASxC,kEATwC,CAAnC;AAYP,AAAO,MAAMC,kBAAkB,GAAG,CAChCC,IADgC,EAEhCC,QAFgC,MAGf;EACjBC,MAAM,EAAGC,MAAD,IAA4B;UAC5BC,QAAQ,GAAG,CAACH,QAAQ,IAAIT,OAAb,EAAsBW,MAAtB,CAAjB;UACME,QAAQ,GAAI,GAAEF,MAAO,GAAEC,QAAQ,CAACR,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAqB,EAAlD;WACOI,IAAI,CAACE,MAAL,CAAYG,QAAZ,CAAP;GAJe;EAMjBC,MAAM,EAAGC,UAAD,IAAgC;UAChCJ,MAAM,GAAGH,IAAI,CAACM,MAAL,CAAYC,UAAZ,CAAf;UACMC,OAAO,GAAGL,MAAM,CAACP,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAhB;UACMa,WAAW,GAAG,CAACR,QAAQ,IAAIT,OAAb,EAAsBgB,OAAtB,CAApB;UACMJ,QAAQ,GAAGD,MAAM,CAACP,KAAP,CAAa,CAAC,CAAd,CAAjB;QACIa,WAAW,CAACC,UAAZ,CAAuBN,QAAvB,CAAJ,EAAsC,OAAOI,OAAP;UAChC,IAAI/C,KAAJ,CAAU,kBAAV,CAAN;;CAf8B,CAA3B;AAmBP,AAAO,MAAMkD,gBAAgB,GAAG,CAC9BX,IAD8B,EAE9BC,QAF8B,KAGhB;QACRW,OAAO,qBAAQZ,IAAR,CAAb;;QACME,MAA+B,GAAGU,OAAO,CAACV,MAAhD;QACMI,MAA+B,GAAGM,OAAO,CAACN,MAAhD;;EACAM,OAAO,CAACV,MAAR,GAAiBW,CAAC,IAAIX,MAAM,CAACY,aAAM,CAACC,IAAP,CAAYF,CAAZ,EAAe,KAAf,CAAD,CAA5B;;EACAD,OAAO,CAACN,MAAR,GAAiBO,CAAC,IAAIP,MAAM,CAACO,CAAD,CAAN,CAAUzC,QAAV,CAAmB,KAAnB,CAAtB;;2BACYwC,OAAZ;IAAqBI,KAAK,EAAEjB,kBAAkB,CAACa,OAAD,EAAUX,QAAV;;CATzC;AAYP,AAAO,MAAMD,IAAW,GAAGF,SAAS,CAAC5B,MAAV,CAAiB,CAAC+C,QAAD,EAAWC,QAAX,KAAwB;QAC5DC,WAAW,GAAGR,gBAAgB,CAACS,KAAK,CAACF,QAAD,CAAN,CAApC;2BACYD,QAAZ;KAAuBC,QAAQ,CAACxD,MAAV,GAAmByD;;CAFhB,EAGxB,EAHwB,CAApB;;AC1DP,MAAME,MAAM,GAAGrB,IAAI,CAAC,IAAD,CAAJ,CAAWgB,KAA1B;AAEA,AAAO,MAAMM,KAAK,GAAG;EACnBC,OAAO,EAAE,EADU;EAEnBC,UAAU,EAAE,OAFO;EAGnBC,KAAK,EAAE;IACLC,YAAY,EAAE,MADT;IAELC,MAAM,EAAE,UAFH;IAGLC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;GANH;EAQnBa,IAAI,EAAE;IACJH,YAAY,EAAE,MADV;IAEJC,MAAM,EAAE,UAFJ;IAGJC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;GAXH;EAanBc,OAAO,EAAE;IACPH,MAAM,EAAE,IADD;IAEPC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;;CAfjB;AAmBP,AAAO,MAAMe,KAAK,GAAG;EACnBR,OAAO,EAAE,EADU;EAEnBC,UAAU,EAAE,OAFO;EAGnBC,KAAK,EAAE;IACLC,YAAY,EAAE,MADT;IAELC,MAAM,EAAE,UAFH;IAGLC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;GANH;EAQnBa,IAAI,EAAE;IACJH,YAAY,EAAE,MADV;IAEJC,MAAM,EAAE,UAFJ;IAGJC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;GAXH;EAanBc,OAAO,EAAE;IACPH,MAAM,EAAE,IADD;IAEPC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;;CAfjB;AAmBP,AAAO,MAAMgB,KAAK,GAAG;EACnBT,OAAO,EAAE,EADU;EAEnBC,UAAU,EAAE,aAFO;EAGnBC,KAAK,EAAE;IACLC,YAAY,EAAE,MADT;IAELC,MAAM,EAAE,UAFH;IAGLC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;GANH;EAQnBa,IAAI,EAAE;IACJH,YAAY,EAAE,MADV;IAEJC,MAAM,EAAE,UAFJ;IAGJC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;GAXH;EAanBc,OAAO,EAAE;IACPH,MAAM,EAAE,IADD;IAEPC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;;CAfjB;AAmBP,AAAO,MAAMiB,KAAK,GAAG;EACnBV,OAAO,EAAE,EADU;EAEnBC,UAAU,EAAE,QAFO;EAGnBC,KAAK,EAAE;IACLC,YAAY,EAAE,MADT;IAELC,MAAM,EAAE,UAFH;IAGLC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;GANH;EAQnBa,IAAI,EAAE;IACJH,YAAY,EAAE,MADV;IAEJC,MAAM,EAAE,UAFJ;IAGJC,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;GAXH;EAanBc,OAAO,EAAE;IACPH,MAAM,EAAE,IADD;IAEPC,OAAO,EAAEP;;CAfN;;ACrDA,MAAMa,IAAiB,GAAG;EAC/BC,QAAQ,EAAE,CADqB;EAE/BC,GAAG,EAAE;IACHT,MAAM,EAAE,IADL;IAEHD,YAAY,EAAE,GAFX;IAGHE,OAAO,EAAE5B,IAAI,CAAC,IAAD,CAAJ,CAAWgB;GALS;EAO/BqB,OAAO,EAAE,CAACN,KAAD,EAAQT,KAAR,CAPsB;EAQ/BgB,MAAM,EAAE9C,OARuB;EAS/B+C,OAAO,EAAGpE,GAAD,IAAiB2C,MAAM,CAACC,IAAP,CAAYvB,OAAO,CAACrB,GAAG,CAACC,QAAJ,CAAa,KAAb,CAAD,CAAnB,EAA0C,KAA1C,CATK;EAU/BoE,KAAK,EAAE,EAVwB;EAW/BC,gBAAgB,EAAE;IAChBC,WAAW,EAAE,IADG;IAEhBC,gBAAgB,EAAE,CAFF;IAGhBC,MAAM,EAAE;;CAdL;;ACJP,MAAMJ,KAAK,GAAG,CAAC,aAAD,EAAgB,aAAhB,EAA+B,gBAA/B,CAAd;AAEA,AAAO,MAAMN,MAAI,GAAG;EAAEG,OAAO,EAAE,CAACJ,KAAD,EAAQD,KAAR,CAAX;EAA2BQ;CAAxC;AAEP,AAAO,MAAMK,OAAO,GAAG;EACrBV,QAAQ,EAAE,CADW;EAErBC,GAAG,EAAE,IAFgB;EAGrBC,OAAO,EAAE,CACP;IACEd,OAAO,EAAE,EADX;IAEEE,KAAK,EAAE;MACLE,MAAM,EAAE,UADH;MAELD,YAAY,EAAE;KAJlB;IAMEG,IAAI,EAAE;MACJF,MAAM,EAAE,UADJ;MAEJD,YAAY,EAAE;KARlB;IAUEI,OAAO,EAAE;GAXJ,EAaP;IACEP,OAAO,EAAE,EADX;IAEEE,KAAK,EAAE;MACLE,MAAM,EAAE,UADH;MAELD,YAAY,EAAE;KAJlB;IAMEG,IAAI,EAAE;MACJF,MAAM,EAAE,UADJ;MAEJD,YAAY,EAAE;KARlB;IAUEI,OAAO,EAAE;GAvBJ,EAyBP;IACEP,OAAO,EAAE,EADX;IAEEE,KAAK,EAAE;MACLE,MAAM,EAAE,UADH;MAELD,YAAY,EAAE;KAJlB;IAMEG,IAAI,EAAE;MACJF,MAAM,EAAE,UADJ;MAEJD,YAAY,EAAE;KARlB;IAUEI,OAAO,EAAE;GAnCJ,EAqCP;IACEP,OAAO,EAAE,EADX;IAEEE,KAAK,EAAE;MACLE,MAAM,EAAE,UADH;MAELD,YAAY,EAAE;KAJlB;IAMEG,IAAI,EAAE;MACJF,MAAM,EAAE,UADJ;MAEJD,YAAY,EAAE;KARlB;IAUEI,OAAO,EAAE;GA/CJ;CAHJ;;;;;;;;;;;;;ACIA,MAAMgB,YAAY,GAAG,CAACC,KAAD,EAAaC,OAAb,KAAiD;;MAEvE,CAACA,OAAL,EAAc;SACP,MAAMA,OAAX,IAAsBC,QAAtB,EAAgC;UAC1B;eACKH,YAAY,CAACC,KAAD,EAAQC,OAAR,CAAnB;OADF,CAEE,OAAOE,CAAP,EAAU;;;UAER,IAAIzF,KAAJ,CAAU,gBAAV,CAAN;;;QAGI;IAAE4E;MAAYY,QAAQ,CAACD,OAAD,CAA5B;;OACK,MAAMG,SAAX,IAAwBd,OAAxB,EAAiC;SAC1B,MAAMpD,GAAX,IAAkBkE,SAAlB,EAA6B;YACrBC,OAAO,GAAGD,SAAS,CAAClE,GAAD,CAAzB,CAD2B;;UAGvBoE,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAJ,EAA4B;eACnBA,OAAO,CAACG,IAAR,CACL,CAAC;UAAE5B,MAAF;UAAUD;SAAX,KACEC,MAAM,KAAKoB,KAAX,IAAoBrB,YAAY,KAAKqB,KAFlC,CAAP;OAJyB;;;UAYzB,OAAOK,OAAP,KAAmB,QAAnB,KACCA,OAAO,CAACzB,MAAR,KAAmBoB,KAAnB,IAA4BK,OAAO,CAAC1B,YAAR,KAAyBqB,KADtD,CADF,EAGE;eACOI,SAAP;OAfyB;;;UAmBvBC,OAAO,KAAKL,KAAhB,EAAuB,OAAOI,SAAP;;;;QAGrB,IAAI1F,KAAJ,CAAW,gBAAesF,KAAM,iBAAgBC,OAAQ,EAAxD,CAAN;CAnCK;AAsCP,AAAO,MAAMQ,UAAU,GAAG,CAACR,OAAD,EAAkBD,KAAlB,KAAiC;QACnD;IAAEV;MAAYY,QAAQ,CAACD,OAAD,CAA5B;;OACK,MAAMG,SAAX,IAAwBd,OAAxB,EAAiC;SAC1B,MAAMpD,GAAX,IAAkBkE,SAAlB,EAA6B;YACrBvB,OAAO,GAAGuB,SAAS,CAAClE,GAAD,CAAzB;;UAEIoE,KAAK,CAACC,OAAN,CAAc1B,OAAd,CAAJ,EAA4B;eACnBA,OAAO,CAAC2B,IAAR,CACL,CAAC;UAAE5B,MAAF;UAAUD;SAAX,KACEC,MAAM,KAAKoB,KAAX,IAAoBrB,YAAY,KAAKqB,KAFlC,CAAP;;;UAMEnB,OAAO,CAACD,MAAR,KAAmBoB,KAAnB,IAA4BnB,OAAO,CAACF,YAAR,KAAyBqB,KAAzD,EAAgE;eACvDnB,OAAO,CAACA,OAAf;;;;;QAIA,IAAInE,KAAJ,CAAW,gBAAesF,KAAM,iBAAgBC,OAAQ,EAAxD,CAAN;CAlBK;AAqBP,AAAO,MAAMS,UAAU,GAAIC,IAAD,IAA4C;QAC9DC,UAAuB,GAAI,EAAjC;;OAEK,MAAMC,GAAX,IAAkB1B,IAAlB,EAAwB;UAChB2B,OAAO,GAAG3B,IAAI,CAAC0B,GAAD,CAApB;UACME,OAAO,GAAGJ,IAAI,CAACE,GAAD,CAApB;;QAEIP,KAAK,CAACC,OAAN,CAAcO,OAAd,CAAJ,EAA4B;MAC1BF,UAAU,CAACC,GAAD,CAAV,GAAkB,CAACE,OAAO,IAAI,EAAZ,EACfC,MADe,CACRF,OADQ,EAEfG,MAFe,CAER,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAaA,CAAC,CAACC,OAAF,CAAUH,CAAV,MAAiBC,CAFtB,CAAlB;KADF,MAIO,IAAI,OAAOL,OAAP,KAAmB,QAAvB,EAAiC;MACtCF,UAAU,CAACC,GAAD,CAAV,qBAAuBC,OAAvB,EAAoCC,OAAO,IAAI,EAA/C;KADK,MAEA,IAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;MACzCH,UAAU,CAACC,GAAD,CAAV,GAAkBE,OAAlB;KADK,MAEAH,UAAU,CAACC,GAAD,CAAV,GAAkBC,OAAlB;;;SAGFF,UAAP;CAlBK;AAqBP,AAAO,MAAMU,cAAc,GAAIC,QAAD,IAA2B;QACjDrB,QAAQ,GAAG;IAAEf;GAAnB;;OACK,MAAMc,OAAX,IAAsBsB,QAAtB,EAAgC;UACxBC,KAAK,GAAGD,QAAQ,CAACtB,OAAD,CAAtB;;SACK,MAAMwB,WAAX,IAA0BD,KAA1B,EAAiC;YACzBE,WAAW,GAAGF,KAAK,CAACC,WAAD,CAAzB;UACIE,IAAI,GAAG1B,OAAX;UACIwB,WAAW,KAAK,MAApB,EAA4BE,IAAI,IAAIF,WAAW,CAACG,WAAZ,EAAR;MAC5B1B,QAAQ,CAACyB,IAAD,CAAR,GAAiBjB,UAAU,CAACgB,WAAD,CAA3B;;;;SAGGxB,QAAP;CAXK;AAcP,AAAO,MAAMA,QAAsB,GAAGoB,cAAc,CAACO,QAAD,CAA7C;;ACpGA,MAAMC,cAAc,GAAG,CAC5BC,IAD4B,EAE5BC,IAA+B,GAAG,EAFN,KAGzB;QACG;IAAEC,SAAS,GAAG,CAAd;IAAiBC,OAAjB;IAA0BC,OAAO,GAAG,EAApC;IAAwCC;MAASJ,IAAvD;QACM;IAAEK,KAAK,GAAG7H,YAAV;IAAwB8H,MAAM,GAAGpH;MAAmBgH,OAAO,IAAI,EAArE;;QAEM/E,MAAM,GAAG,CAACgE,CAAD,EAAYoB,GAAG,GAAGzE,CAAC,IAAIA,CAAvB,KAA6B;QACtC,CAACqD,CAAC,EAAN,EAAU,OAAOoB,GAAP;;UACJC,MAAM,GAAIC,CAAD,IAAY;MACzBA,CAAC,CAACtB,CAAD,CAAD,GAAOkB,KAAK,CAACI,CAAC,CAACtB,CAAD,CAAF,CAAZ;aACOoB,GAAG,CAACE,CAAD,CAAV;KAFF;;WAIOtF,MAAM,CAACgE,CAAD,EAAIqB,MAAJ,CAAb;GANF;;QASME,YAAY,GAAGvF,MAAM,CAAC8E,SAAD,CAA3B;;MAEIU,YAAY,GAAIC,GAAD,IAAcN,MAAM,CAACM,GAAD,CAAvC;;MACI,CAACT,OAAL,EAAc;IACZQ,YAAY,GAAIC,GAAD,IAAcA,GAA7B;GADF,MAEO,IAAIT,OAAO,CAACxH,MAAZ,EAAoB;IACzBgI,YAAY,GAAIC,GAAD,IAAc;WACtB,MAAMC,KAAX,IAAoBV,OAApB,EAA6B;QAC3BS,GAAG,CAACC,KAAD,CAAH,GAAaP,MAAM,CAACM,GAAG,CAACC,KAAD,CAAJ,CAAnB;;;aAEKD,GAAP;KAJF;;;MAQEE,UAAU,GAAG,MAAOF,GAAP,IAAoB;IACnCA,GAAG,GAAG,MAAMA,GAAZ;WACOD,YAAY,CAACC,GAAD,CAAnB;GAFF;;MAIIR,IAAJ,EAAUU,UAAU,GAAIF,GAAD,IAAcD,YAAY,CAACC,GAAD,CAAvC;SAEH,CAAC,GAAGG,MAAJ,KAAyB;UACxBC,MAAM,GAAGjB,IAAI,CAAC,GAAGW,YAAY,CAACK,MAAD,CAAhB,CAAnB;WACOD,UAAU,CAACE,MAAD,CAAjB;GAFF;CApCK;;ACCA,MAAMC,SAAgC,GAAIrJ,MAAM,CAAC,MACtD4B,OAAO,CAAC,WAAD,CAD8C,CAAhD;AAIP,MAAM0G,OAAO,GAAG;EACdG,KAAK,EAAEvE,CAAC,IAAIC,MAAM,CAACC,IAAP,CAAYF,CAAZ,EAAe,KAAf,CADE;EAEdwE,MAAM,EAAExE,CAAC,IAAIA,CAAC,CAACzC,QAAF,CAAW,KAAX;CAFf;AAKA,AAAO,MAAM6H,eAAe,GAAGpB,cAAc,CAACmB,SAAS,CAACC,eAAX,EAA4B;EACvEhB;CAD2C,CAAtC;AAGP,AAAO,MAAMiB,kBAAkB,GAAGrB,cAAc,CAACmB,SAAS,CAACE,kBAAX,EAA+B;EAC7EjB;CAD8C,CAAzC;AAGP,AAAO,MAAMkB,eAAe,GAAGtB,cAAc,CAACmB,SAAS,CAACG,eAAX,EAA4B;EACvElB;CAD2C,CAAtC;AAGP,AAAO,MAAMmB,kBAAkB,GAAGvB,cAAc,CAACmB,SAAS,CAACI,kBAAX,EAA+B;EAC7EnB,OAD6E;EAE7ED,SAAS,EAAE;CAFmC,CAAzC;AAIP,AAAO,MAAMqB,iBAAiB,GAAGxB,cAAc,CAACmB,SAAS,CAACK,iBAAX,EAA8B;EAC3EpB,OAD2E;EAE3ED,SAAS,EAAE;CAFkC,CAAxC;AAIP,AAAO,MAAMsB,MAAM,GAAGzB,cAAc,CAACmB,SAAS,CAACM,MAAX,EAAmB;EACrDrB,OADqD;EAErDD,SAAS,EAAE,CAF0C;EAGrDE,OAAO,EAAE;CAHyB,CAA7B;AAKP,AAAO,MAAMqB,SAAS,GAAG1B,cAAc,CAACmB,SAAS,CAACQ,IAAX,EAAiB;EACtDvB,OADsD;EAEtDD,SAAS,EAAE,CAF2C;EAGtDE,OAAO,EAAE,CAAC,WAAD;CAH4B,CAAhC;;AC5BA,MAAMuB,OAAO,GAAG,CACrBrE,GADqB,EAErBY,OAAe,GAAG,MAFG,KAGyB;QACxC;IAAErB,MAAF;IAAUC;MAAYqB,QAAQ,CAACD,OAAD,CAAR,CAAkBZ,GAA9C;QACMsE,MAAM,GAAG9E,OAAO,CAACtB,MAAR,CAAe8B,GAAf,CAAf;;MACIrE,QAAQ,CAAC2I,MAAM,CAAC9G,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAR,KAAqC+B,MAAzC,EAAiD;UACzC,IAAIlE,KAAJ,CACH,sBAAqBiJ,MAAM,CAAC9G,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAmB,gBAAeoD,OAAQ,EAD5D,CAAN;;;QAII2D,UAAU,GAAGD,MAAM,CAAC9G,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAnB;MACIgH,QAAQ,GAAG,KAAf;;MACIF,MAAM,CAAChJ,MAAP,IAAiB,EAArB,EAAyB;QACnBK,QAAQ,CAAC2I,MAAM,CAAC9G,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAD,EAAuB,EAAvB,CAAR,KAAuC,CAA3C,EAA8C;YACtC,IAAInC,KAAJ,CAAW,4BAA2BiJ,MAAM,CAAC9G,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAqB,EAA3D,CAAN;;;IAEFgH,QAAQ,GAAG,IAAX;;;SAEK;IAAED,UAAF;IAAcC;GAArB;CAnBK;AAsBP,AAAO,MAAMC,KAAK,GAAG,CACnBF,UADmB,EAEnB3D,OAAe,GAAG,MAFC,EAGnB4D,QAAiB,GAAG,IAHD,KAIR;MACPD,UAAU,CAACjJ,MAAX,KAAsB,EAA1B,EAA8B,MAAM,IAAID,KAAJ,CAAW,kBAAX,CAAN;QACxB;IAAEkE,MAAF;IAAUC;MAAYqB,QAAQ,CAACD,OAAD,CAAR,CAAkBZ,GAA9C;QACM0E,MAAM,GAAI,GAAE/I,QAAQ,CAAC4D,MAAD,CAAR,CAAiBvD,QAAjB,CAA0B,EAA1B,CAA8B,GAAEuI,UAAW,GAAEC,QAAQ,GAAG,IAAH,GAAU,EAAG,EAApF;EACAG,OAAO,CAACC,GAAR,CAAYF,MAAZ;SACOlF,OAAO,CAAC1B,MAAR,CAAe4G,MAAf,CAAP;CATK;AAYP,AAAO,MAAMG,QAAQ,GAAG,OACtBN,UADsB,EAEtBC,QAAiB,GAAG,IAFE,KAGFX,eAAe,CAACU,UAAD,EAAaC,QAAb,CAH9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCP,MAAM5D,OAAO,GAAG,MAAhB;AAEAkE,cAAQ,CAAC,gBAAD,EAAmB,YAAY;EACrCC,IAAI,CAACC,OAAL,CAAa9J,IAAI,IAAI;IACnB+J,QAAE,CAAE,iCAAgC/J,IAAI,CAAC,CAAD,CAAI,EAA1C,EAA6C,YAAY;YACnD8E,GAAG,GAAG9E,IAAI,CAAC,CAAD,CAAhB;YACM;QAAEqJ,UAAF;QAAcC;UAAaH,OAAO,CAACrE,GAAD,EAAMY,OAAN,CAAxC;MACAsE,WAAM,CAACC,KAAP,CAAaX,QAAb,EAAuBtJ,IAAI,CAAC,CAAD,CAA3B;MACAgK,WAAM,CAACC,KAAP,CAAaZ,UAAb,EAAyBrJ,IAAI,CAAC,CAAD,CAA7B;KAJA,CAAF;IAOA+J,QAAE,CAAE,wCAAuC/J,IAAI,CAAC,CAAD,CAAI,EAAjD,EAAoD,kBAAkB;YAChEsJ,QAAQ,GAAGtJ,IAAI,CAAC,CAAD,CAArB;YACMqJ,UAAU,GAAGrJ,IAAI,CAAC,CAAD,CAAvB;YACMkK,SAAS,GAAG,MAAMP,QAAQ,CAACN,UAAD,EAAaC,QAAb,CAAhC;MACAU,WAAM,CAACC,KAAP,CAAaC,SAAb,EAAwBlK,IAAI,CAAC,CAAD,CAA5B;KAJA,CAAF;IAOA+J,QAAE,CAAE,sCAAqC/J,IAAI,CAAC,CAAD,CAAI,EAA/C,EAAkD,YAAY;YACxDsJ,QAAQ,GAAGtJ,IAAI,CAAC,CAAD,CAArB;YACMqJ,UAAU,GAAGrJ,IAAI,CAAC,CAAD,CAAvB;YACM8E,GAAG,GAAGyE,KAAK,CAACF,UAAD,EAAa3D,OAAb,EAAsB4D,QAAtB,CAAjB;MACAU,WAAM,CAACC,KAAP,CAAanF,GAAb,EAAkB9E,IAAI,CAAC,CAAD,CAAtB;KAJA,CAAF;GAfF;CADM,CAAR;;ACCO,MAAMmK,QAAQ,GAAG,UAAjB;AACP,AAAO,MAAMC,SAAS,GAAG,UAAlB;AACP,AAAO,MAAMC,wBAAwB,GAAG,oBAAjC;AAEP,AAAO,MAAMC,QAAQ,GAAG,OACtB3I,GADsB,EAEtB4I,OAFsB,EAGtBC,KAAc,GAAG,CAHK,KAII;MACtBA,KAAK,GAAGJ,SAAZ,EAAuB,MAAM,IAAIjK,KAAJ,CAAU,qBAAV,CAAN;EACvBwB,GAAG,IAAI6I,KAAK,CAAC1J,QAAN,CAAe,EAAf,EAAmBC,QAAnB,CAA4B,CAA5B,EAA+B,GAA/B,CAAP;QACM;IAAEsB,IAAF;IAAQE;MAAUH,SAAS,CAACT,GAAD,EAAM4I,OAAN,CAAjC;SACO;IAAEE,UAAU,EAAEpI,IAAd;IAAoBqI,SAAS,EAAEnI;GAAtC;CARK;AAWP,AAAO,MAAMoI,YAAY,GAAG,OAC1BT,SAD0B,EAE1BM,KAF0B,EAG1BD,OAH0B,KAII;MAC1BC,KAAK,IAAIL,QAAb,EAAuB;UACf,IAAIhK,KAAJ,CAAU,mDAAV,CAAN;;;MAGE;UACI;MAAEsK,UAAF;MAAcC;QAAc,MAAMJ,QAAQ,CAC9CJ,SAD8C,EAE9CK,OAF8C,EAG9CC,KAH8C,CAAhD;UAKMI,QAAQ,GAAG,MAAMC,iBAAA,CACrBX,SADqB,EAErBO,UAFqB,EAGrB,IAHqB,CAAvB;WAKO;MAAEP,SAAS,EAAEU,QAAb;MAAuBJ,KAAvB;MAA8BE;KAArC;GAXF,CAYE,OAAO9E,CAAP,EAAU;QACN,CAACA,CAAC,CAACkF,OAAF,CAAUC,QAAV,CAAmBV,wBAAnB,CAAL,EAAmD,MAAMzE,CAAN;WAC5C+E,YAAY,CAACT,SAAD,EAAYM,KAAK,GAAG,CAApB,EAAuBD,OAAvB,CAAnB;;CAvBG;AA2BP,AAAO,MAAMS,aAAa,GAAG,OAC3B3B,UAD2B,EAE3BmB,KAF2B,EAG3BD,OAH2B,EAI3BU,QAAiB,GAAG,KAJO,EAK3Bf,SAL2B,KAMI;MAC3Be,QAAQ,IAAIT,KAAK,GAAGL,QAAxB,EAAkCK,KAAK,IAAIL,QAAT;MAC9BxI,GAAG,GAAI,KAAI0H,UAAW,EAA1B;;MACImB,KAAK,GAAGL,QAAZ,EAAsB;IACpBxI,GAAG,GAAGuI,SAAS,KAAI,MAAMP,QAAQ,CAACN,UAAD,EAAa,IAAb,CAAlB,CAAf;;;MAGE;UACI;MAAEoB,UAAF;MAAcC;QAAc,MAAMJ,QAAQ,CAC9C3I,GAD8C,EAE9C4I,OAF8C,EAG9CC,KAH8C,CAAhD;UAKMI,QAAQ,GAAG,MAAMC,kBAAA,CAA6BxB,UAA7B,EAAyCoB,UAAzC,CAAvB;WACO;MAAEpB,UAAU,EAAEuB,QAAd;MAAwBJ,KAAxB;MAA+BE;KAAtC;GAPF,CAQE,OAAO9E,CAAP,EAAU;QACN,CAACA,CAAC,CAACkF,OAAF,CAAUC,QAAV,CAAmBV,wBAAnB,CAAL,EAAmD,MAAMzE,CAAN;QAC/C4E,KAAK,GAAGJ,SAAZ,EAAuBI,KAAK,IAAIL,QAAT;WAChBa,aAAa,CAAC3B,UAAD,EAAamB,KAAK,GAAG,CAArB,EAAwBD,OAAxB,EAAiCU,QAAjC,EAA2Cf,SAA3C,CAApB;;CAxBG;AA4BP,AAAO,MAAMgB,aAAa,GAAG,OAC3BC,UAD2B,EAE3BC,QAAiB,GAAG,GAFO,KAGC;QACtBH,QAAQ,GAAGG,QAAQ,CAACA,QAAQ,CAAChL,MAAT,GAAkB,CAAnB,CAAR,KAAkC,GAAnD;QACMoK,KAAK,GAAGS,QAAQ,GAAGxK,QAAQ,CAAC2K,QAAQ,CAAC9I,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAD,CAAX,GAAqC7B,QAAQ,CAAC2K,QAAD,CAAnE;QACM;IAAEV,SAAF;IAAarB,UAAb;IAAyBa;MAAciB,UAA7C;;MAEI9B,UAAJ,EAAgB;UACRuB,QAAQ,GAAG,MAAMI,aAAa,CAClC3B,UADkC,EAElCmB,KAFkC,EAGlCE,SAHkC,EAIlCO,QAJkC,EAKlCf,SALkC,CAApC;UAOMmB,cAAc,GAAG,MAAM1B,QAAQ,CAACiB,QAAQ,CAACvB,UAAV,EAAsB,IAAtB,CAArC;6BACYuB,QAAZ;MAAsBV,SAAS,EAAEmB;;GATnC,MAUO,IAAIJ,QAAJ,EAAc;UACb,IAAI9K,KAAJ,CAAU,uDAAV,CAAN;GAhB0B;;;SAmBrBwK,YAAY,CAACT,SAAD,EAAYM,KAAZ,EAAmBE,SAAnB,CAAnB;CAtBK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EP,MAAMY,cAAc,GAAGC,QAAvB;AAEA3B,cAAQ,CAAC,wBAAD,EAA2B,YAAY;EAC7C0B,cAAc,CAACE,OAAf,CAAuB1B,OAAvB,CAA+B9J,IAAI,IAAI;IACrC+J,QAAE,CAAE,2CAA0C/J,IAAI,CAAC,CAAD,CAAI,cACpDA,IAAI,CAAC,CAAD,CACL,EAFC,EAEE,kBAAkB;YACdqJ,UAAU,GAAGrJ,IAAI,CAAC,CAAD,CAAvB;YACM0K,SAAS,GAAG1K,IAAI,CAAC,CAAD,CAAtB;YACMwK,KAAK,GAAGxK,IAAI,CAAC,CAAD,CAAlB;YACMyL,gBAAgB,GAAG;QACvBpC,UAAU,EAAErJ,IAAI,CAAC,CAAD,CADO;QAEvB0K,SAAS,EAAE1K,IAAI,CAAC,CAAD,CAFQ;QAGvBwK,KAAK,EAAExK,IAAI,CAAC,CAAD;OAHb;YAKMiL,QAAQ,GAAGjL,IAAI,CAAC,CAAD,CAArB;YACM4K,QAAQ,GAAG,MAAMc,aAAA,CACrBrC,UADqB,EAErBmB,KAFqB,EAGrBE,SAHqB,EAIrBO,QAJqB,CAAvB;MAMAjB,WAAM,CAAC2B,SAAP,CAAiBf,QAAjB,EAA2Ba,gBAA3B;KAlBA,CAAF;GADF;EAuBAH,cAAc,CAACM,iBAAf,CAAiC9B,OAAjC,CAAyC9J,IAAI,IAAI;IAC/C+J,QAAE,CAAE,wCAAuC/J,IAAI,CAAC,CAAD,CAAI,cACjDA,IAAI,CAAC,CAAD,CACL,EAFC,EAEE,kBAAkB;YACdqJ,UAAU,GAAGrJ,IAAI,CAAC,CAAD,CAAvB;YACM0K,SAAS,GAAG1K,IAAI,CAAC,CAAD,CAAtB;YACMwK,KAAK,GAAGxK,IAAI,CAAC,CAAD,CAAlB;YACMyL,gBAAgB,GAAG;QACvBpC,UAAU,EAAErJ,IAAI,CAAC,CAAD,CADO;QAEvB0K,SAAS,EAAE1K,IAAI,CAAC,CAAD,CAFQ;QAGvBwK,KAAK,EAAExK,IAAI,CAAC,CAAD;OAHb;YAKMkK,SAAS,GAAGlK,IAAI,CAAC,CAAD,CAAtB;YACM4K,QAAQ,GAAG,MAAMc,aAAA,CACrBrC,UADqB,EAErBmB,KAFqB,EAGrBE,SAHqB,EAIrB,KAJqB,EAKrBR,SALqB,CAAvB;MAOAF,WAAM,CAAC2B,SAAP,CAAiBf,QAAjB,EAA2Ba,gBAA3B;KAnBA,CAAF;GADF;EAwBAH,cAAc,CAACO,MAAf,CAAsB/B,OAAtB,CAA8B9J,IAAI,IAAI;IACpC+J,QAAE,CAAE,uBAAsB/J,IAAI,CAAC,CAAD,CAAI,cAAaA,IAAI,CAAC,CAAD,CAAI,EAArD,EAAwD,kBAAkB;YACpEkK,SAAS,GAAGlK,IAAI,CAAC,CAAD,CAAtB;YACM0K,SAAS,GAAG1K,IAAI,CAAC,CAAD,CAAtB;YACMwK,KAAK,GAAGxK,IAAI,CAAC,CAAD,CAAlB;YACMyL,gBAAgB,GAAG;QACvBvB,SAAS,EAAElK,IAAI,CAAC,CAAD,CADQ;QAEvB0K,SAAS,EAAE1K,IAAI,CAAC,CAAD,CAFQ;QAGvBwK,KAAK,EAAExK,IAAI,CAAC,CAAD;OAHb;YAKM4K,QAAQ,GAAG,MAAMc,YAAA,CACrBxB,SADqB,EAErBM,KAFqB,EAGrBE,SAHqB,CAAvB;MAKAV,WAAM,CAAC2B,SAAP,CAAiBf,QAAjB,EAA2Ba,gBAA3B;KAdA,CAAF;GADF;CAhDM,CAAR;;ACIA,MAAMK,SAAS,GAAG,IAAlB;AACA,MAAMC,IAAI,GAAG,0BAAb;AAEA,AAAO,MAAMC,QAAQ,GAAG,OACtBC,IADsB,EAEtBvG,OAAe,GAAG,MAFI,EAGtBzB,OAAe,GAAG,EAHI,KAIO;QACvB;IAAE5B,IAAF;IAAQE;MAAUH,SAAS,CAAC6J,IAAD,EAAOF,IAAP,CAAjC;QACM7B,SAAS,GAAG,MAAMP,QAAQ,CAACtH,IAAD,EAAO,IAAP,CAAhC;QACM6J,aAAa,GAAG;IACpB7C,UAAU,EAAEhH,IADQ;IAEpB6H,SAFoB;IAGpBQ,SAAS,EAAEnI,KAHS;IAIpBiI,KAAK,EAAE;GAJT;QAMM2B,OAAO,GAAG3G,YAAY,CAACvB,OAAD,EAAUyB,OAAV,CAAZ,CAA+BvB,KAA/B,CAAqCE,MAArD;2BAEK6H,aADL;IAEEE,iBAAiB,EAAE,CAFrB;IAGED,OAAO,EAAE1L,QAAQ,CAAC0L,OAAD,CAHnB;IAIEE,KAAK,EAAE;;CAlBJ;AAsBP,AAAO,MAAMC,SAAS,GAAG,OACvBnB,UADuB,EAEvBX,KAFuB,KAGM;MACzBW,UAAU,CAACkB,KAAX,IAAoBP,SAAxB,EAAmC,MAAM,IAAI3L,KAAJ,CAAU,iBAAV,CAAN;QAE7BoM,cAA8B,GAAG,MAAMrB,aAAa,CAACC,UAAD,EAAaX,KAAb,CAA1D;;MACI,CAACW,UAAU,CAACjB,SAAhB,EAA2B;QACrB,CAACiB,UAAU,CAAC9B,UAAhB,EAA4B;YACpB,IAAIlJ,KAAJ,CAAU,8CAAV,CAAN;;;IAEFgL,UAAU,CAACjB,SAAX,GAAuB,MAAMP,QAAQ,CAACwB,UAAU,CAAC9B,UAAZ,EAAwB,IAAxB,CAArC;;;QAEI+C,iBAAiB,GAAG,MAAMjK,OAAO,CAACgJ,UAAU,CAACjB,SAAZ,CAAvC;2BAGKqC,cADL;IAEEH,iBAAiB,EAAE3L,QAAQ,CAAC2L,iBAAiB,CAAC9J,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B,CAAD,EAAgC,EAAhC,CAF7B;IAGE6J,OAAO,EAAEhB,UAAU,CAACgB,OAHtB;IAIEE,KAAK,EAAElB,UAAU,CAACkB,KAAX,GAAmB;;CAnBvB;AAuBP,AAAO,MAAMG,OAAO,GAAG,CAACpD,MAAD,EAAiB1D,OAAjB,KAAuD;;MAExE0D,MAAM,CAAChJ,MAAP,KAAkB,GAAtB,EAA2B,MAAM,IAAID,KAAJ,CAAU,mBAAV,CAAN,CAFiD;;QAKtEgM,OAAO,GAAG1L,QAAQ,CAAC2I,MAAM,CAAC9G,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAxB;QACM;IAAE6B,KAAF;IAASI;MAASiB,YAAY,CAAC2G,OAAD,EAAUzG,OAAV,CAApC,CAN4E;;QAStE+G,UAAU,GAAGhM,QAAQ,CAAC2I,MAAM,CAAC9G,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAD,EAAuB,EAAvB,CAA3B;QAEMX,GAAG,GAAG,EAAZ;;MAEI8K,UAAU,KAAK,CAAf,IAAoBN,OAAO,KAAKhI,KAAK,CAACE,MAA1C,EAAkD;IAChD1C,GAAG,CAAC0H,UAAJ,GAAiBD,MAAM,CAAC9G,KAAP,CAAa,EAAb,EAAiB,GAAjB,CAAjB;GADF,MAEO,IACL,CAACmK,UAAU,KAAK,CAAf,IAAoBA,UAAU,KAAK,CAApC,KACAN,OAAO,KAAK5H,IAAI,CAACF,MAFZ,EAGL;IACA1C,GAAG,CAACuI,SAAJ,GAAgBd,MAAM,CAAC9G,KAAP,CAAa,EAAb,EAAiB,GAAjB,CAAhB;GAJK,MAKA;UACC,IAAInC,KAAJ,CAAU,gBAAV,CAAN;;;2BAIGwB,GADL;IAEEwK,OAFF;IAGEE,KAAK,EAAE5L,QAAQ,CAAC2I,MAAM,CAAC9G,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAD,EAAsB,EAAtB,CAHjB;IAIE8J,iBAAiB,EAAE3L,QAAQ,CAAC2I,MAAM,CAAC9G,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAD,EAAuB,EAAvB,CAJ7B;IAKEkI,KAAK,EAAE/J,QAAQ,CAAC2I,MAAM,CAAC9G,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAD,EAAuB,EAAvB,CALjB;IAMEoI,SAAS,EAAEtB,MAAM,CAAC9G,KAAP,CAAa,EAAb,EAAiB,EAAjB;;CA9BR;AAkCP,AAAO,MAAMoK,UAAU,GAAG,CACxBC,KADwB,EAExBjH,OAAe,GAAG,MAFM,KAGJ;QACd0D,MAAM,GAAGlD,UAAU,CAACR,OAAD,EAAUiH,KAAK,CAACrK,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAV,CAAV,CAAuCU,MAAvC,CAA8C2J,KAA9C,CAAf;SACOH,OAAO,CAACpD,MAAD,EAAS1D,OAAT,CAAd;CALK;AAQP,AAAO,MAAMkH,KAAK,GAAG,CACnBD,KADmB,EAEnBjH,OAAe,GAAG,MAFC,EAGnBmH,WAAoB,GAAG,KAHJ,KAIR;QACL;IAAEtI,IAAF;IAAQJ;MAAUqB,YAAY,CAACmH,KAAK,CAACR,OAAP,EAAgBzG,OAAhB,CAApC;QACM;IAAE2D,UAAF;IAAca;MAAcyC,KAAlC;MACIhL,GAAG,GAAGuI,SAAV;MACIiC,OAAO,GAAG5H,IAAI,CAACF,MAAnB;;MAEIgF,UAAU,IAAI,CAACwD,WAAnB,EAAgC;IAC9BlL,GAAG,GAAI,KAAI0H,UAAW,EAAtB;IACA8C,OAAO,GAAGhI,KAAK,CAACE,MAAhB;;;SAIA5D,QAAQ,CAAC0L,OAAD,CAAR,CAAkBrL,QAAlB,CAA2B,EAA3B,EAA+BC,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,IACA4L,KAAK,CAACN,KAAN,CAAYvL,QAAZ,CAAqB,EAArB,EAAyBC,QAAzB,CAAkC,CAAlC,EAAqC,GAArC,CADA,GAEA4L,KAAK,CAACP,iBAAN,CAAwBtL,QAAxB,CAAiC,EAAjC,EAAqCC,QAArC,CAA8C,CAA9C,EAAiD,GAAjD,CAFA,GAGA4L,KAAK,CAACnC,KAAN,CAAY1J,QAAZ,CAAqB,EAArB,EAAyBC,QAAzB,CAAkC,CAAlC,EAAqC,GAArC,CAHA,GAIA4L,KAAK,CAACjC,SAJN,GAKA/I,GANF;CAfK;AAyBP,AAAO,MAAMb,QAAQ,GAAG,CACtB6L,KADsB,EAEtBjH,OAAe,GAAG,MAFI,EAGtBmH,WAAoB,GAAG,KAHD,KAIX;QACLzD,MAAM,GAAGwD,KAAK,CAACD,KAAD,EAAQjH,OAAR,EAAiBmH,WAAjB,CAApB;SACO3G,UAAU,CAACR,OAAD,EAAUiH,KAAK,CAACR,OAAhB,CAAV,CAAmCvJ,MAAnC,CAA0CwG,MAA1C,CAAP;CANK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHP,MAAM0D,YAAY,GAAGvB,UAArB;AACA,MAAM7F,SAAO,GAAG,MAAhB;AAEAkE,cAAQ,CAAE,gCAAF,EAAmC,YAAY;EACrDkD,YAAY,CAACC,MAAb,CAAoBjD,OAApB,CAA4B9J,IAAI,IAAI;UAC5BgN,SAAS,GAAGhN,IAAI,CAAC,CAAD,CAAtB;QACIiN,IAAI,GAAG;MACTd,OAAO,EAAEnM,IAAI,CAAC,CAAD,CADJ;MAETqM,KAAK,EAAErM,IAAI,CAAC,CAAD,CAFF;MAGToM,iBAAiB,EAAEpM,IAAI,CAAC,CAAD,CAHd;MAITwK,KAAK,EAAExK,IAAI,CAAC,CAAD,CAJF;MAKT0K,SAAS,EAAE1K,IAAI,CAAC,CAAD;KALjB;QAQIA,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAAR,KAAmB,EAAvB,EAA2B6M,IAAI,qBAAQA,IAAR;MAAc5D,UAAU,EAAErJ,IAAI,CAAC,CAAD;MAAlC;QACvBA,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAAR,KAAmB,EAAvB,EAA2B6M,IAAI,qBAAQA,IAAR;MAAc/C,SAAS,EAAElK,IAAI,CAAC,CAAD;MAAjC;IAE3B+J,QAAE,CAAE,6BAA4B/J,IAAI,CAAC,CAAD,CAAI,EAAtC,EAAyC,YAAY;YAC/CkN,YAAY,GAAGC,UAAA,CAAuBH,SAAvB,EAAkCtH,SAAlC,CAArB;MACAsE,WAAM,CAAC2B,SAAP,CAAiBuB,YAAjB,EAA+BD,IAA/B;KAFA,CAAF;IAKAlD,QAAE,CAAE,2BAA0B/J,IAAI,CAAC,CAAD,CAAI,EAApC,EAAuC,YAAY;UAC/C,CAACiN,IAAI,CAAC/C,SAAV,EAAqB+C,IAAI,qBAAQA,IAAR;QAAc/C,SAAS,EAAG,KAAIlK,IAAI,CAAC,CAAD,CAAI;QAA1C;YACfoN,iBAAiB,GAAGD,QAAA,CAAqBF,IAArB,EAA2BvH,SAA3B,CAA1B;MACAsE,WAAM,CAACC,KAAP,CAAamD,iBAAb,EAAgCJ,SAAhC;KAHA,CAAF;GAlBF;CADM,CAAR;;ACCO,MAAMhB,UAAQ,GAAG,OACtBC,IADsB,EAEtBvG,OAFsB,KAGC;QACjBwG,aAAa,GAAG,MAAMiB,QAAA,CAAqBlB,IAArB,EAA2BvG,OAA3B,CAA5B;2BAEKwG,aADL;IAEEjB,QAAQ,EAAE,KAFZ;IAGEoC,IAAI,EAAE,CAAC,GAAD,CAHR;IAIEC,QAAQ,EAAE;;CATP;AAaP,AAAO,MAAMC,eAAe,GAAG,CAC7BC,OAD6B,EAE7BC,MAF6B,KAGf;QACRxC,QAAQ,GAAGuC,OAAO,CAAChD,KAAR,IAAiBL,QAAlC;QACM;IAAEkD,IAAI,EAAEK,UAAU,GAAG;MAAOD,MAAM,IAAI,EAA5C;MACIrC,QAAQ,GAAG,GAAf;QAEMiC,IAAI,GAAG,CAAC,GAAGK,UAAJ,CAAb;;MACIF,OAAO,CAACnB,KAAZ,EAAmB;UACXsB,QAAQ,GAAG1C,QAAQ,GAAGuC,OAAO,CAAChD,KAAR,GAAgBL,QAAnB,GAA8BqD,OAAO,CAAChD,KAA/D;IACAY,QAAQ,GAAI,GAAEuC,QAAS,GAAE1C,QAAQ,GAAG,GAAH,GAAS,EAAG,EAA7C;;;MAGEoC,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqBA,IAAI,CAACO,OAAL,CAAa,GAAb;;MACjBP,IAAI,CAACjN,MAAL,KAAgBoN,OAAO,CAACnB,KAA5B,EAAmC;IACjCgB,IAAI,CAACQ,IAAL,CAAUzC,QAAV;;;MAEEiC,IAAI,CAACjN,MAAL,KAAgBoN,OAAO,CAACnB,KAAR,GAAgB,CAApC,EAAuC;UAC/B,IAAIlM,KAAJ,CAAU,0BAAV,CAAN;;;MAEEkN,IAAI,CAACA,IAAI,CAACjN,MAAL,GAAc,CAAf,CAAJ,KAA0BgL,QAA9B,EAAwC;UAChC,IAAIjL,KAAJ,CAAU,qBAAV,CAAN;;;QAGIwM,KAAgB,qBAAQa,OAAR;IAAiBH,IAAjB;IAAuBpC,QAAvB;IAAiCqC,QAAQ,EAAE;IAAjE;;QACM;IAAEpJ,UAAF;IAAc4J;MAAUL,MAAM,IAAI,EAAxC;MACIvJ,UAAJ,EAAgByI,KAAK,CAACzI,UAAN,GAAmBA,UAAnB;MACZ4J,KAAJ,EAAWnB,KAAK,CAACmB,KAAN,GAAcA,KAAd;SAEJnB,KAAP;CA9BK;AAiCP,AAAO,MAAML,WAAS,GAAG,OACvByB,SADuB,EAEvBvD,KAFuB,EAGvB9E,OAHuB,KAIA;;QAEjBkF,QAAQ,GAAG,MAAMuC,SAAA,CAAsBY,SAAtB,EAAiCvD,KAAjC,CAAvB;;QACMwD,WAAW,qBACZD,SADY;IAEfV,IAAI,EAAE,CAAC,GAAGU,SAAS,CAACV,IAAd,EAAoB7C,KAApB,CAFS;;IAAjB;;SAKO+C,eAAe,CAAC3C,QAAD,EAAWoD,WAAX,CAAtB;CAZK;AAeP,AAAO,MAAMC,QAAQ,GAAG,OACtB9C,UADsB,EAEtBsC,MAFsB,EAGtB/H,OAHsB,KAIC;;QAEjBwI,MAAM,GAAGC,YAAY,CAAChD,UAAD,EAAasC,MAAM,CAACJ,IAApB,CAA3B,CAFuB;;MAInBe,UAAU,GAAGF,MAAM,CAACvM,GAAxB;;SAEOuM,MAAM,CAACb,IAAP,CAAYjN,MAAnB,EAA2B;;UAEnBoK,KAAK,GAAG0D,MAAM,CAACb,IAAP,CAAYgB,KAAZ,EAAd;UACMzD,QAAQ,GAAG,MAAM0B,WAAS,CAAC8B,UAAD,EAAa5D,KAAb,EAAoB9E,OAApB,CAAhC,CAHyB;;IAMzB0I,UAAU,CAACd,QAAX,CAAoB9C,KAApB,IAA6BI,QAA7B;IACAwD,UAAU,GAAGxD,QAAb;GAbqB;;;EAiBvBwD,UAAU,CAAClK,UAAX,GAAwBuJ,MAAM,CAACvJ,UAAP,IAAqB,OAA7C;EACAkK,UAAU,CAACN,KAAX,GAAmBL,MAAM,CAACK,KAAP,IAAgB,UAAnC;SAEO3C,UAAP;CAxBK;AA2BP,AAAO,MAAMmD,SAAS,GAAG,OACvBP,SADuB,EAEvBQ,OAFuB,EAGvB7I,OAHuB,KAIA;;MAEnB,OAAOqI,SAAP,KAAqB,QAAzB,EAAmC;IACjCA,SAAS,GAAG,MAAM/B,UAAQ,CAAC+B,SAAD,EAAYrI,OAAZ,CAA1B;GAHqB;;;OAOlB,MAAM+H,MAAX,IAAqBc,OAArB,EAA8B;IAC5BR,SAAS,GAAG,MAAME,QAAQ,CAACF,SAAD,EAAYN,MAAZ,CAA1B;;;SAGKM,SAAP;CAfK;AAkBP,AAAO,MAAMrB,YAAU,GAAG,CACxB8B,WADwB,EAExBf,MAFwB,EAGxB/H,OAHwB,KAIV;QACR8H,OAAwB,GAAGL,UAAA,CAAuBqB,WAAvB,EAAoC9I,OAApC,CAAjC;SACO6H,eAAe,CAACC,OAAD,EAAUC,MAAV,CAAtB;CANK;AASP,AAAO,MAAMU,YAAY,GAAG,CAC1BJ,SAD0B,EAE1BV,IAF0B,KAGS;QAC7BoB,QAAQ,GAAG,CAAC,GAAGpB,IAAJ,CAAjB;EACAoB,QAAQ,CAACJ,KAAT;;SACON,SAAS,CAACT,QAAV,CAAmBmB,QAAQ,CAAC,CAAD,CAA3B,KAAmCA,QAAQ,CAACrO,MAAnD,EAA2D;IACzD2N,SAAS,GAAGA,SAAS,CAACT,QAAV,CAAmBmB,QAAQ,CAACJ,KAAT,EAAnB,CAAZ;;;SAEK;IAAE1M,GAAG,EAAEoM,SAAP;IAAkBV,IAAI,EAAEoB;GAA/B;CATK;AAYP,AAAO,MAAMC,MAAM,GAAG,CAACX,SAAD,EAAuBV,IAAvB,KAAwD;QACtEoB,QAAQ,GAAG,CAAC,GAAGpB,IAAJ,CAAjB;EACAoB,QAAQ,CAACJ,KAAT;;SACON,SAAS,IAAIU,QAAQ,CAACrO,MAA7B,EAAqC;IACnC2N,SAAS,GAAGA,SAAS,CAACT,QAAV,CAAmBmB,QAAQ,CAACJ,KAAT,EAAnB,CAAZ;;;SAEKN,SAAP;CANK;AASP,AAAO,MAAMjN,UAAQ,GAAGqM,QAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5IP,MAAMwB,aAAa,GAAGpD,UAAtB;AACA,MAAM7F,SAAO,GAAG,MAAhB;AAEAkE,cAAQ,CAAC,gBAAD,EAAmB,YAAY;EACrC+E,aAAa,CAAC3C,QAAd,CAAuBlC,OAAvB,CAA+B9J,IAAI,IAAI;IACrC+J,QAAE,CAAE,+BAA8B/J,IAAI,CAAC,CAAD,CAAI,EAAxC,EAA2C,kBAAkB;YACvD4K,QAAQ,GAAG,MAAMgE,UAAA,CAAe5O,IAAI,CAAC,CAAD,CAAnB,CAAvB;YACMiN,IAAI,GAAG2B,UAAA,CAAehE,QAAf,CAAb;MACAZ,WAAM,CAAC2B,SAAP,CAAiBsB,IAAjB,EAAuBjN,IAAI,CAAC,CAAD,CAA3B;KAHA,CAAF;GADF;EAOA2O,aAAa,CAACjC,UAAd,CAAyB5C,OAAzB,CAAiC9J,IAAI,IAAI;IACvC+J,QAAE,CAAE,6BAA4B/J,IAAI,CAAC,CAAD,CAAI,cAAaA,IAAI,CAAC,CAAD,CAAI,EAA3D,EAA8D,YAAY;YACpEyH,IAAI,GAAG,EAAb;UACIzH,IAAI,CAAC,CAAD,CAAR,EAAayH,IAAI,CAAC4F,IAAL,GAAYrN,IAAI,CAAC,CAAD,CAAJ,CAAQ6O,KAAR,CAAc,GAAd,CAAZ;YACPlC,KAAK,GAAGiC,YAAA,CAAiB5O,IAAI,CAAC,CAAD,CAArB,EAA0ByH,IAA1B,CAAd;MACAuC,WAAM,CAACC,KAAP,CAAa0C,KAAK,CAAC1B,QAAnB,EAA6BjL,IAAI,CAAC,CAAD,CAAjC;MACAgK,WAAM,CAACC,KAAP,CAAa0C,KAAK,CAACU,IAAN,CAAWyB,IAAX,CAAgB,GAAhB,CAAb,EAAmC9O,IAAI,CAAC,CAAD,CAAvC;KALA,CAAF;GADF;EASA2O,aAAa,CAACI,gBAAd,CAA+BjF,OAA/B,CAAuC9J,IAAI,IAAI;IAC7C+J,QAAE,CAAE,4CAA2C/J,IAAI,CAAC,CAAD,CAAI,EAArD,EAAwD,YAAY;UAChE;QACF4O,YAAA,CAAiB5O,IAAI,CAAC,CAAD,CAArB,EAA0B;UAAEqN,IAAI,EAAErN,IAAI,CAAC,CAAD,CAAJ,CAAQ6O,KAAR,CAAc,GAAd;SAAlC;OADF,CAEE,OAAOjJ,CAAP,EAAU;QACVoE,WAAM,CAACC,KAAP,CAAarE,CAAC,CAACkF,OAAf,EAAwB9K,IAAI,CAAC,CAAD,CAA5B;;KAJF,CAAF;GADF;EASA2O,aAAa,CAACV,QAAd,CAAuBnE,OAAvB,CAA+B9J,IAAI,IAAI;IACrC+J,QAAE,CAAE,6BAA4B/J,IAAI,CAAC,CAAD,CAAI,cACtCA,IAAI,CAAC,CAAD,CACL,EAFC,EAEE,kBAAkB;YACdqN,IAAI,GAAGrN,IAAI,CAAC,CAAD,CAAJ,CAAQ6O,KAAR,CAAc,GAAd,CAAb;YACMd,SAAS,GAAGa,YAAA,CAAiB5O,IAAI,CAAC,CAAD,CAArB,CAAlB;UACI2M,KAAK,GAAG,MAAMiC,QAAA,CAAeb,SAAf,EAA0B;QAAEV;OAA5B,CAAlB;MACAA,IAAI,CAACgB,KAAL;UACIW,SAAS,GAAG,CAAhB;;aACO3B,IAAI,CAACjN,MAAZ,EAAoB;cACZoK,KAAK,GAAG6C,IAAI,CAACgB,KAAL,EAAd;QACA1B,KAAK,GAAGA,KAAK,CAACW,QAAN,CAAe9C,KAAf,CAAR;cACMyE,QAAQ,GAAGL,UAAA,CAAejC,KAAf,CAAjB;cACMuC,OAAO,GAAGN,UAAA,CAAejC,KAAf,EAAsBjH,SAAtB,EAA+B,IAA/B,CAAhB;QACAsE,WAAM,CAACC,KAAP,CAAagF,QAAb,EAAuBjP,IAAI,CAACgP,SAAD,CAAJ,CAAgB,CAAhB,CAAvB,EAA2C,OAA3C;QACAhF,WAAM,CAACC,KAAP,CAAaiF,OAAb,EAAsBlP,IAAI,CAACgP,SAAD,CAAJ,CAAgB,CAAhB,CAAtB,EAA0C,MAA1C;QACAA,SAAS;;KAfX,CAAF;GADF;CA1BM,CAAR;;ACNO,MAAMG,UAAU,GAAG,CACxBC,OAAe,GAAG,CADM,EAExBlB,MAAc,GAAG;EAAEb,IAAI,EAAE,CAAC,GAAD;CAFD,EAGxBpC,QAHwB,KAIb;QACL;IAAE6C,KAAK,GAAG,UAAV;IAAsB5J,UAAU,GAAG;MAAYgK,MAArD;QAEMmB,UAAU,GAAI,GAAED,OAAQ,GAAEnE,QAAQ,GAAG,GAAH,GAAS,EAAG,EAApD;QACMT,KAAK,GAAGsD,KAAK,KAAK,UAAV,GAAuB,GAAvB,GAA6B,GAA3C;QACMT,IAAI,GAAG,CAAC,GAAGa,MAAM,CAACb,IAAX,EAAiBgC,UAAjB,EAA6B7E,KAA7B,CAAb;SAEO;IAAE6C,IAAF;IAAQS,KAAR;IAAe5J;GAAtB;CAXK;AAcP,AAAO,MAAMoL,WAAW,GAAG,CACzBrL,OADyB,EAEzBY,QAAgB,GAAG,CAFM,EAGzBuK,OAAe,GAAG,CAHO,EAIzB1J,OAAe,GAAG,MAJO,KAKP;QACZ;IAAEX;MAAYY,QAAQ,CAACD,OAAD,CAA5B;MACI,CAACzB,OAAL,EAAcA,OAAO,GAAGc,OAAO,CAAC,CAAD,CAAP,CAAWd,OAArB;;MAEV8B,KAAK,CAACC,OAAN,CAAc/B,OAAd,CAAJ,EAA4B;UACpBsL,KAAK,GAAG,EAAd;;SACK,MAAMrH,CAAX,IAAgBjE,OAAhB,EAAyB;MACvBsL,KAAK,CAAC1B,IAAN,CAAW,GAAGyB,WAAW,CAACpH,CAAD,EAAIrD,QAAJ,EAAcuK,OAAd,EAAuB1J,OAAvB,CAAzB;;;WAEK6J,KAAP;;;MAGEtL,OAAO,KAAK,EAAhB,EAAoB,OAAO,CAACkL,UAAU,CAACC,OAAD,CAAX,CAAP;QAEdI,YAAY,GAAGzK,OAAO,CAACkB,IAAR,CAAaoH,IAAI,IAAIA,IAAI,CAACpJ,OAAL,KAAiBA,OAAtC,CAArB;MACI,CAACuL,YAAL,EAAmB,MAAM,IAAIrP,KAAJ,CAAW,8BAA6B8D,OAAQ,EAAhD,CAAN;QAEb;IAAEC;MAAesL,YAAvB;QACMnC,IAAI,GAAG,CAAC,GAAD,EAAO,GAAEpJ,OAAQ,GAAjB,EAAsB,GAAEY,QAAQ,IAAI,CAAE,GAAtC,CAAb;QACM4I,MAAM,GAAG;IAAEJ,IAAF;IAAQnJ;GAAvB;;QACMuL,SAAS,qBAAQhC,MAAR;IAAgBK,KAAK,EAAE;IAAtC;;SAEO,CACLqB,UAAU,CAACC,OAAD,EAAU3B,MAAV,EAAkB,IAAlB,CADL,EAEL0B,UAAU,CAACC,OAAD,EAAUK,SAAV,EAAqB,IAArB,CAFL,CAAP;CA3BK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVP,MAAM/J,SAAO,GAAG,MAAhB;AAEAkE,cAAQ,CAAC,sCAAD,EAAyC,YAAY;EAC3D2B,UAAQ,CAAC+D,WAAT,CAAqBxF,OAArB,CAA6B9J,IAAI,IAAI;IACnC+J,QAAE,CAAE,mBAAkB/J,IAAI,CAAC,CAAD,CAAI,qBAC5BA,IAAI,CAAC,CAAD,CACL,EAFC,EAEE,kBAAkB;YACd+N,SAAS,GAAGa,YAAA,CAAiB5O,IAAI,CAAC,CAAD,CAArB,CAAlB;UAEIoP,OAAO,GAAG,CAAd;UACIvK,QAAQ,GAAG,CAAf;;UACI7E,IAAI,CAAC,CAAD,CAAR,EAAa;QACXoP,OAAO,GAAGpP,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAV;QACA6E,QAAQ,GAAG7E,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAX;;;YAEIuO,OAAO,GAAGe,WAAW,CAACtP,IAAI,CAAC,CAAD,CAAL,EAAU6E,QAAV,EAAoBuK,OAApB,EAA6B,SAA7B,CAA3B;YACMzC,KAAK,GAAG,MAAMiC,SAAA,CAAgBb,SAAhB,EAA2BQ,OAA3B,EAAoC7I,SAApC,CAApB;UACIsJ,SAAS,GAAG,CAAhB;;WACK,MAAMvB,MAAX,IAAqBc,OAArB,EAA8B;cACtB5M,GAAG,GAAGiN,MAAA,CAAajC,KAAb,EAAoBc,MAAM,CAACJ,IAA3B,CAAZ;YACI,CAAC1L,GAAL,EAAU,MAAM,IAAIxB,KAAJ,CAAU,QAAV,CAAN;cACJ8O,QAAQ,GAAGL,UAAA,CAAejN,GAAf,CAAjB;cACMuN,OAAO,GAAGN,UAAA,CAAejN,GAAf,EAAoB+D,SAApB,EAA6B,IAA7B,CAAhB;QACAsE,WAAM,CAACC,KAAP,CAAagF,QAAb,EAAuBjP,IAAI,CAACgP,SAAS,EAAV,CAA3B,EAA0C,OAA1C;QACAhF,WAAM,CAACC,KAAP,CAAaiF,OAAb,EAAsBlP,IAAI,CAACgP,SAAS,EAAV,CAA1B,EAAyC,MAAzC;;KApBF,CAAF;GADF;CADM,CAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA,aAAe;EACblH,KAAK,EAAE,YADM;EAEb4H,QAAQ,EAAE,CACR,GAAG/P,MAAM,CAACkK,IAAP,CAAY8F,WAAW,CAACC,YAAxB,CADK,EAER,GAAGjQ,MAAM,CAACkK,IAAP,CAAY8F,WAAW,CAACE,eAAxB,CAFK,EAGR,UAHQ,EAIR,UAJQ,CAFG;EAQb9H,MAAM,EAAE,CACN;IAAE+H,IAAI,EAAEH,WAAW,CAAC/K,IAApB;IAA0BmL,MAAM,EAAE,KAAlC;IAAyCC,SAAS,EAAE;GAD9C,EAEN;IAAEF,IAAI,EAAEH,WAAW,CAACM,MAApB;IAA4BF,MAAM,EAAE,IAApC;IAA0CC,SAAS,EAAE;GAF/C,CARK;EAYbE,OAAO,EAAE,CACPC,IAAI,EADG,EAEPC,KAAK,CAAC;IACJC,OAAO,EAAE,KADL;IAEJC,OAAO,EAAE,CAAC,oBAAD,CAFL;IAGJJ,OAAO,EAAE,CAAC,2CAAD;GAHN,CAFE,EAOPK,SAAS,EAPF;CAZX;;ACFA,MAAMC,YAAY,GAAG;EACnBH,OAAO,EAAE,KADU;EAEnBC,OAAO,EAAE,CAAC,oBAAD,CAFU;EAGnBJ,OAAO,EAAE,CAAC,2CAAD;CAHX;AAMA,CAAe;EACbR,QAAQ,EAAEe,MAAM,CAACf,QADJ;EAEb5H,KAAK,EAAE,gBAFM;EAGbC,MAAM,EAAE,CACN;IAAE+H,IAAI,EAAE,oBAAR;IAA8BC,MAAM,EAAE,KAAtC;IAA6CC,SAAS,EAAE;GADlD,EAEN;IAAEF,IAAI,EAAE,gBAAR;IAA0BC,MAAM,EAAE,IAAlC;IAAwCC,SAAS,EAAE;GAF7C,CAHK;EAObE,OAAO,EAAE,CAACQ,UAAU,EAAX,EAAeP,IAAI,EAAnB,EAAukEAAb;AACA,MAAMiH,GAAG,GACP,kIADF;AAGA,MAAMsI,YAAY,GAAGpF,UAAQ,CAAC7I,IAA9B;AAEA,MAAMvB,IAAI,GAAGa,UAAU,CAACL,GAAD,EAAMP,IAAN,CAAvB;AACA4I,WAAM,CAACC,KAAP,CAAa9I,IAAb,EAAmBkH,GAAnB;;AAEA,KAAK,MAAMuI,OAAX,IAAsBD,YAAtB,EAAoC;EAClC/G,cAAQ,CAAE,gBAAegH,OAAQ,EAAzB,EAA4B,YAAY;UACxCC,WAAW,GAAGnO,IAAI,CAACkO,OAAD,CAAJ,CAAclN,KAAlC;IAEAiN,YAAY,CAACC,OAAD,CAAZ,CAAsBE,KAAtB,CAA4BhH,OAA5B,CAAoC,CAAC;MAAEiD,MAAF;MAAU7J;KAAX,KAAyB;MAC3D6G,QAAE,CAAE,wBAAuBgD,MAAO,EAAhC,EAAmC,kBAAkB;cAC/CgE,cAAc,GAAGF,WAAW,CAAC7N,MAAZ,CAAmB+J,MAAnB,CAAvB;QACA/C,WAAM,CAACC,KAAP,CAAa8G,cAAb,EAA6B7N,OAA7B;OAFA,CAAF;MAIA6G,QAAE,CAAE,yBAAwB7G,OAAQ,EAAlC,EAAqC,kBAAkB;cACjD8N,cAAc,GAAGH,WAAW,CAACjO,MAAZ,CAAmBM,OAAnB,CAAvB;QACA8G,WAAM,CAACC,KAAP,CAAa+G,cAAb,EAA6BjE,MAA7B;OAFA,CAAF;KALF;IAWA4D,YAAY,CAACC,OAAD,CAAZ,CAAsBK,OAAtB,CAA8BnH,OAA9B,CAAsC,CAAC;MAAEiD,MAAF;MAAUmE;KAAX,KAA2B;MAC/DnH,QAAE,CAAE,wBAAuBgD,MAAO,EAAhC,EAAmC,kBAAkB;YACjD;UACF8D,WAAW,CAAC7N,MAAZ,CAAmB+J,MAAnB;SADF,CAEE,OAAOnH,CAAP,EAAU;UACVoE,WAAM,CAACC,KAAP,CAAarE,CAAC,CAACkF,OAAf,EAAwBoG,SAAxB;;OAJF,CAAF;KADF;GAdM,CAAR;;;ACbK,MAAMC,OAAO,GAAG,CACrBC,IADqB,EAErBC,IAFqB,EAGrBC,KAAa,GAAG,GAHK,EAIrBC,KAAa,GAAG,EAJK,EAKrBnQ,IAAY,GAAGmQ,KALM,EAMrBC,MAAqB,GAAG,EANH,KAOlB;SACI,IAAIrS,KAAJ,CAAWQ,MAAM,CAACC,MAAP,CAAc,MAAMwR,IAAI,CAACG,KAAD,CAAxB,EAAiCnQ,IAAjC,CAAX,EAAyD;IAC9DqQ,KAAK,EAAE,OAAO3S,MAAP,EAAe4S,QAAf,EAAyBtS,IAAzB,KAAkC;YACjCuS,WAAW,GAAGC,QAAQ,IAAI;QAC9BL,KAAK,GAAGK,QAAR;QACAxQ,IAAI,GAAGwQ,QAAP;;aACK,MAAMjQ,GAAX,IAAkB7C,MAAlB,EAA0B;cACpBsC,IAAI,CAACO,GAAD,CAAJ,KAAckQ,SAAlB,EAA6B;mBACpB/S,MAAM,CAAC6C,GAAD,CAAb;;;;QAGJhC,MAAM,CAACC,MAAP,CAAcd,MAAd,EAAsB8S,QAAtB;OARF,CADuC;;;UAanC,CAACJ,MAAM,CAACM,MAAZ,EAAoB;cACZC,OAAO,GAAG,OAAOV,IAAP,KAAgB,UAAhB,GAA6B,MAAMA,IAAI,EAAvC,GAA4CA,IAA5D;QACAM,WAAW,mBAAMI,OAAN,EAAkBR,KAAlB,EAAX;QACAC,MAAM,CAACM,MAAP,GAAgB,IAAhB;OAhBqC;;;UAoBnC1S,IAAI,IAAIA,IAAI,CAACgB,MAAjB,EAAyB;YACnB,OAAOhB,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiCuS,WAAW,mBAAMvS,IAAI,CAAC,CAAD,CAAV,EAAX,CAAjC,KACK,IAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,MAAhB,EAAwB;cACvBoS,MAAM,CAACQ,MAAX,EAAmB;YACjBC,YAAY,CAACT,MAAM,CAACQ,MAAR,CAAZ;YACAR,MAAM,CAACQ,MAAP,GAAgB,IAAhB;;;UAEFR,MAAM,CAACU,OAAP,GAAiB,KAAjB;gBACMC,OAAO,CAACV,KAAR,CAAc3S,MAAd,EAAsBA,MAAtB,EAA8B,EAA9B,CAAN;;;OA5BmC;;;UAkCnC,CAAC0S,MAAM,CAACU,OAAR,IAAmBV,MAAM,CAACQ,MAA9B,EAAsC,OAlCC;;MAqCvCR,MAAM,CAACU,OAAP,GAAiB,KAAjB,CArCuC;;MAwCvCV,MAAM,CAACQ,MAAP,GAAgBI,UAAU,CAAC,MAAM;YAC3BZ,MAAM,CAACQ,MAAX,EAAmB;UACjBC,YAAY,CAACT,MAAM,CAACQ,MAAR,CAAZ;UACAR,MAAM,CAACQ,MAAP,GAAgB,IAAhB;;;QAEFG,OAAO,CAACV,KAAR,CAAcC,QAAd,EAAwBA,QAAxB,EAAkC,EAAlC;OALwB,EAMvBJ,KANuB,CAA1B;YAQMa,OAAO,CAACV,KAAR,CAAc3S,MAAd,EAAsBA,MAAtB,EAA8B,EAA9B,CAAN;KAjD4D;IAmD9DwH,GAAG,EAAE,CAACxH,MAAD,EAAcC,IAAd,EAA4B0G,KAA5B,EAAwCzG,QAAxC,KAA0D;;UAEzDoC,IAAI,CAACrC,IAAD,CAAJ,KAAe0G,KAAnB,EAA0B;QACxB0M,OAAO,CAAC7L,GAAR,CAAYlF,IAAZ,EAAkBrC,IAAlB,EAAwB0G,KAAxB;QACA0M,OAAO,CAAC7L,GAAR,CAAYxH,MAAZ,EAAoBC,IAApB,EAA0B0G,KAA1B;QACA+L,MAAM,CAACU,OAAP,GAAiB,IAAjB;YACI,CAACV,MAAM,CAACQ,MAAZ,EAAoBG,OAAO,CAACV,KAAR,CAAczS,QAAd,EAAwBA,QAAxB,EAAkC,EAAlC;;;aAEf,IAAP;KA3D4D;IA6D9DH,GAAG,EAAE,CAACC,MAAD,EAAcC,IAAd,KAA+B;UAC9BA,IAAI,KAAK,QAAb,EAAuB,OAAOyS,MAAP,CADW;;YAG5B/L,KAAK,GAAG0M,OAAO,CAACtT,GAAR,CAAYuC,IAAZ,EAAkBrC,IAAlB,CAAd,CAHkC;;UAK9B,OAAO0G,KAAP,KAAiB,QAArB,EAA+B,OAAOA,KAAP,CALG;;aAO3B0L,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,KAApB,EAA2B9L,KAA3B,EAAkC+L,MAAlC,CAAd;;GApEG,CAAP;CARK;;ACAP,MAAMa,UAAU,GAAG,CAACC,QAAD,EAAgBhB,KAAhB,EAA+BiB,GAA/B,KAA4C;MACzDC,YAAY,GAAG,CAAC,CAApB;MACIC,aAAa,GAAG,CAApB;SAEO,MAAMC,SAAN,IAAmB;QACpBH,GAAG,CAACI,IAAR,EAAc;IACdJ,GAAG,CAAC3M,CAAJ,GAAQ,IAAIzF,KAAJ,EAAR;IAEA6J,WAAM,CAAC4I,QAAP,CAAgBF,SAAhB,EAA2BJ,QAA3B;IACAtI,WAAM,CAAC2B,SAAP,CAAiB+G,SAAjB,EAA4BJ,QAA5B;IAEAE,YAAY;QACR,CAACC,aAAL,EAAoBA,aAAa,GAAGI,IAAI,CAACC,GAAL,EAAhB;UACdC,QAAQ,GAAGF,IAAI,CAACC,GAAL,KAAaL,aAA9B;;QAEInB,KAAJ,EAAW;YACH0B,QAAQ,GAAG1B,KAAK,GAAGkB,YAAzB;MACAxI,WAAM,CAACiJ,SAAP,CAAiBF,QAAjB,EAA2BC,QAA3B;;;IAGFT,GAAG,CAAC3M,CAAJ,GAAQ,IAAR,CAhBwB;GAA1B;CAJF;;AAyBA,MAAM2M,GAAG,GAAG,EAAZ;;AAEA,KAAK,MAAMvS,IAAX,IAAmBuL,UAAQ,CAAC2H,SAA5B,EAAuC;QAC/BC,OAAO,GAAGnT,IAAI,CAACoT,OAAL,CAAa,WAAb,EAA0B,EAA1B,CAAhB;QACM;IAAE7B,KAAF;IAASD,KAAT;IAAgB+B;MAAS9H,UAAQ,CAAC2H,SAAT,CAAmBlT,IAAnB,CAA/B;QACMsS,QAAQ,GAAGgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAejC,KAAK,IAAI,EAAxB,CAAX,CAAjB;QACMH,IAAI,GAAGiB,UAAU,CAACC,QAAD,EAAWhB,KAAX,EAAkBiB,GAAlB,CAAvB;QACMlB,IAAI,GAAG8B,OAAO,KAAK,GAAZ,GAAkB,MAAcb,QAAhC,GAA2Cf,KAAxD;QACMkC,cAAc,GAAGtC,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,CAA9B;EAEA1H,cAAQ,CAAE,yBAAwB5J,IAAK,kBAAiBsR,KAAK,IAC3D,GAAI,IADE,EACG,YAAY;SAChBoC,OAAL,CAAa,CAAb;IACAC,YAAM,CAAC,gCAAD,EAAmC,kBAAkB;MACzDpB,GAAG,CAACI,IAAJ,GAAW,KAAX;YACMc,cAAc,CAAC,EAAD,CAApB;YACMA,cAAc,CAAClC,KAAD,CAApB;KAHI,CAAN;IAMA8B,IAAI,CAAC9S,GAAL,CAAS,CAAC,CAAC+H,KAAD,EAAQ7C,KAAR,EAAesN,QAAf,CAAD,EAA2BnM,CAA3B,KAAiC;MACxCmD,QAAE,CAAE,QAAOzB,KAAM,QAAO7C,KAAM,WAAUsN,QAAS,eAA/C,EAA+D,UAAUa,IAAV,EAAgB;YAC3EC,KAAK,GAAGJ,cAAZ;YACIK,aAAa,GAAGxB,QAApB;QAEAhK,KAAK,GAAGA,KAAK,CAACuG,KAAN,CAAY,GAAZ,CAAR;;eACOvG,KAAK,CAAClI,MAAN,GAAe,CAAtB,EAAyB;gBACjBuB,GAAG,GAAG2G,KAAK,CAAC+F,KAAN,EAAZ;UACAwF,KAAK,GAAGA,KAAK,CAAClS,GAAD,CAAb;UACAmS,aAAa,GAAGA,aAAa,CAACnS,GAAD,CAA7B;;;cAGIA,GAAG,GAAG2G,KAAK,CAAC,CAAD,CAAjB;cACMyL,QAAQ,GAAG,CAACnN,CAAD,GAAKmM,QAAL,GAAgBA,QAAQ,GAAGM,IAAI,CAACzM,CAAC,GAAG,CAAL,CAAJ,CAAY,CAAZ,CAA5C;QAEAwL,UAAU,CAAC,MAAM;UACf0B,aAAa,CAACnS,GAAD,CAAb,GAAqB8D,KAArB;UACAoO,KAAK,CAAClS,GAAD,CAAL,GAAa8D,KAAb;UACAuE,WAAM,CAACC,KAAP,CAAa6J,aAAa,CAACnS,GAAD,CAA1B,EAAiCkS,KAAK,CAAClS,GAAD,CAAtC;UACAiS,IAAI,CAACrB,GAAG,CAAC3M,CAAL,CAAJ;SAJQ,EAKPmO,QALO,CAAV;OAdA,CAAF;KADF;IAwBAC,WAAK,CAAC,0CAAD,EAA6C,kBAAkB;MAClEzB,GAAG,CAACI,IAAJ,GAAW,IAAX;YACMc,cAAc,CAAC,MAAD,CAApB;KAFG,CAAL;GAjCM,CAAR;"}