'use strict';var cov_1y300ligpp=function(){var path="/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",hash="e5f4286b8aa8c29ed92128e066a9bdc3a7e43473",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",statementMap:{"0":{start:{line:3,column:11},end:{line:3,column:26}},"1":{start:{line:4,column:12},end:{line:4,column:28}},"2":{start:{line:7,column:2},end:{line:16,column:3}},"3":{start:{line:8,column:4},end:{line:13,column:7}},"4":{start:{line:15,column:4},end:{line:15,column:21}},"5":{start:{line:18,column:2},end:{line:18,column:13}},"6":{start:{line:22,column:2},end:{line:35,column:3}},"7":{start:{line:23,column:17},end:{line:23,column:57}},"8":{start:{line:24,column:18},end:{line:24,column:37}},"9":{start:{line:26,column:4},end:{line:30,column:5}},"10":{start:{line:27,column:6},end:{line:29,column:10}},"11":{start:{line:28,column:8},end:{line:28,column:71}},"12":{start:{line:32,column:4},end:{line:34,column:7}},"13":{start:{line:33,column:6},end:{line:33,column:48}},"14":{start:{line:37,column:2},end:{line:37,column:16}},"15":{start:{line:44,column:14},end:{line:44,column:15}},"16":{start:{line:45,column:17},end:{line:45,column:18}},"17":{start:{line:46,column:15},end:{line:62,column:1}},"18":{start:{line:48,column:2},end:{line:48,column:42}},"19":{start:{line:48,column:25},end:{line:48,column:42}},"20":{start:{line:50,column:17},end:{line:56,column:13}},"21":{start:{line:57,column:2},end:{line:57,column:24}},"22":{start:{line:58,column:2},end:{line:58,column:41}},"23":{start:{line:59,column:2},end:{line:59,column:42}},"24":{start:{line:60,column:2},end:{line:60,column:14}},"25":{start:{line:61,column:2},end:{line:61,column:16}},"26":{start:{line:64,column:18},end:{line:104,column:1}},"27":{start:{line:65,column:2},end:{line:65,column:12}},"28":{start:{line:67,column:2},end:{line:67,column:48}},"29":{start:{line:67,column:38},end:{line:67,column:48}},"30":{start:{line:72,column:6},end:{line:72,column:11}},"31":{start:{line:75,column:2},end:{line:101,column:3}},"32":{start:{line:76,column:4},end:{line:76,column:46}},"33":{start:{line:77,column:4},end:{line:77,column:37}},"34":{start:{line:79,column:4},end:{line:79,column:27}},"35":{start:{line:80,column:4},end:{line:80,column:28}},"36":{start:{line:82,column:4},end:{line:100,column:5}},"37":{start:{line:84,column:6},end:{line:84,column:56}},"38":{start:{line:84,column:31},end:{line:84,column:54}},"39":{start:{line:85,column:11},end:{line:100,column:5}},"40":{start:{line:88,column:6},end:{line:94,column:7}},"41":{start:{line:89,column:8},end:{line:93,column:9}},"42":{start:{line:90,column:10},end:{line:92,column:28}},"43":{start:{line:97,column:6},end:{line:99,column:36}},"44":{start:{line:103,column:2},end:{line:103,column:23}},"45":{start:{line:106,column:16},end:{line:150,column:1}},"46":{start:{line:151,column:17},end:{line:151,column:1000}},"47":{start:{line:158,column:0},end:{line:169,column:3}},"48":{start:{line:159,column:2},end:{line:168,column:5}},"49":{start:{line:160,column:4},end:{line:167,column:7}},"50":{start:{line:161,column:27},end:{line:164,column:7}},"51":{start:{line:165,column:22},end:{line:165,column:51}},"52":{start:{line:166,column:6},end:{line:166,column:47}}},fnMap:{"0":{name:"_defineProperty",decl:{start:{line:6,column:9},end:{line:6,column:24}},loc:{start:{line:6,column:42},end:{line:19,column:1}},line:6},"1":{name:"_objectSpread",decl:{start:{line:21,column:9},end:{line:21,column:22}},loc:{start:{line:21,column:31},end:{line:38,column:1}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:27,column:75},end:{line:27,column:76}},loc:{start:{line:27,column:90},end:{line:29,column:7}},line:27},"3":{name:"(anonymous_3)",decl:{start:{line:32,column:20},end:{line:32,column:21}},loc:{start:{line:32,column:35},end:{line:34,column:5}},line:32},"4":{name:"(anonymous_4)",decl:{start:{line:46,column:15},end:{line:46,column:16}},loc:{start:{line:46,column:35},end:{line:62,column:1}},line:46},"5":{name:"(anonymous_5)",decl:{start:{line:64,column:18},end:{line:64,column:19}},loc:{start:{line:64,column:38},end:{line:104,column:1}},line:64},"6":{name:"(anonymous_6)",decl:{start:{line:84,column:22},end:{line:84,column:23}},loc:{start:{line:84,column:31},end:{line:84,column:54}},line:84},"7":{name:"(anonymous_7)",decl:{start:{line:158,column:38},end:{line:158,column:39}},loc:{start:{line:158,column:50},end:{line:169,column:1}},line:158},"8":{name:"(anonymous_8)",decl:{start:{line:159,column:19},end:{line:159,column:20}},loc:{start:{line:159,column:41},end:{line:168,column:3}},line:159},"9":{name:"(anonymous_9)",decl:{start:{line:160,column:62},end:{line:160,column:63}},loc:{start:{line:160,column:74},end:{line:167,column:5}},line:160}},branchMap:{"0":{loc:{start:{line:7,column:2},end:{line:16,column:3}},type:"if",locations:[{start:{line:7,column:2},end:{line:16,column:3}},{start:{line:7,column:2},end:{line:16,column:3}}],line:7},"1":{loc:{start:{line:23,column:17},end:{line:23,column:57}},type:"cond-expr",locations:[{start:{line:23,column:40},end:{line:23,column:52}},{start:{line:23,column:55},end:{line:23,column:57}}],line:23},"2":{loc:{start:{line:26,column:4},end:{line:30,column:5}},type:"if",locations:[{start:{line:26,column:4},end:{line:30,column:5}},{start:{line:26,column:4},end:{line:30,column:5}}],line:26},"3":{loc:{start:{line:48,column:2},end:{line:48,column:42}},type:"if",locations:[{start:{line:48,column:2},end:{line:48,column:42}},{start:{line:48,column:2},end:{line:48,column:42}}],line:48},"4":{loc:{start:{line:67,column:2},end:{line:67,column:48}},type:"if",locations:[{start:{line:67,column:2},end:{line:67,column:48}},{start:{line:67,column:2},end:{line:67,column:48}}],line:67},"5":{loc:{start:{line:75,column:2},end:{line:101,column:3}},type:"if",locations:[{start:{line:75,column:2},end:{line:101,column:3}},{start:{line:75,column:2},end:{line:101,column:3}}],line:75},"6":{loc:{start:{line:75,column:6},end:{line:75,column:95}},type:"binary-expr",locations:[{start:{line:75,column:6},end:{line:75,column:26}},{start:{line:75,column:31},end:{line:75,column:66}},{start:{line:75,column:70},end:{line:75,column:94}}],line:75},"7":{loc:{start:{line:82,column:4},end:{line:100,column:5}},type:"if",locations:[{start:{line:82,column:4},end:{line:100,column:5}},{start:{line:82,column:4},end:{line:100,column:5}}],line:82},"8":{loc:{start:{line:85,column:11},end:{line:100,column:5}},type:"if",locations:[{start:{line:85,column:11},end:{line:100,column:5}},{start:{line:85,column:11},end:{line:100,column:5}}],line:85},"9":{loc:{start:{line:88,column:6},end:{line:94,column:7}},type:"if",locations:[{start:{line:88,column:6},end:{line:94,column:7}},{start:{line:88,column:6},end:{line:94,column:7}}],line:88}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var chai=(cov_1y300ligpp.s[0]++,require('chai'));var mocha=(cov_1y300ligpp.s[1]++,require('mocha'));function _defineProperty(obj,key,value){cov_1y300ligpp.f[0]++;cov_1y300ligpp.s[2]++;if(key in obj){cov_1y300ligpp.b[0][0]++;cov_1y300ligpp.s[3]++;Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{cov_1y300ligpp.b[0][1]++;cov_1y300ligpp.s[4]++;obj[key]=value;}cov_1y300ligpp.s[5]++;return obj;}function _objectSpread(target){cov_1y300ligpp.f[1]++;cov_1y300ligpp.s[6]++;for(var i=1;i<arguments.length;i++){var source=(cov_1y300ligpp.s[7]++,arguments[i]!=null?(cov_1y300ligpp.b[1][0]++,arguments[i]):(cov_1y300ligpp.b[1][1]++,{}));var ownKeys=(cov_1y300ligpp.s[8]++,Object.keys(source));cov_1y300ligpp.s[9]++;if(typeof Object.getOwnPropertySymbols==='function'){cov_1y300ligpp.b[2][0]++;cov_1y300ligpp.s[10]++;ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){cov_1y300ligpp.f[2]++;cov_1y300ligpp.s[11]++;return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}else{cov_1y300ligpp.b[2][1]++;}cov_1y300ligpp.s[12]++;ownKeys.forEach(function(key){cov_1y300ligpp.f[3]++;cov_1y300ligpp.s[13]++;_defineProperty(target,key,source[key]);});}cov_1y300ligpp.s[14]++;return target;}// TODOS:
// 1. Add * as Wild card
// 2. Add the option to pass in 'keyToReturn'
// 3. Extend JsonSearchParams to allow for multiple options by passing in arrays
let counter=(cov_1y300ligpp.s[15]++,0);let totalCount=(cov_1y300ligpp.s[16]++,0);cov_1y300ligpp.s[17]++;const search=(query,jsonObj)=>{cov_1y300ligpp.f[4]++;cov_1y300ligpp.s[18]++;// If nothing was requested, return the current object
if(!query.keyToMatch){cov_1y300ligpp.b[3][0]++;cov_1y300ligpp.s[19]++;return[jsonObj];}else{cov_1y300ligpp.b[3][1]++;}// Tokenize the search terms if it's never been done and call the recursive search
const result=(cov_1y300ligpp.s[20]++,searchRec({valueToMatch:query.valueToMatch,tokenizeKeys:query.keyToMatch.split('.'),parent:jsonObj,tokensUsed:false,results:[]},jsonObj));cov_1y300ligpp.s[21]++;totalCount+=counter;cov_1y300ligpp.s[22]++;console.log('Current Ticks:',counter);cov_1y300ligpp.s[23]++;console.log('Total Ticks:',totalCount);cov_1y300ligpp.s[24]++;counter=0;cov_1y300ligpp.s[25]++;return result;};cov_1y300ligpp.s[26]++;const searchRec=(query,jsonObj)=>{cov_1y300ligpp.f[5]++;cov_1y300ligpp.s[27]++;counter++;// If jsonObj is undefined we can't compare anything and so we fail early
cov_1y300ligpp.s[28]++;if(typeof jsonObj==='undefined'){cov_1y300ligpp.b[4][0]++;cov_1y300ligpp.s[29]++;return[];}else{cov_1y300ligpp.b[4][1]++;}const{valueToMatch,tokenizeKeys,tokensUsed}=(cov_1y300ligpp.s[30]++,query);// If we ran out of tokenizeKeys it means we need to verify
// that we found the right key with the correct value and if so add the parent to the results list
cov_1y300ligpp.s[31]++;if((cov_1y300ligpp.b[6][0]++,!tokenizeKeys.length)&&((cov_1y300ligpp.b[6][1]++,typeof valueToMatch==='undefined')||(cov_1y300ligpp.b[6][2]++,valueToMatch===jsonObj))){cov_1y300ligpp.b[5][0]++;cov_1y300ligpp.s[32]++;console.log('query.parent',query.parent);cov_1y300ligpp.s[33]++;query.results.push(query.parent);}else{cov_1y300ligpp.b[5][1]++;cov_1y300ligpp.s[34]++;query.parent=jsonObj;cov_1y300ligpp.s[35]++;query.tokensUsed=true;// If we are searching in an Array, we would go over each child without moving the token counter
cov_1y300ligpp.s[36]++;if(Array.isArray(jsonObj)){cov_1y300ligpp.b[7][0]++;cov_1y300ligpp.s[37]++;// console.log('query', query)
jsonObj.forEach(child=>{cov_1y300ligpp.f[6]++;cov_1y300ligpp.s[38]++;return searchRec(query,child);});}else{cov_1y300ligpp.b[7][1]++;cov_1y300ligpp.s[39]++;if(typeof jsonObj==='object'){cov_1y300ligpp.b[8][0]++;cov_1y300ligpp.s[40]++;// If there not tokens was used, it means that we still have the full tokenizeKeys
// So we will try to use the same tokenizeKeys for every child of jsonObj
if(!tokensUsed){cov_1y300ligpp.b[9][0]++;cov_1y300ligpp.s[41]++;for(const key in jsonObj){cov_1y300ligpp.s[42]++;searchRec(_objectSpread({},query,{tokensUsed:false}),jsonObj[key]);}}else{cov_1y300ligpp.b[9][1]++;}// Shift one level based on the first key in tokenizeKeys with jsonObj as the parent
cov_1y300ligpp.s[43]++;searchRec(_objectSpread({},query,{tokenizeKeys:tokenizeKeys.slice(1)}),jsonObj[tokenizeKeys[0]]);}else{cov_1y300ligpp.b[8][1]++;}}}cov_1y300ligpp.s[44]++;return query.results;};const jsonObj=(cov_1y300ligpp.s[45]++,{alpha:1,bravo:[1,2,3],charlie:{delta:1},india:{kilo:4,lima:4},uniform:{kilo:4,lima:4},echo:{foxtrot:[1,2,3],golf:{india:{kilo:4,lima:4},juliet:{kilo:4,lima:5},mike:[{kilo:4},6,{lima:5},{lima:6,kilo:7},{charlie:{delta:1}},{alpha:1},[6,{lima:5},10]],november:8}}});const fixtures=(cov_1y300ligpp.s[46]++,[[[],[jsonObj]],[['alpha',1],[jsonObj['echo']['golf']['mike'][5],jsonObj]],[['alpha',2],[]],[['bravo',0],[]],[['bravo',1],[jsonObj['bravo']]],[['charlie',1],[]],[['charlie.delta',1],[jsonObj['charlie'],jsonObj['echo']['golf']['mike'][4]['charlie']]],[['india.kilo',5],[]],[['india.lima',5],[]],[['echo.foxtrot',2],[jsonObj['echo']['foxtrot']]],[['echo.golf.india.kilo',4],[jsonObj['echo']['golf']['india']]],[['echo.golf.india.kilo',5],[]],[['echo.golf.november',8],[jsonObj['echo']['golf']]],[['india.kilo',4],[jsonObj['india'],jsonObj['echo']['golf']['india']]],[['lima',5],[jsonObj['echo']['golf']['juliet'],jsonObj['echo']['golf']['mike'][2],jsonObj['echo']['golf']['mike'][6][1]]],[['lima',4],[jsonObj['india'],jsonObj['uniform'],jsonObj['echo']['golf']['india']]],[['kilo',4],[jsonObj['india'],jsonObj['uniform'],jsonObj['echo']['golf']['india'],jsonObj['echo']['golf']['juliet'],jsonObj['echo']['golf']['mike'][0]]]]);// export const fixtures = [
// [ ['mike.*.delta', 1], [
//   jsonObj['charlie'],
//   jsonObj['echo']['golf']['mike'][4]['charlie']
// ] ]
// ]
cov_1y300ligpp.s[47]++;mocha.describe('Testing Json Search',function(){cov_1y300ligpp.f[7]++;cov_1y300ligpp.s[48]++;fixtures.forEach(([test,expected])=>{cov_1y300ligpp.f[8]++;cov_1y300ligpp.s[49]++;mocha.it(`Testing search with: ${JSON.stringify(test)} `,function(){cov_1y300ligpp.f[9]++;const searchParams=(cov_1y300ligpp.s[50]++,{keyToMatch:test[0],valueToMatch:test[1]});const results=(cov_1y300ligpp.s[51]++,search(searchParams,jsonObj));cov_1y300ligpp.s[52]++;chai.assert.deepEqual(results,expected);});});});//# sourceMappingURL=tests.cjs.js.map