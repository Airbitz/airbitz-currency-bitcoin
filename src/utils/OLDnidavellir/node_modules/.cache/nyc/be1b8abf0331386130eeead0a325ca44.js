'use strict';var cov_1y300ligpp=function(){var path="/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",hash="d9a8a138d8f0f9c0d3ab04d26b44bb56add133b5",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",statementMap:{"0":{start:{line:3,column:11},end:{line:3,column:26}},"1":{start:{line:4,column:12},end:{line:4,column:28}},"2":{start:{line:6,column:15},end:{line:70,column:1}},"3":{start:{line:8,column:2},end:{line:8,column:48}},"4":{start:{line:8,column:38},end:{line:8,column:48}},"5":{start:{line:15,column:6},end:{line:15,column:18}},"6":{start:{line:17,column:2},end:{line:21,column:3}},"7":{start:{line:18,column:4},end:{line:20,column:5}},"8":{start:{line:19,column:6},end:{line:19,column:43}},"9":{start:{line:23,column:16},end:{line:23,column:18}},"10":{start:{line:25,column:21},end:{line:44,column:3}},"11":{start:{line:26,column:28},end:{line:31,column:5}},"12":{start:{line:32,column:4},end:{line:32,column:49}},"13":{start:{line:32,column:16},end:{line:32,column:49}},"14":{start:{line:34,column:4},end:{line:38,column:5}},"15":{start:{line:35,column:6},end:{line:35,column:39}},"16":{start:{line:36,column:6},end:{line:36,column:59}},"17":{start:{line:37,column:6},end:{line:37,column:18}},"18":{start:{line:40,column:4},end:{line:43,column:5}},"19":{start:{line:41,column:21},end:{line:41,column:54}},"20":{start:{line:42,column:6},end:{line:42,column:39}},"21":{start:{line:47,column:2},end:{line:67,column:3}},"22":{start:{line:48,column:4},end:{line:48,column:24}},"23":{start:{line:49,column:9},end:{line:67,column:3}},"24":{start:{line:54,column:4},end:{line:54,column:47}},"25":{start:{line:57,column:4},end:{line:66,column:5}},"26":{start:{line:58,column:6},end:{line:65,column:7}},"27":{start:{line:59,column:8},end:{line:64,column:26}},"28":{start:{line:69,column:2},end:{line:69,column:17}},"29":{start:{line:72,column:16},end:{line:116,column:1}},"30":{start:{line:117,column:16},end:{line:117,column:999}},"31":{start:{line:118,column:17},end:{line:122,column:17}},"32":{start:{line:124,column:0},end:{line:138,column:3}},"33":{start:{line:125,column:2},end:{line:137,column:5}},"34":{start:{line:126,column:4},end:{line:136,column:7}},"35":{start:{line:127,column:27},end:{line:131,column:7}},"36":{start:{line:132,column:22},end:{line:132,column:51}},"37":{start:{line:135,column:6},end:{line:135,column:47}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:15},end:{line:6,column:16}},loc:{start:{line:6,column:42},end:{line:70,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:25,column:21},end:{line:25,column:22}},loc:{start:{line:25,column:42},end:{line:44,column:3}},line:25},"2":{name:"(anonymous_2)",decl:{start:{line:124,column:38},end:{line:124,column:39}},loc:{start:{line:124,column:50},end:{line:138,column:1}},line:124},"3":{name:"(anonymous_3)",decl:{start:{line:125,column:19},end:{line:125,column:20}},loc:{start:{line:125,column:41},end:{line:137,column:3}},line:125},"4":{name:"(anonymous_4)",decl:{start:{line:126,column:62},end:{line:126,column:63}},loc:{start:{line:126,column:74},end:{line:136,column:5}},line:126}},branchMap:{"0":{loc:{start:{line:8,column:2},end:{line:8,column:48}},type:"if",locations:[{start:{line:8,column:2},end:{line:8,column:48}},{start:{line:8,column:2},end:{line:8,column:48}}],line:8},"1":{loc:{start:{line:14,column:4},end:{line:14,column:58}},type:"default-arg",locations:[{start:{line:14,column:19},end:{line:14,column:58}}],line:14},"2":{loc:{start:{line:14,column:19},end:{line:14,column:58}},type:"cond-expr",locations:[{start:{line:14,column:32},end:{line:14,column:53}},{start:{line:14,column:56},end:{line:14,column:58}}],line:14},"3":{loc:{start:{line:17,column:2},end:{line:21,column:3}},type:"if",locations:[{start:{line:17,column:2},end:{line:21,column:3}},{start:{line:17,column:2},end:{line:21,column:3}}],line:17},"4":{loc:{start:{line:18,column:4},end:{line:20,column:5}},type:"if",locations:[{start:{line:18,column:4},end:{line:20,column:5}},{start:{line:18,column:4},end:{line:20,column:5}}],line:18},"5":{loc:{start:{line:18,column:8},end:{line:18,column:71}},type:"binary-expr",locations:[{start:{line:18,column:8},end:{line:18,column:43}},{start:{line:18,column:47},end:{line:18,column:71}}],line:18},"6":{loc:{start:{line:19,column:13},end:{line:19,column:42}},type:"cond-expr",locations:[{start:{line:19,column:22},end:{line:19,column:30}},{start:{line:19,column:33},end:{line:19,column:42}}],line:19},"7":{loc:{start:{line:32,column:4},end:{line:32,column:49}},type:"if",locations:[{start:{line:32,column:4},end:{line:32,column:49}},{start:{line:32,column:4},end:{line:32,column:49}}],line:32},"8":{loc:{start:{line:34,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:34,column:4},end:{line:38,column:5}},{start:{line:34,column:4},end:{line:38,column:5}}],line:34},"9":{loc:{start:{line:47,column:2},end:{line:67,column:3}},type:"if",locations:[{start:{line:47,column:2},end:{line:67,column:3}},{start:{line:47,column:2},end:{line:67,column:3}}],line:47},"10":{loc:{start:{line:49,column:9},end:{line:67,column:3}},type:"if",locations:[{start:{line:49,column:9},end:{line:67,column:3}},{start:{line:49,column:9},end:{line:67,column:3}}],line:49},"11":{loc:{start:{line:57,column:4},end:{line:66,column:5}},type:"if",locations:[{start:{line:57,column:4},end:{line:66,column:5}},{start:{line:57,column:4},end:{line:66,column:5}}],line:57}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var chai=(cov_1y300ligpp.s[0]++,require('chai'));var mocha=(cov_1y300ligpp.s[1]++,require('mocha'));cov_1y300ligpp.s[2]++;const search=(searchParams,jsonObj)=>{cov_1y300ligpp.f[0]++;cov_1y300ligpp.s[3]++;// If jsonObj is undefined we can't compare anything and so we fail early
if(typeof jsonObj==='undefined'){cov_1y300ligpp.b[0][0]++;cov_1y300ligpp.s[4]++;return[];}else{cov_1y300ligpp.b[0][1]++;}const{keyToMatch,valueToMatch,// keyToReturn,
parent,tokenizeKeys=(cov_1y300ligpp.b[1][0]++,keyToMatch?(cov_1y300ligpp.b[2][0]++,keyToMatch.split('.')):(cov_1y300ligpp.b[2][1]++,[]))}=(cov_1y300ligpp.s[5]++,searchParams);// If we ran out of tokenizeKeys it means we need to verify that we found the right key with the correct value
cov_1y300ligpp.s[6]++;if(!tokenizeKeys.length){cov_1y300ligpp.b[3][0]++;cov_1y300ligpp.s[7]++;if((cov_1y300ligpp.b[5][0]++,typeof valueToMatch==='undefined')||(cov_1y300ligpp.b[5][1]++,valueToMatch===jsonObj)){cov_1y300ligpp.b[4][0]++;cov_1y300ligpp.s[8]++;return parent?(cov_1y300ligpp.b[6][0]++,[parent]):(cov_1y300ligpp.b[6][1]++,[jsonObj]);}else{cov_1y300ligpp.b[4][1]++;}}else{cov_1y300ligpp.b[3][1]++;}let results=(cov_1y300ligpp.s[9]++,[]);cov_1y300ligpp.s[10]++;const addResults=(obj,shiftToken)=>{cov_1y300ligpp.f[1]++;const newSearchParams=(cov_1y300ligpp.s[11]++,{keyToMatch,valueToMatch,// keyToReturn,
tokenizeKeys});cov_1y300ligpp.s[12]++;if(parent){cov_1y300ligpp.b[7][0]++;cov_1y300ligpp.s[13]++;newSearchParams.parent=jsonObj;}else{cov_1y300ligpp.b[7][1]++;}cov_1y300ligpp.s[14]++;if(shiftToken){cov_1y300ligpp.b[8][0]++;cov_1y300ligpp.s[15]++;newSearchParams.parent=jsonObj;cov_1y300ligpp.s[16]++;newSearchParams.tokenizeKeys=tokenizeKeys.slice(1);cov_1y300ligpp.s[17]++;obj=[obj];}else{cov_1y300ligpp.b[8][1]++;}cov_1y300ligpp.s[18]++;for(const key in obj){const result=(cov_1y300ligpp.s[19]++,search(newSearchParams,obj[key]));cov_1y300ligpp.s[20]++;results=results.concat(result);}};// If we are searching in an Array, we would go over each child without moving the token counter
cov_1y300ligpp.s[21]++;if(Array.isArray(jsonObj)){cov_1y300ligpp.b[9][0]++;cov_1y300ligpp.s[22]++;addResults(jsonObj);}else{cov_1y300ligpp.b[9][1]++;cov_1y300ligpp.s[23]++;if(typeof jsonObj==='object'){cov_1y300ligpp.b[10][0]++;cov_1y300ligpp.s[24]++;// if (firstToken === '*') {
// } else {
// }
// Search one level down based on the first key in tokenizeKeys with ourself as the parent
addResults(jsonObj[tokenizeKeys[0]],true);// If there is no parent yet, it means that we still have the full tokenizeKeys
// So we will try to use the same tokenizeKeys for every child of jsonObj
cov_1y300ligpp.s[25]++;if(!parent){cov_1y300ligpp.b[11][0]++;cov_1y300ligpp.s[26]++;for(const key in jsonObj){cov_1y300ligpp.s[27]++;results=results.concat(search({keyToMatch,valueToMatch,// keyToReturn,
tokenizeKeys},jsonObj[key]));}}else{cov_1y300ligpp.b[11][1]++;}}else{cov_1y300ligpp.b[10][1]++;}}cov_1y300ligpp.s[28]++;return results;};const jsonObj=(cov_1y300ligpp.s[29]++,{alpha:1,bravo:[1,2,3],charlie:{delta:1},india:{kilo:4,lima:4},uniform:{kilo:4,lima:4},echo:{foxtrot:[1,2,3],golf:{india:{kilo:4,lima:4},juliet:{kilo:4,lima:5},mike:[{kilo:4},6,{lima:5},{lima:6,kilo:7},{charlie:{delta:1}},{alpha:1},[6,{lima:5},10]],november:8}}});const working=(cov_1y300ligpp.s[30]++,[[[],[jsonObj]],[['alpha',1],[jsonObj,jsonObj['echo']['golf']['mike'][5]]],[['alpha',2],[]],[['bravo',0],[]],[['bravo',1],[jsonObj['bravo']]],[['charlie',1],[]],[['charlie.delta',1],[jsonObj['charlie'],jsonObj['echo']['golf']['mike'][4]['charlie']]],[['india.kilo',5],[]],[['india.lima',5],[]],[['echo.foxtrot',2],[jsonObj['echo']['foxtrot']]],[['echo.golf.india.kilo',4],[jsonObj['echo']['golf']['india']]],[['echo.golf.india.kilo',5],[]],[['echo.golf.november',8],[jsonObj['echo']['golf']]],[['india.kilo',4],[jsonObj['india'],jsonObj['echo']['golf']['india']]],[['lima',5],[jsonObj['echo']['golf']['juliet'],jsonObj['echo']['golf']['mike'][2],jsonObj['echo']['golf']['mike'][6][1]]],[['lima',4],[jsonObj['india'],jsonObj['uniform'],jsonObj['echo']['golf']['india']]],[['kilo',4],[jsonObj['india'],jsonObj['uniform'],jsonObj['echo']['golf']['india'],jsonObj['echo']['golf']['juliet'],jsonObj['echo']['golf']['mike'][0]]]]);const fixtures=(cov_1y300ligpp.s[31]++,[// [ ['mike.*.delta', 1], [
//   jsonObj['charlie'],
//   jsonObj['echo']['golf']['mike'][4]['charlie']
// ] ]
].concat(working));cov_1y300ligpp.s[32]++;mocha.describe('Testing Json Search',function(){cov_1y300ligpp.f[2]++;cov_1y300ligpp.s[33]++;fixtures.forEach(([test,expected])=>{cov_1y300ligpp.f[3]++;cov_1y300ligpp.s[34]++;mocha.it(`Testing search with: ${JSON.stringify(test)} `,function(){cov_1y300ligpp.f[4]++;const searchParams=(cov_1y300ligpp.s[35]++,{keyToMatch:test[0],valueToMatch:test[1]// keyToReturn: test[2]
});const results=(cov_1y300ligpp.s[36]++,search(searchParams,jsonObj));// console.log('results', results)
// console.log('expected', expected)
cov_1y300ligpp.s[37]++;chai.assert.deepEqual(results,expected);});});});//# sourceMappingURL=tests.cjs.js.map