'use strict';var cov_1y300ligpp=function(){var path="/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",hash="b1d652d066a0d33bc243b8e630b60f4d9641704d",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",statementMap:{"0":{start:{line:3,column:11},end:{line:3,column:26}},"1":{start:{line:4,column:12},end:{line:4,column:28}},"2":{start:{line:6,column:15},end:{line:57,column:1}},"3":{start:{line:8,column:2},end:{line:8,column:48}},"4":{start:{line:8,column:38},end:{line:8,column:48}},"5":{start:{line:15,column:6},end:{line:15,column:18}},"6":{start:{line:17,column:2},end:{line:23,column:3}},"7":{start:{line:18,column:4},end:{line:18,column:41}},"8":{start:{line:20,column:4},end:{line:22,column:5}},"9":{start:{line:21,column:6},end:{line:21,column:43}},"10":{start:{line:47,column:2},end:{line:47,column:71}},"11":{start:{line:47,column:30},end:{line:47,column:71}},"12":{start:{line:50,column:18},end:{line:50,column:57}},"13":{start:{line:54,column:18},end:{line:54,column:66}},"14":{start:{line:56,column:2},end:{line:56,column:34}},"15":{start:{line:59,column:19},end:{line:83,column:1}},"16":{start:{line:60,column:16},end:{line:60,column:18}},"17":{start:{line:64,column:6},end:{line:64,column:18}},"18":{start:{line:66,column:2},end:{line:66,column:32}},"19":{start:{line:69,column:2},end:{line:73,column:3}},"20":{start:{line:70,column:18},end:{line:70,column:33}},"21":{start:{line:71,column:4},end:{line:71,column:54}},"22":{start:{line:72,column:4},end:{line:72,column:48}},"23":{start:{line:75,column:2},end:{line:75,column:47}},"24":{start:{line:75,column:15},end:{line:75,column:47}},"25":{start:{line:77,column:2},end:{line:80,column:3}},"26":{start:{line:78,column:19},end:{line:78,column:53}},"27":{start:{line:79,column:4},end:{line:79,column:37}},"28":{start:{line:82,column:2},end:{line:82,column:17}},"29":{start:{line:85,column:16},end:{line:129,column:1}},"30":{start:{line:130,column:16},end:{line:130,column:999}},"31":{start:{line:131,column:17},end:{line:135,column:17}},"32":{start:{line:137,column:0},end:{line:151,column:3}},"33":{start:{line:138,column:2},end:{line:150,column:5}},"34":{start:{line:139,column:4},end:{line:149,column:7}},"35":{start:{line:140,column:27},end:{line:144,column:7}},"36":{start:{line:145,column:22},end:{line:145,column:51}},"37":{start:{line:148,column:6},end:{line:148,column:47}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:15},end:{line:6,column:16}},loc:{start:{line:6,column:42},end:{line:57,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:59,column:19},end:{line:59,column:20}},loc:{start:{line:59,column:58},end:{line:83,column:1}},line:59},"2":{name:"(anonymous_2)",decl:{start:{line:137,column:38},end:{line:137,column:39}},loc:{start:{line:137,column:50},end:{line:151,column:1}},line:137},"3":{name:"(anonymous_3)",decl:{start:{line:138,column:19},end:{line:138,column:20}},loc:{start:{line:138,column:41},end:{line:150,column:3}},line:138},"4":{name:"(anonymous_4)",decl:{start:{line:139,column:62},end:{line:139,column:63}},loc:{start:{line:139,column:74},end:{line:149,column:5}},line:139}},branchMap:{"0":{loc:{start:{line:8,column:2},end:{line:8,column:48}},type:"if",locations:[{start:{line:8,column:2},end:{line:8,column:48}},{start:{line:8,column:2},end:{line:8,column:48}}],line:8},"1":{loc:{start:{line:14,column:4},end:{line:14,column:58}},type:"default-arg",locations:[{start:{line:14,column:19},end:{line:14,column:58}}],line:14},"2":{loc:{start:{line:14,column:19},end:{line:14,column:58}},type:"cond-expr",locations:[{start:{line:14,column:32},end:{line:14,column:53}},{start:{line:14,column:56},end:{line:14,column:58}}],line:14},"3":{loc:{start:{line:17,column:2},end:{line:23,column:3}},type:"if",locations:[{start:{line:17,column:2},end:{line:23,column:3}},{start:{line:17,column:2},end:{line:23,column:3}}],line:17},"4":{loc:{start:{line:20,column:4},end:{line:22,column:5}},type:"if",locations:[{start:{line:20,column:4},end:{line:22,column:5}},{start:{line:20,column:4},end:{line:22,column:5}}],line:20},"5":{loc:{start:{line:20,column:8},end:{line:20,column:71}},type:"binary-expr",locations:[{start:{line:20,column:8},end:{line:20,column:43}},{start:{line:20,column:47},end:{line:20,column:71}}],line:20},"6":{loc:{start:{line:21,column:13},end:{line:21,column:42}},type:"cond-expr",locations:[{start:{line:21,column:22},end:{line:21,column:30}},{start:{line:21,column:33},end:{line:21,column:42}}],line:21},"7":{loc:{start:{line:47,column:2},end:{line:47,column:71}},type:"if",locations:[{start:{line:47,column:2},end:{line:47,column:71}},{start:{line:47,column:2},end:{line:47,column:71}}],line:47},"8":{loc:{start:{line:54,column:18},end:{line:54,column:66}},type:"cond-expr",locations:[{start:{line:54,column:28},end:{line:54,column:61}},{start:{line:54,column:64},end:{line:54,column:66}}],line:54},"9":{loc:{start:{line:63,column:4},end:{line:63,column:21}},type:"default-arg",locations:[{start:{line:63,column:19},end:{line:63,column:21}}],line:63},"10":{loc:{start:{line:69,column:2},end:{line:73,column:3}},type:"if",locations:[{start:{line:69,column:2},end:{line:73,column:3}},{start:{line:69,column:2},end:{line:73,column:3}}],line:69},"11":{loc:{start:{line:75,column:2},end:{line:75,column:47}},type:"if",locations:[{start:{line:75,column:2},end:{line:75,column:47}},{start:{line:75,column:2},end:{line:75,column:47}}],line:75}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0],"10":[0,0],"11":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var chai=(cov_1y300ligpp.s[0]++,require('chai'));var mocha=(cov_1y300ligpp.s[1]++,require('mocha'));cov_1y300ligpp.s[2]++;const search=(searchParams,jsonObj)=>{cov_1y300ligpp.f[0]++;cov_1y300ligpp.s[3]++;// If jsonObj is undefined we can't compare anything and so we fail early
if(typeof jsonObj==='undefined'){cov_1y300ligpp.b[0][0]++;cov_1y300ligpp.s[4]++;return[];}else{cov_1y300ligpp.b[0][1]++;}const{keyToMatch,valueToMatch,// keyToReturn,
parent,tokenizeKeys=(cov_1y300ligpp.b[1][0]++,keyToMatch?(cov_1y300ligpp.b[2][0]++,keyToMatch.split('.')):(cov_1y300ligpp.b[2][1]++,[]))}=(cov_1y300ligpp.s[5]++,searchParams);// If we ran out of tokenizeKeys it means we need to verify that we found the right key with the correct value
cov_1y300ligpp.s[6]++;if(!tokenizeKeys.length){cov_1y300ligpp.b[3][0]++;cov_1y300ligpp.s[7]++;console.log('END. jsonObj',jsonObj);cov_1y300ligpp.s[8]++;if((cov_1y300ligpp.b[5][0]++,typeof valueToMatch==='undefined')||(cov_1y300ligpp.b[5][1]++,valueToMatch===jsonObj)){cov_1y300ligpp.b[4][0]++;cov_1y300ligpp.s[9]++;return parent?(cov_1y300ligpp.b[6][0]++,[parent]):(cov_1y300ligpp.b[6][1]++,[jsonObj]);}else{cov_1y300ligpp.b[4][1]++;}}else{cov_1y300ligpp.b[3][1]++;}// const deepSearch = (parentObj: any, shiftToken?: boolean): Array<any> => {
//   let results = []
//   const searchParams = {
//     keyToMatch,
//     valueToMatch,
//     // keyToReturn,
//     parent: parentObj,
//     tokenizeKeys
//   }
//   if (shiftToken) {
//     const token = tokenizeKeys[0]
//     searchParams.tokenizeKeys = tokenizeKeys.slice(1)
//     return search(searchParams, parentObj[token])
//   }
//   if (!parent) searchParams.parent = undefined
//   for (const key in parentObj) {
//     const result = search(searchParams, parentObj[key])
//     results = results.concat(result)
//   }
//   return results
// }
// If we are searching in an Array, we would go over each child without moving the token counter
cov_1y300ligpp.s[10]++;if(Array.isArray(jsonObj)){cov_1y300ligpp.b[7][0]++;cov_1y300ligpp.s[11]++;return deepSearch(searchParams,jsonObj);}else{cov_1y300ligpp.b[7][1]++;}// if (Array.isArray(jsonObj)) return deepSearch(jsonObj)
// Shift one level based on the first key in tokenizeKeys with jsonObj as the parent
const result1=(cov_1y300ligpp.s[12]++,deepSearch(searchParams,jsonObj,true));// const result1 = deepSearch(jsonObj, true)
// If there is no parent yet, it means that we still have the full tokenizeKeys
// So we will try to use the same tokenizeKeys for every child of jsonObj
const result2=(cov_1y300ligpp.s[13]++,!parent?(cov_1y300ligpp.b[8][0]++,deepSearch(searchParams,jsonObj)):(cov_1y300ligpp.b[8][1]++,[]));// const result2 = !parent ? deepSearch(jsonObj) : []
cov_1y300ligpp.s[14]++;return[...result1,...result2];};cov_1y300ligpp.s[15]++;const deepSearch=(searchParams,jsonObj,shiftToken)=>{cov_1y300ligpp.f[1]++;let results=(cov_1y300ligpp.s[16]++,[]);const{parent,tokenizeKeys=(cov_1y300ligpp.b[9][0]++,[])}=(cov_1y300ligpp.s[17]++,searchParams);// console.log('1, parent', parent)
cov_1y300ligpp.s[18]++;searchParams.parent=jsonObj;// console.log('2, searchParams.parent', searchParams.parent)
// console.log('3, parent', parent)
cov_1y300ligpp.s[19]++;if(shiftToken){cov_1y300ligpp.b[10][0]++;const token=(cov_1y300ligpp.s[20]++,tokenizeKeys[0]);cov_1y300ligpp.s[21]++;searchParams.tokenizeKeys=tokenizeKeys.slice(1);cov_1y300ligpp.s[22]++;return search(searchParams,jsonObj[token]);}else{cov_1y300ligpp.b[10][1]++;}cov_1y300ligpp.s[23]++;if(!parent){cov_1y300ligpp.b[11][0]++;cov_1y300ligpp.s[24]++;searchParams.parent=undefined;}else{cov_1y300ligpp.b[11][1]++;}cov_1y300ligpp.s[25]++;for(const key in jsonObj){const result=(cov_1y300ligpp.s[26]++,search(searchParams,jsonObj[key]));cov_1y300ligpp.s[27]++;results=results.concat(result);}cov_1y300ligpp.s[28]++;return results;};const jsonObj=(cov_1y300ligpp.s[29]++,{alpha:1,bravo:[1,2,3],charlie:{delta:1},india:{kilo:4,lima:4},uniform:{kilo:4,lima:4},echo:{foxtrot:[1,2,3],golf:{india:{kilo:4,lima:4},juliet:{kilo:4,lima:5},mike:[{kilo:4},6,{lima:5},{lima:6,kilo:7},{charlie:{delta:1}},{alpha:1},[6,{lima:5},10]],november:8}}});const working=(cov_1y300ligpp.s[30]++,[[[],[jsonObj]],[['alpha',1],[jsonObj,jsonObj['echo']['golf']['mike'][5]]],[['alpha',2],[]],[['bravo',0],[]],[['bravo',1],[jsonObj['bravo']]],[['charlie',1],[]],[['charlie.delta',1],[jsonObj['charlie'],jsonObj['echo']['golf']['mike'][4]['charlie']]],[['india.kilo',5],[]],[['india.lima',5],[]],[['echo.foxtrot',2],[jsonObj['echo']['foxtrot']]],[['echo.golf.india.kilo',4],[jsonObj['echo']['golf']['india']]],[['echo.golf.india.kilo',5],[]],[['echo.golf.november',8],[jsonObj['echo']['golf']]],[['india.kilo',4],[jsonObj['india'],jsonObj['echo']['golf']['india']]],[['lima',5],[jsonObj['echo']['golf']['juliet'],jsonObj['echo']['golf']['mike'][2],jsonObj['echo']['golf']['mike'][6][1]]],[['lima',4],[jsonObj['india'],jsonObj['uniform'],jsonObj['echo']['golf']['india']]],[['kilo',4],[jsonObj['india'],jsonObj['uniform'],jsonObj['echo']['golf']['india'],jsonObj['echo']['golf']['juliet'],jsonObj['echo']['golf']['mike'][0]]]]);const fixtures=(cov_1y300ligpp.s[31]++,[// [ ['mike.*.delta', 1], [
//   jsonObj['charlie'],
//   jsonObj['echo']['golf']['mike'][4]['charlie']
// ] ]
].concat(working));cov_1y300ligpp.s[32]++;mocha.describe('Testing Json Search',function(){cov_1y300ligpp.f[2]++;cov_1y300ligpp.s[33]++;fixtures.forEach(([test,expected])=>{cov_1y300ligpp.f[3]++;cov_1y300ligpp.s[34]++;mocha.it(`Testing search with: ${JSON.stringify(test)} `,function(){cov_1y300ligpp.f[4]++;const searchParams=(cov_1y300ligpp.s[35]++,{keyToMatch:test[0],valueToMatch:test[1]// keyToReturn: test[2]
});const results=(cov_1y300ligpp.s[36]++,search(searchParams,jsonObj));// console.log('results', results)
// console.log('expected', expected)
cov_1y300ligpp.s[37]++;chai.assert.deepEqual(results,expected);});});});//# sourceMappingURL=tests.cjs.js.map