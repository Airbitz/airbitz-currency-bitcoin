{
  "stats": {
    "suites": 12,
    "tests": 466,
    "passes": 466,
    "pending": 0,
    "failures": 0,
    "start": "2020-03-11T20:59:13.701Z",
    "end": "2020-03-11T20:59:15.724Z",
    "duration": 2023,
    "testsRegistered": 466,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "deaae5d6-f1ee-4d71-a6fa-fb65c811c6d8",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "a182e20a-f6d0-4947-88fd-fcdcb82e009f",
        "title": "Testing HD Key",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Creating Private Key from WIF KwdMAjGmerYanjeui5SHS7JkmpZvVipYvB2LJGU1ZxJwYvP98617",
            "fullTitle": "Testing HD Key Creating Private Key from WIF KwdMAjGmerYanjeui5SHS7JkmpZvVipYvB2LJGU1ZxJwYvP98617",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[59]++;const wif=(cov_1y300ligpp.s[262]++,test[0]);const{privateKey,compress}=(cov_1y300ligpp.s[263]++,fromWIF(wif,network));cov_1y300ligpp.s[264]++;chai.assert.equal(compress,test[1]);cov_1y300ligpp.s[265]++;chai.assert.equal(privateKey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "7cc5f105-df5f-455c-9b96-0416a040ff01",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Public Key from Private Key true",
            "fullTitle": "Testing HD Key Creating Public Key from Private Key true",
            "timedOut": false,
            "duration": 76,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[60]++;const compress=(cov_1y300ligpp.s[267]++,test[1]);const privateKey=(cov_1y300ligpp.s[268]++,test[2]);const publicKey=(cov_1y300ligpp.s[269]++,await toPublic(privateKey,compress));cov_1y300ligpp.s[270]++;chai.assert.equal(publicKey,test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "14170ba4-e4d0-48a2-9826-52d1f63c5a41",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating WIF from from Private Key true",
            "fullTitle": "Testing HD Key Creating WIF from from Private Key true",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[61]++;const compress=(cov_1y300ligpp.s[272]++,test[1]);const privateKey=(cov_1y300ligpp.s[273]++,test[2]);const wif=(cov_1y300ligpp.s[274]++,toWIF(privateKey,network,compress));cov_1y300ligpp.s[275]++;chai.assert.equal(wif,test[0]);",
            "err": {},
            "isRoot": false,
            "uuid": "c4c55988-3094-475a-9a23-185b575aa4bc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Private Key from WIF 5HueCGU8rMjxEXxiPuD5BDku4MkFqeZyd4dZ1jvhTVqvbTLvyTJ",
            "fullTitle": "Testing HD Key Creating Private Key from WIF 5HueCGU8rMjxEXxiPuD5BDku4MkFqeZyd4dZ1jvhTVqvbTLvyTJ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[59]++;const wif=(cov_1y300ligpp.s[262]++,test[0]);const{privateKey,compress}=(cov_1y300ligpp.s[263]++,fromWIF(wif,network));cov_1y300ligpp.s[264]++;chai.assert.equal(compress,test[1]);cov_1y300ligpp.s[265]++;chai.assert.equal(privateKey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "e27167e2-6578-4f40-a1f7-1ce35f800b41",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Public Key from Private Key false",
            "fullTitle": "Testing HD Key Creating Public Key from Private Key false",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[60]++;const compress=(cov_1y300ligpp.s[267]++,test[1]);const privateKey=(cov_1y300ligpp.s[268]++,test[2]);const publicKey=(cov_1y300ligpp.s[269]++,await toPublic(privateKey,compress));cov_1y300ligpp.s[270]++;chai.assert.equal(publicKey,test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "be0aad68-0d46-4cd5-912d-74f7498375b5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating WIF from from Private Key false",
            "fullTitle": "Testing HD Key Creating WIF from from Private Key false",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[61]++;const compress=(cov_1y300ligpp.s[272]++,test[1]);const privateKey=(cov_1y300ligpp.s[273]++,test[2]);const wif=(cov_1y300ligpp.s[274]++,toWIF(privateKey,network,compress));cov_1y300ligpp.s[275]++;chai.assert.equal(wif,test[0]);",
            "err": {},
            "isRoot": false,
            "uuid": "8ddedaa0-3625-4ce7-84f7-beb254982dd4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Private Key from WIF L1a6bxpVHJcM9ZEUS58MM1S9NzjxsJ14iFDV4rAdfMnE5TLGDexM",
            "fullTitle": "Testing HD Key Creating Private Key from WIF L1a6bxpVHJcM9ZEUS58MM1S9NzjxsJ14iFDV4rAdfMnE5TLGDexM",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[59]++;const wif=(cov_1y300ligpp.s[262]++,test[0]);const{privateKey,compress}=(cov_1y300ligpp.s[263]++,fromWIF(wif,network));cov_1y300ligpp.s[264]++;chai.assert.equal(compress,test[1]);cov_1y300ligpp.s[265]++;chai.assert.equal(privateKey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "f0ab82c6-510e-432c-85a2-b8c336204390",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Public Key from Private Key true",
            "fullTitle": "Testing HD Key Creating Public Key from Private Key true",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[60]++;const compress=(cov_1y300ligpp.s[267]++,test[1]);const privateKey=(cov_1y300ligpp.s[268]++,test[2]);const publicKey=(cov_1y300ligpp.s[269]++,await toPublic(privateKey,compress));cov_1y300ligpp.s[270]++;chai.assert.equal(publicKey,test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "4b259168-13cd-4abb-a9ae-02b9cf94ee43",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating WIF from from Private Key true",
            "fullTitle": "Testing HD Key Creating WIF from from Private Key true",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[61]++;const compress=(cov_1y300ligpp.s[272]++,test[1]);const privateKey=(cov_1y300ligpp.s[273]++,test[2]);const wif=(cov_1y300ligpp.s[274]++,toWIF(privateKey,network,compress));cov_1y300ligpp.s[275]++;chai.assert.equal(wif,test[0]);",
            "err": {},
            "isRoot": false,
            "uuid": "c777c45e-e6ea-4e5d-bccc-68d232249736",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Private Key from WIF 5JoU6f2F7QvmtnNBJ1UwuZiwv1rA2syezq5eAwBnv6cd3UUHwbV",
            "fullTitle": "Testing HD Key Creating Private Key from WIF 5JoU6f2F7QvmtnNBJ1UwuZiwv1rA2syezq5eAwBnv6cd3UUHwbV",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[59]++;const wif=(cov_1y300ligpp.s[262]++,test[0]);const{privateKey,compress}=(cov_1y300ligpp.s[263]++,fromWIF(wif,network));cov_1y300ligpp.s[264]++;chai.assert.equal(compress,test[1]);cov_1y300ligpp.s[265]++;chai.assert.equal(privateKey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "42bdb643-e8b5-4b46-a97a-368e89a34e80",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Public Key from Private Key false",
            "fullTitle": "Testing HD Key Creating Public Key from Private Key false",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[60]++;const compress=(cov_1y300ligpp.s[267]++,test[1]);const privateKey=(cov_1y300ligpp.s[268]++,test[2]);const publicKey=(cov_1y300ligpp.s[269]++,await toPublic(privateKey,compress));cov_1y300ligpp.s[270]++;chai.assert.equal(publicKey,test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "798a967e-8b72-4ffe-bd49-f49fbe65d22f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating WIF from from Private Key false",
            "fullTitle": "Testing HD Key Creating WIF from from Private Key false",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[61]++;const compress=(cov_1y300ligpp.s[272]++,test[1]);const privateKey=(cov_1y300ligpp.s[273]++,test[2]);const wif=(cov_1y300ligpp.s[274]++,toWIF(privateKey,network,compress));cov_1y300ligpp.s[275]++;chai.assert.equal(wif,test[0]);",
            "err": {},
            "isRoot": false,
            "uuid": "01881768-3902-4efe-8b4d-8126deffc2d6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Private Key from WIF Kwo7LquQnM5Zq7UxDEKoMWTmbAkXLn5YqtWLwaTTbkTeU2pKZ1Yd",
            "fullTitle": "Testing HD Key Creating Private Key from WIF Kwo7LquQnM5Zq7UxDEKoMWTmbAkXLn5YqtWLwaTTbkTeU2pKZ1Yd",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[59]++;const wif=(cov_1y300ligpp.s[262]++,test[0]);const{privateKey,compress}=(cov_1y300ligpp.s[263]++,fromWIF(wif,network));cov_1y300ligpp.s[264]++;chai.assert.equal(compress,test[1]);cov_1y300ligpp.s[265]++;chai.assert.equal(privateKey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "3670a986-22fe-4059-84d2-43ded72678a6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Public Key from Private Key true",
            "fullTitle": "Testing HD Key Creating Public Key from Private Key true",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[60]++;const compress=(cov_1y300ligpp.s[267]++,test[1]);const privateKey=(cov_1y300ligpp.s[268]++,test[2]);const publicKey=(cov_1y300ligpp.s[269]++,await toPublic(privateKey,compress));cov_1y300ligpp.s[270]++;chai.assert.equal(publicKey,test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "c0fcae98-d4cb-49cd-945c-d7b8ed95e3c6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating WIF from from Private Key true",
            "fullTitle": "Testing HD Key Creating WIF from from Private Key true",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[61]++;const compress=(cov_1y300ligpp.s[272]++,test[1]);const privateKey=(cov_1y300ligpp.s[273]++,test[2]);const wif=(cov_1y300ligpp.s[274]++,toWIF(privateKey,network,compress));cov_1y300ligpp.s[275]++;chai.assert.equal(wif,test[0]);",
            "err": {},
            "isRoot": false,
            "uuid": "dc0a2894-f597-4cf5-ae4a-a8c149fb3690",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Private Key from WIF L22QEFSQNbnHfRc2s4geN2pDbYYoKLkevrf6okBDUB6rDcXLxeHS",
            "fullTitle": "Testing HD Key Creating Private Key from WIF L22QEFSQNbnHfRc2s4geN2pDbYYoKLkevrf6okBDUB6rDcXLxeHS",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[59]++;const wif=(cov_1y300ligpp.s[262]++,test[0]);const{privateKey,compress}=(cov_1y300ligpp.s[263]++,fromWIF(wif,network));cov_1y300ligpp.s[264]++;chai.assert.equal(compress,test[1]);cov_1y300ligpp.s[265]++;chai.assert.equal(privateKey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "bdc626aa-5916-4fb1-96e1-6cb8cfa4c56d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Public Key from Private Key true",
            "fullTitle": "Testing HD Key Creating Public Key from Private Key true",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[60]++;const compress=(cov_1y300ligpp.s[267]++,test[1]);const privateKey=(cov_1y300ligpp.s[268]++,test[2]);const publicKey=(cov_1y300ligpp.s[269]++,await toPublic(privateKey,compress));cov_1y300ligpp.s[270]++;chai.assert.equal(publicKey,test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "28162568-c7dc-4137-982c-176f80ad22e4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating WIF from from Private Key true",
            "fullTitle": "Testing HD Key Creating WIF from from Private Key true",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[61]++;const compress=(cov_1y300ligpp.s[272]++,test[1]);const privateKey=(cov_1y300ligpp.s[273]++,test[2]);const wif=(cov_1y300ligpp.s[274]++,toWIF(privateKey,network,compress));cov_1y300ligpp.s[275]++;chai.assert.equal(wif,test[0]);",
            "err": {},
            "isRoot": false,
            "uuid": "6e974312-17bb-4ceb-9bc4-fb0418a9c1c3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Private Key from WIF Kwngkbfm8AKmp1VHEnAdHGJPcmDPVALX4ydrBrEdTzYuNm6M4EpJ",
            "fullTitle": "Testing HD Key Creating Private Key from WIF Kwngkbfm8AKmp1VHEnAdHGJPcmDPVALX4ydrBrEdTzYuNm6M4EpJ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[59]++;const wif=(cov_1y300ligpp.s[262]++,test[0]);const{privateKey,compress}=(cov_1y300ligpp.s[263]++,fromWIF(wif,network));cov_1y300ligpp.s[264]++;chai.assert.equal(compress,test[1]);cov_1y300ligpp.s[265]++;chai.assert.equal(privateKey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "83f7f4db-2e88-4115-bdeb-412f0cf3b022",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Public Key from Private Key true",
            "fullTitle": "Testing HD Key Creating Public Key from Private Key true",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[60]++;const compress=(cov_1y300ligpp.s[267]++,test[1]);const privateKey=(cov_1y300ligpp.s[268]++,test[2]);const publicKey=(cov_1y300ligpp.s[269]++,await toPublic(privateKey,compress));cov_1y300ligpp.s[270]++;chai.assert.equal(publicKey,test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "d9c61215-d2fe-4a52-9b55-7608dbde66a2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating WIF from from Private Key true",
            "fullTitle": "Testing HD Key Creating WIF from from Private Key true",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[61]++;const compress=(cov_1y300ligpp.s[272]++,test[1]);const privateKey=(cov_1y300ligpp.s[273]++,test[2]);const wif=(cov_1y300ligpp.s[274]++,toWIF(privateKey,network,compress));cov_1y300ligpp.s[275]++;chai.assert.equal(wif,test[0]);",
            "err": {},
            "isRoot": false,
            "uuid": "3c614eea-9089-4edc-9ce4-8f63b59ecab4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Private Key from WIF KzC6waAr74TaGJjuYGFQAikbm3H5aCNebV5xStiEKgADzDD4Xi3C",
            "fullTitle": "Testing HD Key Creating Private Key from WIF KzC6waAr74TaGJjuYGFQAikbm3H5aCNebV5xStiEKgADzDD4Xi3C",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[59]++;const wif=(cov_1y300ligpp.s[262]++,test[0]);const{privateKey,compress}=(cov_1y300ligpp.s[263]++,fromWIF(wif,network));cov_1y300ligpp.s[264]++;chai.assert.equal(compress,test[1]);cov_1y300ligpp.s[265]++;chai.assert.equal(privateKey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "659f0913-e1d5-4b9d-8029-7b7f0ecb6e9e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Public Key from Private Key true",
            "fullTitle": "Testing HD Key Creating Public Key from Private Key true",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[60]++;const compress=(cov_1y300ligpp.s[267]++,test[1]);const privateKey=(cov_1y300ligpp.s[268]++,test[2]);const publicKey=(cov_1y300ligpp.s[269]++,await toPublic(privateKey,compress));cov_1y300ligpp.s[270]++;chai.assert.equal(publicKey,test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "12e0e41c-ea70-43c9-b477-694233e7b284",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating WIF from from Private Key true",
            "fullTitle": "Testing HD Key Creating WIF from from Private Key true",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[61]++;const compress=(cov_1y300ligpp.s[272]++,test[1]);const privateKey=(cov_1y300ligpp.s[273]++,test[2]);const wif=(cov_1y300ligpp.s[274]++,toWIF(privateKey,network,compress));cov_1y300ligpp.s[275]++;chai.assert.equal(wif,test[0]);",
            "err": {},
            "isRoot": false,
            "uuid": "36dbc02a-d72f-43bc-819c-81457fb7b9aa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Private Key from WIF KzkH8BMjjgmvHbCGTcPfkuBKGPrTE1M2Xs6wKJ92j4DFwbvHyC4D",
            "fullTitle": "Testing HD Key Creating Private Key from WIF KzkH8BMjjgmvHbCGTcPfkuBKGPrTE1M2Xs6wKJ92j4DFwbvHyC4D",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[59]++;const wif=(cov_1y300ligpp.s[262]++,test[0]);const{privateKey,compress}=(cov_1y300ligpp.s[263]++,fromWIF(wif,network));cov_1y300ligpp.s[264]++;chai.assert.equal(compress,test[1]);cov_1y300ligpp.s[265]++;chai.assert.equal(privateKey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "91d38a66-c8f8-448e-9623-d9aea8bf6a6a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating Public Key from Private Key true",
            "fullTitle": "Testing HD Key Creating Public Key from Private Key true",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[60]++;const compress=(cov_1y300ligpp.s[267]++,test[1]);const privateKey=(cov_1y300ligpp.s[268]++,test[2]);const publicKey=(cov_1y300ligpp.s[269]++,await toPublic(privateKey,compress));cov_1y300ligpp.s[270]++;chai.assert.equal(publicKey,test[3]);",
            "err": {},
            "isRoot": false,
            "uuid": "bbdfce42-db05-46f7-a8c6-a0d6375a99a8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creating WIF from from Private Key true",
            "fullTitle": "Testing HD Key Creating WIF from from Private Key true",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[61]++;const compress=(cov_1y300ligpp.s[272]++,test[1]);const privateKey=(cov_1y300ligpp.s[273]++,test[2]);const wif=(cov_1y300ligpp.s[274]++,toWIF(privateKey,network,compress));cov_1y300ligpp.s[275]++;chai.assert.equal(wif,test[0]);",
            "err": {},
            "isRoot": false,
            "uuid": "dc2e6832-0bce-4239-a76a-f43bd67c04bd",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7cc5f105-df5f-455c-9b96-0416a040ff01",
          "14170ba4-e4d0-48a2-9826-52d1f63c5a41",
          "c4c55988-3094-475a-9a23-185b575aa4bc",
          "e27167e2-6578-4f40-a1f7-1ce35f800b41",
          "be0aad68-0d46-4cd5-912d-74f7498375b5",
          "8ddedaa0-3625-4ce7-84f7-beb254982dd4",
          "f0ab82c6-510e-432c-85a2-b8c336204390",
          "4b259168-13cd-4abb-a9ae-02b9cf94ee43",
          "c777c45e-e6ea-4e5d-bccc-68d232249736",
          "42bdb643-e8b5-4b46-a97a-368e89a34e80",
          "798a967e-8b72-4ffe-bd49-f49fbe65d22f",
          "01881768-3902-4efe-8b4d-8126deffc2d6",
          "3670a986-22fe-4059-84d2-43ded72678a6",
          "c0fcae98-d4cb-49cd-945c-d7b8ed95e3c6",
          "dc0a2894-f597-4cf5-ae4a-a8c149fb3690",
          "bdc626aa-5916-4fb1-96e1-6cb8cfa4c56d",
          "28162568-c7dc-4137-982c-176f80ad22e4",
          "6e974312-17bb-4ceb-9bc4-fb0418a9c1c3",
          "83f7f4db-2e88-4115-bdeb-412f0cf3b022",
          "d9c61215-d2fe-4a52-9b55-7608dbde66a2",
          "3c614eea-9089-4edc-9ce4-8f63b59ecab4",
          "659f0913-e1d5-4b9d-8029-7b7f0ecb6e9e",
          "12e0e41c-ea70-43c9-b477-694233e7b284",
          "36dbc02a-d72f-43bc-819c-81457fb7b9aa",
          "91d38a66-c8f8-448e-9623-d9aea8bf6a6a",
          "bbdfce42-db05-46f7-a8c6-a0d6375a99a8",
          "dc2e6832-0bce-4239-a76a-f43bd67c04bd"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 107,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "b594db31-0c94-4672-be44-c643e068b9f6",
        "title": "Testing XKey Private Key",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Extended key from seed 2fe98754525f698edcb6088bb2e992c32004acef0f3905a6fb0225971dea677860805bed284ee7e5f3cdf1bee691d04201ea11290d3091b81ceffa6fc39be5f7",
            "fullTitle": "Testing XKey Private Key Extended key from seed 2fe98754525f698edcb6088bb2e992c32004acef0f3905a6fb0225971dea677860805bed284ee7e5f3cdf1bee691d04201ea11290d3091b81ceffa6fc39be5f7",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[89]++;const childKey=(cov_1y300ligpp.s[468]++,fromSeed$1(test[1],network$3));const xkey=(cov_1y300ligpp.s[469]++,toString$3(childKey));cov_1y300ligpp.s[470]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "d474ccc2-58f2-4c87-bd8e-3223d402c8c5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from seed c651a27f6f4f5366999aa22271695f25a3fc28f979b138df471b869ab395961c8ba5347d43a52afbf331285add025b5c7d3eaea7ab883aba6f8b6c04f5f0dba0",
            "fullTitle": "Testing XKey Private Key Extended key from seed c651a27f6f4f5366999aa22271695f25a3fc28f979b138df471b869ab395961c8ba5347d43a52afbf331285add025b5c7d3eaea7ab883aba6f8b6c04f5f0dba0",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[89]++;const childKey=(cov_1y300ligpp.s[468]++,fromSeed$1(test[1],network$3));const xkey=(cov_1y300ligpp.s[469]++,toString$3(childKey));cov_1y300ligpp.s[470]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "789aec75-93f1-4fcf-a057-76adddee3782",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from seed 16d46953c56010aee578d33dc9326075cf79e13c9492f2bd277334414b8ad19e305892e8a6e230a4e40bab8b39be1d53055b23b4bebe8f6a521b30c821764332",
            "fullTitle": "Testing XKey Private Key Extended key from seed 16d46953c56010aee578d33dc9326075cf79e13c9492f2bd277334414b8ad19e305892e8a6e230a4e40bab8b39be1d53055b23b4bebe8f6a521b30c821764332",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[89]++;const childKey=(cov_1y300ligpp.s[468]++,fromSeed$1(test[1],network$3));const xkey=(cov_1y300ligpp.s[469]++,toString$3(childKey));cov_1y300ligpp.s[470]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "2365e6da-a1d3-4df0-b138-50cd9f654c97",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Extended key from seed c094a23d338f64adde79314ecaa237cff218c8463bd10d61cc54928f2c636240319c17d3464c7104e3a7694fabfdcf84d37b9b1d97700772963777f7ff593c6a",
            "fullTitle": "Testing XKey Private Key Extended key from seed c094a23d338f64adde79314ecaa237cff218c8463bd10d61cc54928f2c636240319c17d3464c7104e3a7694fabfdcf84d37b9b1d97700772963777f7ff593c6a",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[89]++;const childKey=(cov_1y300ligpp.s[468]++,fromSeed$1(test[1],network$3));const xkey=(cov_1y300ligpp.s[469]++,toString$3(childKey));cov_1y300ligpp.s[470]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "882eece8-7d8b-467d-bbbc-ae6d8c2f9438",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "2fed253e-0d98-435d-8464-faa23de9ac7a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35",
            "fullTitle": "Testing XKey Private Key XKey key to string: e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "e464f51e-1660-42b0-b59e-f3e7332c2292",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9uHRZZhk6KAJC1avXpDAp4MDc3sQKNxDiPvvkX8Br5ngLNv1TxvUxt4cV1rGL5hj6KCesnDYUhd7oWgT11eZG7XnxHrnYeSvkzY7d2bhkJ7",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9uHRZZhk6KAJC1avXpDAp4MDc3sQKNxDiPvvkX8Br5ngLNv1TxvUxt4cV1rGL5hj6KCesnDYUhd7oWgT11eZG7XnxHrnYeSvkzY7d2bhkJ7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "07dc3185-efe2-4fd0-877e-09b3d77a139f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea",
            "fullTitle": "Testing XKey Private Key XKey key to string: edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "ad6e1efa-19d0-4f20-bbbd-1d529e556f31",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9wTYmMFdV23N2TdNG573QoEsfRrWKQgWeibmLntzniatZvR9BmLnvSxqu53Kw1UmYPxLgboyZQaXwTCg8MSY3H2EU4pWcQDnRnrVA1xe8fs",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9wTYmMFdV23N2TdNG573QoEsfRrWKQgWeibmLntzniatZvR9BmLnvSxqu53Kw1UmYPxLgboyZQaXwTCg8MSY3H2EU4pWcQDnRnrVA1xe8fs",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "6172f9a6-c751-4ab7-975b-c81c7604ef19",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368",
            "fullTitle": "Testing XKey Private Key XKey key to string: 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "326f10e9-a8e8-4aa0-b9dd-ab7d0bc43c8e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9z4pot5VBttmtdRTWfWQmoH1taj2axGVzFqSb8C9xaxKymcFzXBDptWmT7FwuEzG3ryjH4ktypQSAewRiNMjANTtpgP4mLTj34bhnZX7UiM",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9z4pot5VBttmtdRTWfWQmoH1taj2axGVzFqSb8C9xaxKymcFzXBDptWmT7FwuEzG3ryjH4ktypQSAewRiNMjANTtpgP4mLTj34bhnZX7UiM",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "08749f08-9c5f-4d3e-9aa5-1e402879deed",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca",
            "fullTitle": "Testing XKey Private Key XKey key to string: cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "c0abdbdf-caef-4418-a7f9-77d0d49cf585",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprvA2JDeKCSNNZky6uBCviVfJSKyQ1mDYahRjijr5idH2WwLsEd4Hsb2Tyh8RfQMuPh7f7RtyzTtdrbdqqsunu5Mm3wDvUAKRHSC34sJ7in334",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprvA2JDeKCSNNZky6uBCviVfJSKyQ1mDYahRjijr5idH2WwLsEd4Hsb2Tyh8RfQMuPh7f7RtyzTtdrbdqqsunu5Mm3wDvUAKRHSC34sJ7in334",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "adc8ebc7-4c5b-4852-887b-ff8d381203d3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 0f479245fb19a38a1954c5c7c0ebab2f9bdfd96a17563ef28a6a4b1a2a764ef4",
            "fullTitle": "Testing XKey Private Key XKey key to string: 0f479245fb19a38a1954c5c7c0ebab2f9bdfd96a17563ef28a6a4b1a2a764ef4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "0adaca34-33b8-4d7c-9ff5-20e66a61eca8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprvA41z7zogVVwxVSgdKUHDy1SKmdb533PjDz7J6N6mV6uS3ze1ai8FHa8kmHScGpWmj4WggLyQjgPie1rFSruoUihUZREPSL39UNdE3BBDu76",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprvA41z7zogVVwxVSgdKUHDy1SKmdb533PjDz7J6N6mV6uS3ze1ai8FHa8kmHScGpWmj4WggLyQjgPie1rFSruoUihUZREPSL39UNdE3BBDu76",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "ddf3c3eb-4f56-412e-88fd-e8175e41e47f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 471b76e389e528d6de6d816857e012c5455051cad6660850e58372a6c3e6e7c8",
            "fullTitle": "Testing XKey Private Key XKey key to string: 471b76e389e528d6de6d816857e012c5455051cad6660850e58372a6c3e6e7c8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "1e924cda-37f8-4367-b6af-043b62a5c034",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "fddd6b6d-9698-45ec-9a83-4fd78b0ac662",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e",
            "fullTitle": "Testing XKey Private Key XKey key to string: 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "b7652765-489f-41ff-b21c-52897d199cec",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "ac4e1feb-8d6c-4cfa-bae2-c5ad1cff303d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e",
            "fullTitle": "Testing XKey Private Key XKey key to string: abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "12b92e65-00df-4f3d-9f1b-2dfa157811fa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9wSp6B7kry3Vj9m1zSnLvN3xH8RdsPP1Mh7fAaR7aRLcQMKTR2vidYEeEg2mUCTAwCd6vnxVrcjfy2kRgVsFawNzmjuHc2YmYRmagcEPdU9",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9wSp6B7kry3Vj9m1zSnLvN3xH8RdsPP1Mh7fAaR7aRLcQMKTR2vidYEeEg2mUCTAwCd6vnxVrcjfy2kRgVsFawNzmjuHc2YmYRmagcEPdU9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "bf849a2a-55be-40c6-95e8-76b6eb83e2cc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93",
            "fullTitle": "Testing XKey Private Key XKey key to string: 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "3c248c44-93ce-4075-8087-a2056914b90e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9zFnWC6h2cLgpmSA46vutJzBcfJ8yaJGg8cX1e5StJh45BBciYTRXSd25UEPVuesF9yog62tGAQtHjXajPPdbRCHuWS6T8XA2ECKADdw4Ef",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9zFnWC6h2cLgpmSA46vutJzBcfJ8yaJGg8cX1e5StJh45BBciYTRXSd25UEPVuesF9yog62tGAQtHjXajPPdbRCHuWS6T8XA2ECKADdw4Ef",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "9cf72ffa-d9ff-49bd-8182-30e653ada313",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7",
            "fullTitle": "Testing XKey Private Key XKey key to string: 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "26ea0de2-173d-4c94-a283-451384b7db29",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "676e4ada-c076-4dca-8597-932ade06ace5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d",
            "fullTitle": "Testing XKey Private Key XKey key to string: f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "d49959a8-dbc1-4556-8c97-52613646b3e5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprvA2nrNbFZABcdryreWet9Ea4LvTJcGsqrMzxHx98MMrotbir7yrKCEXw7nadnHM8Dq38EGfSh6dqA9QWTyefMLEcBYJUuekgW4BYPJcr9E7j",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprvA2nrNbFZABcdryreWet9Ea4LvTJcGsqrMzxHx98MMrotbir7yrKCEXw7nadnHM8Dq38EGfSh6dqA9QWTyefMLEcBYJUuekgW4BYPJcr9E7j",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b28a6141-176d-4dbe-bb8a-16cb13b26565",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: bb7d39bdb83ecf58f2fd82b6d918341cbef428661ef01ab97c28a4842125ac23",
            "fullTitle": "Testing XKey Private Key XKey key to string: bb7d39bdb83ecf58f2fd82b6d918341cbef428661ef01ab97c28a4842125ac23",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "b3d71b46-2b33-4081-8614-26f02deeb1f2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9s21ZrQH143K35zTejeVRhkXgegDFUVpoh8Mxs2BQmXEB4w9SZ1CuoJPuQ2KGQrS1ZF3Pk7V7KWHn7FqR2JbAE9Bh8PURnrFnrmArj4kxos",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9s21ZrQH143K35zTejeVRhkXgegDFUVpoh8Mxs2BQmXEB4w9SZ1CuoJPuQ2KGQrS1ZF3Pk7V7KWHn7FqR2JbAE9Bh8PURnrFnrmArj4kxos",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b66fbe0f-02f1-42e2-893d-8d659494048e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 7bd083869bd02e57786d119a81d406ac1524a765470acee90834c60f841e6236",
            "fullTitle": "Testing XKey Private Key XKey key to string: 7bd083869bd02e57786d119a81d406ac1524a765470acee90834c60f841e6236",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "fa44cc79-deb8-4f86-984d-9fa27b5822ca",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9v414VeuxMoGt3t7jzkPni79suCfkgFwjxG38X2wgfg2mrYtV4Bhj3prhDDCcBiJrz9n4xLYoDtBFRuQmreVLKzmiZAqvbGpx5q4yHfzfah",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9v414VeuxMoGt3t7jzkPni79suCfkgFwjxG38X2wgfg2mrYtV4Bhj3prhDDCcBiJrz9n4xLYoDtBFRuQmreVLKzmiZAqvbGpx5q4yHfzfah",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "29fa4927-6d32-49f1-bfc1-1cf29a082a27",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 622c81feac4a3bf2d87578edeb3384b8b024184fbc515626c897ea452e7c8f96",
            "fullTitle": "Testing XKey Private Key XKey key to string: 622c81feac4a3bf2d87578edeb3384b8b024184fbc515626c897ea452e7c8f96",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "0da90012-333b-462d-a511-21f5c11f2eee",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9v414VeuxMoGusHLt8GowZuX6hn3Cp3qzAE6Cb2jKPH5MBgLJu2CWuiLKTdWV8WoNFYvpCcBfbpWfeyEQ8zytZW5qy39roTcugBGUkeAvCc",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9v414VeuxMoGusHLt8GowZuX6hn3Cp3qzAE6Cb2jKPH5MBgLJu2CWuiLKTdWV8WoNFYvpCcBfbpWfeyEQ8zytZW5qy39roTcugBGUkeAvCc",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "3956b55a-b054-40b0-8d5a-e2d96178db05",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: da4b3947e054576f0f353d1a7f4eedd7dbca242a83cba29d3962a2ffd4e30ae5",
            "fullTitle": "Testing XKey Private Key XKey key to string: da4b3947e054576f0f353d1a7f4eedd7dbca242a83cba29d3962a2ffd4e30ae5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "0924106d-af6e-4e46-b594-bccfc1b70b90",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9v414VeuxMoGyViVYuzEN5vLDzff3nkrH5Bf4KzD1iTeY855Q4cCc6xPPNoc6MJcsqqRQiGqR977cEEGK2mhVp7ALKHqY1icEw3Q9UmfQ1v",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9v414VeuxMoGyViVYuzEN5vLDzff3nkrH5Bf4KzD1iTeY855Q4cCc6xPPNoc6MJcsqqRQiGqR977cEEGK2mhVp7ALKHqY1icEw3Q9UmfQ1v",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "6aa6207c-f58a-402d-959e-3330db1fb8e7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: b7aaa6c8f5b4013e7b1755ae877b9fad530e9b2e86f68cec7420a6cea38e81b0",
            "fullTitle": "Testing XKey Private Key XKey key to string: b7aaa6c8f5b4013e7b1755ae877b9fad530e9b2e86f68cec7420a6cea38e81b0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "1ca32a4a-3f60-4ef6-ac70-8ec205adf886",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9xaK29Nm86ytEwsV9YSsL3jWYR6KtZYY3cKdjAbxHrwKyxH9YWoxvqKwtgQmExGpxAEDrwB4WK9YG1iukth3XiSgsxXLK1W3NB31gLee8fi",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9xaK29Nm86ytEwsV9YSsL3jWYR6KtZYY3cKdjAbxHrwKyxH9YWoxvqKwtgQmExGpxAEDrwB4WK9YG1iukth3XiSgsxXLK1W3NB31gLee8fi",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "d4ccd50e-2b6a-4ccd-ac41-f747a42446ad",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: c9ba3ede6230e80cb243e9b20a1bd4846165ea312fde7eafe56fc52dcd583899",
            "fullTitle": "Testing XKey Private Key XKey key to string: c9ba3ede6230e80cb243e9b20a1bd4846165ea312fde7eafe56fc52dcd583899",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "4f32fd78-2424-40a9-9d31-f453ecf3acf7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9xaK29Nm86ytGx9uDhNKUBjvbJ1sAEM11aYxGQS66Rmg6oHwy7HbB6kWwMHvukzdbPpGhfNXhZgePWFHm1DCh5PACPFywJJKr1AnUJTLjUc",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9xaK29Nm86ytGx9uDhNKUBjvbJ1sAEM11aYxGQS66Rmg6oHwy7HbB6kWwMHvukzdbPpGhfNXhZgePWFHm1DCh5PACPFywJJKr1AnUJTLjUc",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "e28c2fed-9aae-4d4c-98bf-b75e15ab1565",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: f2039f55285a430162c720126d26e96ec43e5b680a0d71cbabaa28dbea091f43",
            "fullTitle": "Testing XKey Private Key XKey key to string: f2039f55285a430162c720126d26e96ec43e5b680a0d71cbabaa28dbea091f43",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "ed76e881-706b-4adb-b764-0f8827e0b9b9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xprv9s21ZrQH143K3ckY9DgU79uMTJkQRLdbCCVDh81SnxTgPzLLGax6uHeBULTtaEtcAvKjXfT7ZWtHzKjTpujMkUd9dDb8msDeAfnJxrgAYhr",
            "fullTitle": "Testing XKey Private Key XKey key from string: xprv9s21ZrQH143K3ckY9DgU79uMTJkQRLdbCCVDh81SnxTgPzLLGax6uHeBULTtaEtcAvKjXfT7ZWtHzKjTpujMkUd9dDb8msDeAfnJxrgAYhr",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[91]++;const resultedXkey=(cov_1y300ligpp.s[475]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[476]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "74b5af7c-8b79-471f-a9a0-6a775fc9e6ab",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 00000055378cf5fafb56c711c674143f9b0ee82ab0ba2924f19b64f5ae7cdbfd",
            "fullTitle": "Testing XKey Private Key XKey key to string: 00000055378cf5fafb56c711c674143f9b0ee82ab0ba2924f19b64f5ae7cdbfd",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[92]++;const resultedBase58Key=(cov_1y300ligpp.s[478]++,toString$3(privateKey,network$3));cov_1y300ligpp.s[479]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "f2df131e-bcea-4e2d-855b-45123abe3965",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35 for index 2147483648",
            "fullTitle": "Testing XKey Private Key Deriving key e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35 for index 2147483648",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[94]++;const privateKey=(cov_1y300ligpp.s[482]++,test[0]);const chainCode=(cov_1y300ligpp.s[483]++,test[1]);const index=(cov_1y300ligpp.s[484]++,test[2]);const publicKey=(cov_1y300ligpp.s[485]++,test[6]);const expectedChildKey=(cov_1y300ligpp.s[486]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]// $FlowFixMe\n});const xKey=(cov_1y300ligpp.s[487]++,fromXKey({privateKey,chainCode,publicKey},network$3));// $FlowFixMe\nconst childKey=(cov_1y300ligpp.s[488]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[489]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "dc9c5478-954d-4570-8b8d-c0d3509baf09",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368 for index 2147483650",
            "fullTitle": "Testing XKey Private Key Deriving key 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368 for index 2147483650",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[94]++;const privateKey=(cov_1y300ligpp.s[482]++,test[0]);const chainCode=(cov_1y300ligpp.s[483]++,test[1]);const index=(cov_1y300ligpp.s[484]++,test[2]);const publicKey=(cov_1y300ligpp.s[485]++,test[6]);const expectedChildKey=(cov_1y300ligpp.s[486]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]// $FlowFixMe\n});const xKey=(cov_1y300ligpp.s[487]++,fromXKey({privateKey,chainCode,publicKey},network$3));// $FlowFixMe\nconst childKey=(cov_1y300ligpp.s[488]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[489]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "54493395-fadd-4460-bc1b-9563bf318380",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e for index 4294967295",
            "fullTitle": "Testing XKey Private Key Deriving key abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e for index 4294967295",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[94]++;const privateKey=(cov_1y300ligpp.s[482]++,test[0]);const chainCode=(cov_1y300ligpp.s[483]++,test[1]);const index=(cov_1y300ligpp.s[484]++,test[2]);const publicKey=(cov_1y300ligpp.s[485]++,test[6]);const expectedChildKey=(cov_1y300ligpp.s[486]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]// $FlowFixMe\n});const xKey=(cov_1y300ligpp.s[487]++,fromXKey({privateKey,chainCode,publicKey},network$3));// $FlowFixMe\nconst childKey=(cov_1y300ligpp.s[488]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[489]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "41a951e1-14d9-4193-a455-b680b7cdf3cb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7 for index 4294967294",
            "fullTitle": "Testing XKey Private Key Deriving key 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7 for index 4294967294",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[94]++;const privateKey=(cov_1y300ligpp.s[482]++,test[0]);const chainCode=(cov_1y300ligpp.s[483]++,test[1]);const index=(cov_1y300ligpp.s[484]++,test[2]);const publicKey=(cov_1y300ligpp.s[485]++,test[6]);const expectedChildKey=(cov_1y300ligpp.s[486]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]// $FlowFixMe\n});const xKey=(cov_1y300ligpp.s[487]++,fromXKey({privateKey,chainCode,publicKey},network$3));// $FlowFixMe\nconst childKey=(cov_1y300ligpp.s[488]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[489]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b49ff0a0-1abb-4c7f-a8ef-2ce8a160948e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea for index 1",
            "fullTitle": "Testing XKey Private Key Deriving key edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea for index 1",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[94]++;const privateKey=(cov_1y300ligpp.s[482]++,test[0]);const chainCode=(cov_1y300ligpp.s[483]++,test[1]);const index=(cov_1y300ligpp.s[484]++,test[2]);const publicKey=(cov_1y300ligpp.s[485]++,test[6]);const expectedChildKey=(cov_1y300ligpp.s[486]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]// $FlowFixMe\n});const xKey=(cov_1y300ligpp.s[487]++,fromXKey({privateKey,chainCode,publicKey},network$3));// $FlowFixMe\nconst childKey=(cov_1y300ligpp.s[488]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[489]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "2efb8ca4-bcbb-44db-9a8a-9956e44c7585",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca for index 2",
            "fullTitle": "Testing XKey Private Key Deriving key cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca for index 2",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[94]++;const privateKey=(cov_1y300ligpp.s[482]++,test[0]);const chainCode=(cov_1y300ligpp.s[483]++,test[1]);const index=(cov_1y300ligpp.s[484]++,test[2]);const publicKey=(cov_1y300ligpp.s[485]++,test[6]);const expectedChildKey=(cov_1y300ligpp.s[486]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]// $FlowFixMe\n});const xKey=(cov_1y300ligpp.s[487]++,fromXKey({privateKey,chainCode,publicKey},network$3));// $FlowFixMe\nconst childKey=(cov_1y300ligpp.s[488]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[489]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "194a3581-b594-48d4-9073-05df0ee34524",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e for index 0",
            "fullTitle": "Testing XKey Private Key Deriving key 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e for index 0",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[94]++;const privateKey=(cov_1y300ligpp.s[482]++,test[0]);const chainCode=(cov_1y300ligpp.s[483]++,test[1]);const index=(cov_1y300ligpp.s[484]++,test[2]);const publicKey=(cov_1y300ligpp.s[485]++,test[6]);const expectedChildKey=(cov_1y300ligpp.s[486]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]// $FlowFixMe\n});const xKey=(cov_1y300ligpp.s[487]++,fromXKey({privateKey,chainCode,publicKey},network$3));// $FlowFixMe\nconst childKey=(cov_1y300ligpp.s[488]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[489]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "d9cebec1-1609-4fd6-883e-70ff477f1d29",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93 for index 1",
            "fullTitle": "Testing XKey Private Key Deriving key 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93 for index 1",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[94]++;const privateKey=(cov_1y300ligpp.s[482]++,test[0]);const chainCode=(cov_1y300ligpp.s[483]++,test[1]);const index=(cov_1y300ligpp.s[484]++,test[2]);const publicKey=(cov_1y300ligpp.s[485]++,test[6]);const expectedChildKey=(cov_1y300ligpp.s[486]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]// $FlowFixMe\n});const xKey=(cov_1y300ligpp.s[487]++,fromXKey({privateKey,chainCode,publicKey},network$3));// $FlowFixMe\nconst childKey=(cov_1y300ligpp.s[488]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[489]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "3f38dd1f-1bb6-4a3e-af0c-6eb45636d811",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d for index 2",
            "fullTitle": "Testing XKey Private Key Deriving key f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d for index 2",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[94]++;const privateKey=(cov_1y300ligpp.s[482]++,test[0]);const chainCode=(cov_1y300ligpp.s[483]++,test[1]);const index=(cov_1y300ligpp.s[484]++,test[2]);const publicKey=(cov_1y300ligpp.s[485]++,test[6]);const expectedChildKey=(cov_1y300ligpp.s[486]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]// $FlowFixMe\n});const xKey=(cov_1y300ligpp.s[487]++,fromXKey({privateKey,chainCode,publicKey},network$3));// $FlowFixMe\nconst childKey=(cov_1y300ligpp.s[488]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[489]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "07a62708-4116-4d75-ae87-74dbbc768fca",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XKey key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from XKey Settings xprv9wu4xj9HBf23eLtY9AvoQSth3vA4TpE4a4SUBXHD3yK62ikgaRvVH8pMq2SzRVVG63GtPgjTKZY1CYmHkgyucgjeMKGBANpMksxDTPWtqcU",
            "fullTitle": "Testing XKey Private Key Deriving XKey key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from XKey Settings xprv9wu4xj9HBf23eLtY9AvoQSth3vA4TpE4a4SUBXHD3yK62ikgaRvVH8pMq2SzRVVG63GtPgjTKZY1CYmHkgyucgjeMKGBANpMksxDTPWtqcU",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[96]++;const xkey=(cov_1y300ligpp.s[492]++,test[0]);const parentKey=(cov_1y300ligpp.s[493]++,fromString$3(xkey,network$3));let account=(cov_1y300ligpp.s[494]++,0);let coinType=(cov_1y300ligpp.s[495]++,0);let bips=(cov_1y300ligpp.s[496]++,test[2]);cov_1y300ligpp.s[497]++;if(!bips){cov_1y300ligpp.b[108][0]++;cov_1y300ligpp.s[498]++;bips=[84];}else{cov_1y300ligpp.b[108][1]++;}cov_1y300ligpp.s[499]++;if(test[1]){cov_1y300ligpp.b[109][0]++;cov_1y300ligpp.s[500]++;account=test[1][0];cov_1y300ligpp.s[501]++;coinType=test[1][1];}else{cov_1y300ligpp.b[109][1]++;}let testIndex=(cov_1y300ligpp.s[502]++,3);cov_1y300ligpp.s[503]++;const testPath=async path=>{cov_1y300ligpp.f[97]++;const hdKey=(cov_1y300ligpp.s[504]++,await toPath$2(parentKey,path));const xprivkey=(cov_1y300ligpp.s[505]++,toString$3(hdKey,network$3));const pubKey=(cov_1y300ligpp.s[506]++,await toXPub$1(hdKey,network$3));const xpubkey=(cov_1y300ligpp.s[507]++,toString$3(pubKey,network$3));cov_1y300ligpp.s[508]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_1y300ligpp.s[509]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');};cov_1y300ligpp.s[510]++;for(const purpose of bips){cov_1y300ligpp.s[511]++;if(purpose===32){cov_1y300ligpp.b[110][0]++;cov_1y300ligpp.s[512]++;await testPath(['m',`${account}`,0].join('/'));cov_1y300ligpp.s[513]++;testIndex-=2;cov_1y300ligpp.s[514]++;await testPath([account,0]);}else{cov_1y300ligpp.b[110][1]++;cov_1y300ligpp.s[515]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,0].join('/'));cov_1y300ligpp.s[516]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,1].join('/'));cov_1y300ligpp.s[517]++;testIndex-=4;cov_1y300ligpp.s[518]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,0]);cov_1y300ligpp.s[519]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,1]);}}",
            "err": {},
            "isRoot": false,
            "uuid": "44777da8-506e-4e79-a5d8-08db2f3d1e1e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XKey key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from XKey Settings xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc",
            "fullTitle": "Testing XKey Private Key Deriving XKey key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from XKey Settings xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc",
            "timedOut": false,
            "duration": 29,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[96]++;const xkey=(cov_1y300ligpp.s[492]++,test[0]);const parentKey=(cov_1y300ligpp.s[493]++,fromString$3(xkey,network$3));let account=(cov_1y300ligpp.s[494]++,0);let coinType=(cov_1y300ligpp.s[495]++,0);let bips=(cov_1y300ligpp.s[496]++,test[2]);cov_1y300ligpp.s[497]++;if(!bips){cov_1y300ligpp.b[108][0]++;cov_1y300ligpp.s[498]++;bips=[84];}else{cov_1y300ligpp.b[108][1]++;}cov_1y300ligpp.s[499]++;if(test[1]){cov_1y300ligpp.b[109][0]++;cov_1y300ligpp.s[500]++;account=test[1][0];cov_1y300ligpp.s[501]++;coinType=test[1][1];}else{cov_1y300ligpp.b[109][1]++;}let testIndex=(cov_1y300ligpp.s[502]++,3);cov_1y300ligpp.s[503]++;const testPath=async path=>{cov_1y300ligpp.f[97]++;const hdKey=(cov_1y300ligpp.s[504]++,await toPath$2(parentKey,path));const xprivkey=(cov_1y300ligpp.s[505]++,toString$3(hdKey,network$3));const pubKey=(cov_1y300ligpp.s[506]++,await toXPub$1(hdKey,network$3));const xpubkey=(cov_1y300ligpp.s[507]++,toString$3(pubKey,network$3));cov_1y300ligpp.s[508]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_1y300ligpp.s[509]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');};cov_1y300ligpp.s[510]++;for(const purpose of bips){cov_1y300ligpp.s[511]++;if(purpose===32){cov_1y300ligpp.b[110][0]++;cov_1y300ligpp.s[512]++;await testPath(['m',`${account}`,0].join('/'));cov_1y300ligpp.s[513]++;testIndex-=2;cov_1y300ligpp.s[514]++;await testPath([account,0]);}else{cov_1y300ligpp.b[110][1]++;cov_1y300ligpp.s[515]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,0].join('/'));cov_1y300ligpp.s[516]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,1].join('/'));cov_1y300ligpp.s[517]++;testIndex-=4;cov_1y300ligpp.s[518]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,0]);cov_1y300ligpp.s[519]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,1]);}}",
            "err": {},
            "isRoot": false,
            "uuid": "5547e9dc-3508-4c77-a1fb-1d2756b6dd6d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XKey key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from XKey Settings xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc",
            "fullTitle": "Testing XKey Private Key Deriving XKey key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from XKey Settings xprvA1DL6AqusHvgE9Anktxvm2vBStKKT6EmEX32vDxaJipiEDccBnvsZpoVyTBQQDzVX727icM3CKy2oPdFZj84n8EsE8CWYaAqxLmNNMPsKsc",
            "timedOut": false,
            "duration": 47,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[96]++;const xkey=(cov_1y300ligpp.s[492]++,test[0]);const parentKey=(cov_1y300ligpp.s[493]++,fromString$3(xkey,network$3));let account=(cov_1y300ligpp.s[494]++,0);let coinType=(cov_1y300ligpp.s[495]++,0);let bips=(cov_1y300ligpp.s[496]++,test[2]);cov_1y300ligpp.s[497]++;if(!bips){cov_1y300ligpp.b[108][0]++;cov_1y300ligpp.s[498]++;bips=[84];}else{cov_1y300ligpp.b[108][1]++;}cov_1y300ligpp.s[499]++;if(test[1]){cov_1y300ligpp.b[109][0]++;cov_1y300ligpp.s[500]++;account=test[1][0];cov_1y300ligpp.s[501]++;coinType=test[1][1];}else{cov_1y300ligpp.b[109][1]++;}let testIndex=(cov_1y300ligpp.s[502]++,3);cov_1y300ligpp.s[503]++;const testPath=async path=>{cov_1y300ligpp.f[97]++;const hdKey=(cov_1y300ligpp.s[504]++,await toPath$2(parentKey,path));const xprivkey=(cov_1y300ligpp.s[505]++,toString$3(hdKey,network$3));const pubKey=(cov_1y300ligpp.s[506]++,await toXPub$1(hdKey,network$3));const xpubkey=(cov_1y300ligpp.s[507]++,toString$3(pubKey,network$3));cov_1y300ligpp.s[508]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_1y300ligpp.s[509]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');};cov_1y300ligpp.s[510]++;for(const purpose of bips){cov_1y300ligpp.s[511]++;if(purpose===32){cov_1y300ligpp.b[110][0]++;cov_1y300ligpp.s[512]++;await testPath(['m',`${account}`,0].join('/'));cov_1y300ligpp.s[513]++;testIndex-=2;cov_1y300ligpp.s[514]++;await testPath([account,0]);}else{cov_1y300ligpp.b[110][1]++;cov_1y300ligpp.s[515]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,0].join('/'));cov_1y300ligpp.s[516]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,1].join('/'));cov_1y300ligpp.s[517]++;testIndex-=4;cov_1y300ligpp.s[518]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,0]);cov_1y300ligpp.s[519]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,1]);}}",
            "err": {},
            "isRoot": false,
            "uuid": "95bed6e8-f86d-4b17-9393-3fc601c8d173",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XKey key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from XKey Settings xprvA1EHkuHt6M4kCWHv7s6eQCXxCzcusYp4VatT3R6ALQX1vwTnBJRbbRcWn695uBN7LoKyhLfjZ8kE7crcGcoJokPRFmCVKvKhHRo2AGvoty6",
            "fullTitle": "Testing XKey Private Key Deriving XKey key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz from XKey Settings xprvA1EHkuHt6M4kCWHv7s6eQCXxCzcusYp4VatT3R6ALQX1vwTnBJRbbRcWn695uBN7LoKyhLfjZ8kE7crcGcoJokPRFmCVKvKhHRo2AGvoty6",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[96]++;const xkey=(cov_1y300ligpp.s[492]++,test[0]);const parentKey=(cov_1y300ligpp.s[493]++,fromString$3(xkey,network$3));let account=(cov_1y300ligpp.s[494]++,0);let coinType=(cov_1y300ligpp.s[495]++,0);let bips=(cov_1y300ligpp.s[496]++,test[2]);cov_1y300ligpp.s[497]++;if(!bips){cov_1y300ligpp.b[108][0]++;cov_1y300ligpp.s[498]++;bips=[84];}else{cov_1y300ligpp.b[108][1]++;}cov_1y300ligpp.s[499]++;if(test[1]){cov_1y300ligpp.b[109][0]++;cov_1y300ligpp.s[500]++;account=test[1][0];cov_1y300ligpp.s[501]++;coinType=test[1][1];}else{cov_1y300ligpp.b[109][1]++;}let testIndex=(cov_1y300ligpp.s[502]++,3);cov_1y300ligpp.s[503]++;const testPath=async path=>{cov_1y300ligpp.f[97]++;const hdKey=(cov_1y300ligpp.s[504]++,await toPath$2(parentKey,path));const xprivkey=(cov_1y300ligpp.s[505]++,toString$3(hdKey,network$3));const pubKey=(cov_1y300ligpp.s[506]++,await toXPub$1(hdKey,network$3));const xpubkey=(cov_1y300ligpp.s[507]++,toString$3(pubKey,network$3));cov_1y300ligpp.s[508]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_1y300ligpp.s[509]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');};cov_1y300ligpp.s[510]++;for(const purpose of bips){cov_1y300ligpp.s[511]++;if(purpose===32){cov_1y300ligpp.b[110][0]++;cov_1y300ligpp.s[512]++;await testPath(['m',`${account}`,0].join('/'));cov_1y300ligpp.s[513]++;testIndex-=2;cov_1y300ligpp.s[514]++;await testPath([account,0]);}else{cov_1y300ligpp.b[110][1]++;cov_1y300ligpp.s[515]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,0].join('/'));cov_1y300ligpp.s[516]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,1].join('/'));cov_1y300ligpp.s[517]++;testIndex-=4;cov_1y300ligpp.s[518]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,0]);cov_1y300ligpp.s[519]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,1]);}}",
            "err": {},
            "isRoot": false,
            "uuid": "f0d3919d-623a-44a4-b39f-14ca888ca553",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XKey key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/44'/0'/0'/0",
            "fullTitle": "Testing XKey Private Key Deriving XKey key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/44'/0'/0'/0",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[99]++;const path=(cov_1y300ligpp.s[522]++,fromString(test[1]));const parentKey=(cov_1y300ligpp.s[523]++,fromString$3(test[0]));let testIndex=(cov_1y300ligpp.s[524]++,2);cov_1y300ligpp.s[525]++;while(path.length){const hdKey=(cov_1y300ligpp.s[526]++,await toPath$2(parentKey,path));const xprivkey=(cov_1y300ligpp.s[527]++,toString$3(hdKey,network$3));const publicKey=(cov_1y300ligpp.s[528]++,await toXPub$1(hdKey,network$3));const xpubkey=(cov_1y300ligpp.s[529]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[530]++;chai.assert.equal(xprivkey,test[testIndex][0],'xpriv');cov_1y300ligpp.s[531]++;chai.assert.equal(xpubkey,test[testIndex][1],'xpub');cov_1y300ligpp.s[532]++;path.pop();cov_1y300ligpp.s[533]++;testIndex++;}",
            "err": {},
            "isRoot": false,
            "uuid": "b57935ad-9eb9-49b0-a818-806c22344647",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XKey key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/84'/1'/185'/1",
            "fullTitle": "Testing XKey Private Key Deriving XKey key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/84'/1'/185'/1",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[99]++;const path=(cov_1y300ligpp.s[522]++,fromString(test[1]));const parentKey=(cov_1y300ligpp.s[523]++,fromString$3(test[0]));let testIndex=(cov_1y300ligpp.s[524]++,2);cov_1y300ligpp.s[525]++;while(path.length){const hdKey=(cov_1y300ligpp.s[526]++,await toPath$2(parentKey,path));const xprivkey=(cov_1y300ligpp.s[527]++,toString$3(hdKey,network$3));const publicKey=(cov_1y300ligpp.s[528]++,await toXPub$1(hdKey,network$3));const xpubkey=(cov_1y300ligpp.s[529]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[530]++;chai.assert.equal(xprivkey,test[testIndex][0],'xpriv');cov_1y300ligpp.s[531]++;chai.assert.equal(xpubkey,test[testIndex][1],'xpub');cov_1y300ligpp.s[532]++;path.pop();cov_1y300ligpp.s[533]++;testIndex++;}",
            "err": {},
            "isRoot": false,
            "uuid": "c92c823b-2deb-4df4-ab29-5eddb5599755",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XKey key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/32/0/1",
            "fullTitle": "Testing XKey Private Key Deriving XKey key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/32/0/1",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[99]++;const path=(cov_1y300ligpp.s[522]++,fromString(test[1]));const parentKey=(cov_1y300ligpp.s[523]++,fromString$3(test[0]));let testIndex=(cov_1y300ligpp.s[524]++,2);cov_1y300ligpp.s[525]++;while(path.length){const hdKey=(cov_1y300ligpp.s[526]++,await toPath$2(parentKey,path));const xprivkey=(cov_1y300ligpp.s[527]++,toString$3(hdKey,network$3));const publicKey=(cov_1y300ligpp.s[528]++,await toXPub$1(hdKey,network$3));const xpubkey=(cov_1y300ligpp.s[529]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[530]++;chai.assert.equal(xprivkey,test[testIndex][0],'xpriv');cov_1y300ligpp.s[531]++;chai.assert.equal(xpubkey,test[testIndex][1],'xpub');cov_1y300ligpp.s[532]++;path.pop();cov_1y300ligpp.s[533]++;testIndex++;}",
            "err": {},
            "isRoot": false,
            "uuid": "6e02d185-426a-46a5-825a-8265bcc51c49",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "d474ccc2-58f2-4c87-bd8e-3223d402c8c5",
          "789aec75-93f1-4fcf-a057-76adddee3782",
          "2365e6da-a1d3-4df0-b138-50cd9f654c97",
          "882eece8-7d8b-467d-bbbc-ae6d8c2f9438",
          "2fed253e-0d98-435d-8464-faa23de9ac7a",
          "e464f51e-1660-42b0-b59e-f3e7332c2292",
          "07dc3185-efe2-4fd0-877e-09b3d77a139f",
          "ad6e1efa-19d0-4f20-bbbd-1d529e556f31",
          "6172f9a6-c751-4ab7-975b-c81c7604ef19",
          "326f10e9-a8e8-4aa0-b9dd-ab7d0bc43c8e",
          "08749f08-9c5f-4d3e-9aa5-1e402879deed",
          "c0abdbdf-caef-4418-a7f9-77d0d49cf585",
          "adc8ebc7-4c5b-4852-887b-ff8d381203d3",
          "0adaca34-33b8-4d7c-9ff5-20e66a61eca8",
          "ddf3c3eb-4f56-412e-88fd-e8175e41e47f",
          "1e924cda-37f8-4367-b6af-043b62a5c034",
          "fddd6b6d-9698-45ec-9a83-4fd78b0ac662",
          "b7652765-489f-41ff-b21c-52897d199cec",
          "ac4e1feb-8d6c-4cfa-bae2-c5ad1cff303d",
          "12b92e65-00df-4f3d-9f1b-2dfa157811fa",
          "bf849a2a-55be-40c6-95e8-76b6eb83e2cc",
          "3c248c44-93ce-4075-8087-a2056914b90e",
          "9cf72ffa-d9ff-49bd-8182-30e653ada313",
          "26ea0de2-173d-4c94-a283-451384b7db29",
          "676e4ada-c076-4dca-8597-932ade06ace5",
          "d49959a8-dbc1-4556-8c97-52613646b3e5",
          "b28a6141-176d-4dbe-bb8a-16cb13b26565",
          "b3d71b46-2b33-4081-8614-26f02deeb1f2",
          "b66fbe0f-02f1-42e2-893d-8d659494048e",
          "fa44cc79-deb8-4f86-984d-9fa27b5822ca",
          "29fa4927-6d32-49f1-bfc1-1cf29a082a27",
          "0da90012-333b-462d-a511-21f5c11f2eee",
          "3956b55a-b054-40b0-8d5a-e2d96178db05",
          "0924106d-af6e-4e46-b594-bccfc1b70b90",
          "6aa6207c-f58a-402d-959e-3330db1fb8e7",
          "1ca32a4a-3f60-4ef6-ac70-8ec205adf886",
          "d4ccd50e-2b6a-4ccd-ac41-f747a42446ad",
          "4f32fd78-2424-40a9-9d31-f453ecf3acf7",
          "e28c2fed-9aae-4d4c-98bf-b75e15ab1565",
          "ed76e881-706b-4adb-b764-0f8827e0b9b9",
          "74b5af7c-8b79-471f-a9a0-6a775fc9e6ab",
          "f2df131e-bcea-4e2d-855b-45123abe3965",
          "dc9c5478-954d-4570-8b8d-c0d3509baf09",
          "54493395-fadd-4460-bc1b-9563bf318380",
          "41a951e1-14d9-4193-a455-b680b7cdf3cb",
          "b49ff0a0-1abb-4c7f-a8ef-2ce8a160948e",
          "2efb8ca4-bcbb-44db-9a8a-9956e44c7585",
          "194a3581-b594-48d4-9073-05df0ee34524",
          "d9cebec1-1609-4fd6-883e-70ff477f1d29",
          "3f38dd1f-1bb6-4a3e-af0c-6eb45636d811",
          "07a62708-4116-4d75-ae87-74dbbc768fca",
          "44777da8-506e-4e79-a5d8-08db2f3d1e1e",
          "5547e9dc-3508-4c77-a1fb-1d2756b6dd6d",
          "95bed6e8-f86d-4b17-9393-3fc601c8d173",
          "f0d3919d-623a-44a4-b39f-14ca888ca553",
          "b57935ad-9eb9-49b0-a818-806c22344647",
          "c92c823b-2deb-4df4-ab29-5eddb5599755",
          "6e02d185-426a-46a5-825a-8265bcc51c49"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 190,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "a32f247f-88b1-4545-9ea3-e07cca1e58b1",
        "title": "Testing XKey Public Key",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "XKey key from string: xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "342f9618-d7cf-44fd-add0-41bd5cca0cda",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 0339a36013301597daef41fbe593a02cc513d0b55527ec2df1050e2e8ff49c85c2",
            "fullTitle": "Testing XKey Public Key XKey key to string: 0339a36013301597daef41fbe593a02cc513d0b55527ec2df1050e2e8ff49c85c2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "cf00fd75-e9f2-4cbf-b1bb-d4e34c938bb3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "ed4de7c6-876e-4596-b3e2-2d587b40c700",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56",
            "fullTitle": "Testing XKey Public Key XKey key to string: 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "b7e8e750-852c-4d4a-aa9d-713e2aebbb6f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub6ASuArnXKPbfEwhqN6e3mwBcDTgzisQN1wXN9BJcM47sSikHjJf3UFHKkNAWbWMiGj7Wf5uMash7SyYq527Hqck2AxYysAA7xmALppuCkwQ",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub6ASuArnXKPbfEwhqN6e3mwBcDTgzisQN1wXN9BJcM47sSikHjJf3UFHKkNAWbWMiGj7Wf5uMash7SyYq527Hqck2AxYysAA7xmALppuCkwQ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "6e13de64-a8b5-4259-871c-7b20ab4d5c31",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 03501e454bf00751f24b1b489aa925215d66af2234e3891c3b21a52bedb3cd711c",
            "fullTitle": "Testing XKey Public Key XKey key to string: 03501e454bf00751f24b1b489aa925215d66af2234e3891c3b21a52bedb3cd711c",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "cdd1f975-1bf3-46a3-afb7-d04d33e2c481",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub6D4BDPcP2GT577Vvch3R8wDkScZWzQzMMUm3PWbmWvVJrZwQY4VUNgqFJPMM3No2dFDFGTsxxpG5uJh7n7epu4trkrX7x7DogT5Uv6fcLW5",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub6D4BDPcP2GT577Vvch3R8wDkScZWzQzMMUm3PWbmWvVJrZwQY4VUNgqFJPMM3No2dFDFGTsxxpG5uJh7n7epu4trkrX7x7DogT5Uv6fcLW5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "88b36790-13f8-4161-a078-be462e85a3d0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2",
            "fullTitle": "Testing XKey Public Key XKey key to string: 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "c15ef3e1-3d18-4f60-889d-98bb02f193f5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub6FHa3pjLCk84BayeJxFW2SP4XRrFd1JYnxeLeU8EqN3vDfZmbqBqaGJAyiLjTAwm6ZLRQUMv1ZACTj37sR62cfN7fe5JnJ7dh8zL4fiyLHV",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub6FHa3pjLCk84BayeJxFW2SP4XRrFd1JYnxeLeU8EqN3vDfZmbqBqaGJAyiLjTAwm6ZLRQUMv1ZACTj37sR62cfN7fe5JnJ7dh8zL4fiyLHV",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "a6de8242-9064-4104-90db-4d3abf674c70",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29",
            "fullTitle": "Testing XKey Public Key XKey key to string: 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "4ac6bcb1-16a9-4dc6-aad9-f47a49718f71",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub6H1LXWLaKsWFhvm6RVpEL9P4KfRZSW7abD2ttkWP3SSQvnyA8FSVqNTEcYFgJS2UaFcxupHiYkro49S8yGasTvXEYBVPamhGW6cFJodrTHy",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub6H1LXWLaKsWFhvm6RVpEL9P4KfRZSW7abD2ttkWP3SSQvnyA8FSVqNTEcYFgJS2UaFcxupHiYkro49S8yGasTvXEYBVPamhGW6cFJodrTHy",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "6781b444-3873-48ad-8c61-3d2d91e69dd5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 022a471424da5e657499d1ff51cb43c47481a03b1e77f951fe64cec9f5a48f7011",
            "fullTitle": "Testing XKey Public Key XKey key to string: 022a471424da5e657499d1ff51cb43c47481a03b1e77f951fe64cec9f5a48f7011",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "ba976ae6-91d1-4ed9-a7e8-e12ecc194b43",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "09c9f4d6-9cab-45de-a8d0-58e7d72a5fbb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7",
            "fullTitle": "Testing XKey Public Key XKey key to string: 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "8c25f5af-d2cc-466e-9c38-7ab65dee2b52",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "eb7ef975-8290-4224-b114-dae82a34b7e6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 02fc9e5af0ac8d9b3cecfe2a888e2117ba3d089d8585886c9c826b6b22a98d12ea",
            "fullTitle": "Testing XKey Public Key XKey key to string: 02fc9e5af0ac8d9b3cecfe2a888e2117ba3d089d8585886c9c826b6b22a98d12ea",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "ce225afa-cbba-42d6-8838-f220c34a0323",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub6ASAVgeehLbnwdqV6UKMHVzgqAG8Gr6riv3Fxxpj8ksbH9ebxaEyBLZ85ySDhKiLDBrQSARLq1uNRts8RuJiHjaDMBU4Zn9h8LZNnBC5y4a",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub6ASAVgeehLbnwdqV6UKMHVzgqAG8Gr6riv3Fxxpj8ksbH9ebxaEyBLZ85ySDhKiLDBrQSARLq1uNRts8RuJiHjaDMBU4Zn9h8LZNnBC5y4a",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b7fce29f-1ce4-43e9-8432-77f3b469c4f0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b",
            "fullTitle": "Testing XKey Public Key XKey key to string: 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "3bb81d57-ebc1-4a10-b0a7-f5fda292201b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub6DF8uhdarytz3FWdA8TvFSvvAh8dP3283MY7p2V4SeE2wyWmG5mg5EwVvmdMVCQcoNJxGoWaU9DCWh89LojfZ537wTfunKau47EL2dhHKon",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub6DF8uhdarytz3FWdA8TvFSvvAh8dP3283MY7p2V4SeE2wyWmG5mg5EwVvmdMVCQcoNJxGoWaU9DCWh89LojfZ537wTfunKau47EL2dhHKon",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "fb95506e-8cfb-45ad-a9cb-12225780b6e3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 03a7d1d856deb74c508e05031f9895dab54626251b3806e16b4bd12e781a7df5b9",
            "fullTitle": "Testing XKey Public Key XKey key to string: 03a7d1d856deb74c508e05031f9895dab54626251b3806e16b4bd12e781a7df5b9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "bf0bbc4b-f52a-4c43-80d0-4d5a83e7be26",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b895500e-43c4-44fc-80c1-d16b3883398e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0",
            "fullTitle": "Testing XKey Public Key XKey key to string: 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "d82afac6-c19e-46ed-b97a-b89e27b05c9e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub6FnCn6nSzZAw5Tw7cgR9bi15UV96gLZhjDstkXXxvCLsUXBGXPdSnLFbdpq8p9HmGsApME5hQTZ3emM2rnY5agb9rXpVGyy3bdW6EEgAtqt",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub6FnCn6nSzZAw5Tw7cgR9bi15UV96gLZhjDstkXXxvCLsUXBGXPdSnLFbdpq8p9HmGsApME5hQTZ3emM2rnY5agb9rXpVGyy3bdW6EEgAtqt",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "9e2a83ad-33cd-466f-b25e-641e53e1979d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 024d902e1a2fc7a8755ab5b694c575fce742c48d9ff192e63df5193e4c7afe1f9c",
            "fullTitle": "Testing XKey Public Key XKey key to string: 024d902e1a2fc7a8755ab5b694c575fce742c48d9ff192e63df5193e4c7afe1f9c",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "fe0ce0bf-0704-4f0d-832e-b32d722d9c6d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub661MyMwAqRbcFa4vkmBVnqhGEgWhewDgAv3xmFRny74D3sGHz6KTTbcskg2vZEMbEwxc4oaR435oczhSu4GdNwhwiVewcewU8A1Rr6HehAU",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub661MyMwAqRbcFa4vkmBVnqhGEgWhewDgAv3xmFRny74D3sGHz6KTTbcskg2vZEMbEwxc4oaR435oczhSu4GdNwhwiVewcewU8A1Rr6HehAU",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "585201e2-2157-4192-8d44-66e511ca400d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 02fce1b65c7470270fb89e5aa1dda253406b3370b948eae8a2a3539c4f25894283",
            "fullTitle": "Testing XKey Public Key XKey key to string: 02fce1b65c7470270fb89e5aa1dda253406b3370b948eae8a2a3539c4f25894283",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "3c109a63-9c51-4f4f-8973-834563306aa7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub693MU1BonjMa6Xxar2HQ9r3tRw3AA8yo7BBdvuSZF1D1eet32bVxGr9LYViWMtaLfQaa2StXeUmDG5VELFkU9pc3yfTzCk61WQJdR6ezj7a",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub693MU1BonjMa6Xxar2HQ9r3tRw3AA8yo7BBdvuSZF1D1eet32bVxGr9LYViWMtaLfQaa2StXeUmDG5VELFkU9pc3yfTzCk61WQJdR6ezj7a",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "fede926c-a3a5-4d19-bc5b-2979ba31d0b0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 0324670e21612d0035d74563b25934ebfe0b1b1ea77ea18719029541aba107228a",
            "fullTitle": "Testing XKey Public Key XKey key to string: 0324670e21612d0035d74563b25934ebfe0b1b1ea77ea18719029541aba107228a",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "e95e788f-ad5e-4ae9-b48b-30dafee90608",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "f4a4b425-389f-48d6-bc49-7917e90d1ce9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "fullTitle": "Testing XKey Public Key XKey key to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "04ee835c-ac86-4cd9-a284-8a48277ee83a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "0584a54e-a4e7-4a4c-ae9a-e09bb4085f67",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "fullTitle": "Testing XKey Public Key XKey key to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "fc04aa00-050c-44d4-96ab-07df8cbfeff2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub693MU1BonjMaBynxewXEjDs4n2W9TFUheJ7FriPpa3zdQvQDwbvT9uGsEebvioAcYbtRUU7ge4yVgj8WDLrwtwuXKTWiieFoYX2B1JYUEfK",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub693MU1BonjMaBynxewXEjDs4n2W9TFUheJ7FriPpa3zdQvQDwbvT9uGsEebvioAcYbtRUU7ge4yVgj8WDLrwtwuXKTWiieFoYX2B1JYUEfK",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "e31781b7-613a-4b28-a6df-b7e0c05fa82a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 031cd583c3ffb87477c539012859195f821e33b16435e8f3da0b40247056158618",
            "fullTitle": "Testing XKey Public Key XKey key to string: 031cd583c3ffb87477c539012859195f821e33b16435e8f3da0b40247056158618",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "a38b296e-83ea-4e76-896f-73b5e8efa0a1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub6BZfReuexUYBTRwxFZyshBgF6SvpJ2GPQqFEXZ1ZrCUJrkcJ648DUdeRjx9QiNQxQvPcHYV3rGkvuExFQbVRS4kU5ynx4fAsWWhHgyPh1pP",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub6BZfReuexUYBTRwxFZyshBgF6SvpJ2GPQqFEXZ1ZrCUJrkcJ648DUdeRjx9QiNQxQvPcHYV3rGkvuExFQbVRS4kU5ynx4fAsWWhHgyPh1pP",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "3f8b9efb-46a1-45c4-a468-e00d614b367f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 03268cd9af10d8b9d36f9c5da10038286174afc654c06f6aacfeea306b0c7a7637",
            "fullTitle": "Testing XKey Public Key XKey key to string: 03268cd9af10d8b9d36f9c5da10038286174afc654c06f6aacfeea306b0c7a7637",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "0bf9df0e-1398-4d73-9a4b-d7123314b2a0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key from string: xpub6BZfReuexUYBVSENKiuKqKgf9KrMZh4rNoUZ4nqhemJeybd6Webqiu4zndBwa9UB4Jvr5jB5Bcgng6reXAKCuDiVm7zhzJ13BUDBiM8HidZ",
            "fullTitle": "Testing XKey Public Key XKey key from string: xpub6BZfReuexUYBVSENKiuKqKgf9KrMZh4rNoUZ4nqhemJeybd6Webqiu4zndBwa9UB4Jvr5jB5Bcgng6reXAKCuDiVm7zhzJ13BUDBiM8HidZ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[102]++;const resultedXkey=(cov_1y300ligpp.s[540]++,fromString$3(base58Key,network$3));cov_1y300ligpp.s[541]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "2075e98b-739d-4a85-83fd-62c9890a9b01",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XKey key to string: 03641a1997a3538dd18036b941600b96e0c6229182c7089119894823324a5fff0c",
            "fullTitle": "Testing XKey Public Key XKey key to string: 03641a1997a3538dd18036b941600b96e0c6229182c7089119894823324a5fff0c",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[103]++;const resultedBase58Key=(cov_1y300ligpp.s[543]++,toString$3(publicKey,network$3));cov_1y300ligpp.s[544]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "c03b04be-33bc-4c6f-bea5-7e0242f886e6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56 for index 1",
            "fullTitle": "Testing XKey Public Key Deriving key 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56 for index 1",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[105]++;const publicKey=(cov_1y300ligpp.s[547]++,test[0]);const chainCode=(cov_1y300ligpp.s[548]++,test[1]);const index=(cov_1y300ligpp.s[549]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[550]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[551]++,fromXKey({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[552]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[553]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "42812cb6-a53c-4aa5-b6e5-d6667d0dd39b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2 for index 2",
            "fullTitle": "Testing XKey Public Key Deriving key 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2 for index 2",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[105]++;const publicKey=(cov_1y300ligpp.s[547]++,test[0]);const chainCode=(cov_1y300ligpp.s[548]++,test[1]);const index=(cov_1y300ligpp.s[549]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[550]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[551]++,fromXKey({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[552]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[553]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "ff838c2b-87cc-433b-8dfa-30bff809cdbb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29 for index 1000000000",
            "fullTitle": "Testing XKey Public Key Deriving key 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29 for index 1000000000",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[105]++;const publicKey=(cov_1y300ligpp.s[547]++,test[0]);const chainCode=(cov_1y300ligpp.s[548]++,test[1]);const index=(cov_1y300ligpp.s[549]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[550]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[551]++,fromXKey({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[552]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[553]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "32c3f094-05a4-4f50-b1c6-a163390b4872",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7 for index 0",
            "fullTitle": "Testing XKey Public Key Deriving key 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7 for index 0",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[105]++;const publicKey=(cov_1y300ligpp.s[547]++,test[0]);const chainCode=(cov_1y300ligpp.s[548]++,test[1]);const index=(cov_1y300ligpp.s[549]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[550]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[551]++,fromXKey({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[552]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[553]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "68c86af8-4de3-48ba-9892-3f3ca5f5d56a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b for index 1",
            "fullTitle": "Testing XKey Public Key Deriving key 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b for index 1",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[105]++;const publicKey=(cov_1y300ligpp.s[547]++,test[0]);const chainCode=(cov_1y300ligpp.s[548]++,test[1]);const index=(cov_1y300ligpp.s[549]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[550]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[551]++,fromXKey({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[552]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[553]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "c2a4fb73-32ba-43bf-8e3f-c3a0c2e1e15c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0 for index 2",
            "fullTitle": "Testing XKey Public Key Deriving key 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0 for index 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[105]++;const publicKey=(cov_1y300ligpp.s[547]++,test[0]);const chainCode=(cov_1y300ligpp.s[548]++,test[1]);const index=(cov_1y300ligpp.s[549]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[550]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[551]++,fromXKey({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[552]++,await toIndex$2(xKey,index));cov_1y300ligpp.s[553]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "9dbf5757-6884-415d-80a7-cf91ecbf5cb8",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "342f9618-d7cf-44fd-add0-41bd5cca0cda",
          "cf00fd75-e9f2-4cbf-b1bb-d4e34c938bb3",
          "ed4de7c6-876e-4596-b3e2-2d587b40c700",
          "b7e8e750-852c-4d4a-aa9d-713e2aebbb6f",
          "6e13de64-a8b5-4259-871c-7b20ab4d5c31",
          "cdd1f975-1bf3-46a3-afb7-d04d33e2c481",
          "88b36790-13f8-4161-a078-be462e85a3d0",
          "c15ef3e1-3d18-4f60-889d-98bb02f193f5",
          "a6de8242-9064-4104-90db-4d3abf674c70",
          "4ac6bcb1-16a9-4dc6-aad9-f47a49718f71",
          "6781b444-3873-48ad-8c61-3d2d91e69dd5",
          "ba976ae6-91d1-4ed9-a7e8-e12ecc194b43",
          "09c9f4d6-9cab-45de-a8d0-58e7d72a5fbb",
          "8c25f5af-d2cc-466e-9c38-7ab65dee2b52",
          "eb7ef975-8290-4224-b114-dae82a34b7e6",
          "ce225afa-cbba-42d6-8838-f220c34a0323",
          "b7fce29f-1ce4-43e9-8432-77f3b469c4f0",
          "3bb81d57-ebc1-4a10-b0a7-f5fda292201b",
          "fb95506e-8cfb-45ad-a9cb-12225780b6e3",
          "bf0bbc4b-f52a-4c43-80d0-4d5a83e7be26",
          "b895500e-43c4-44fc-80c1-d16b3883398e",
          "d82afac6-c19e-46ed-b97a-b89e27b05c9e",
          "9e2a83ad-33cd-466f-b25e-641e53e1979d",
          "fe0ce0bf-0704-4f0d-832e-b32d722d9c6d",
          "585201e2-2157-4192-8d44-66e511ca400d",
          "3c109a63-9c51-4f4f-8973-834563306aa7",
          "fede926c-a3a5-4d19-bc5b-2979ba31d0b0",
          "e95e788f-ad5e-4ae9-b48b-30dafee90608",
          "f4a4b425-389f-48d6-bc49-7917e90d1ce9",
          "04ee835c-ac86-4cd9-a284-8a48277ee83a",
          "0584a54e-a4e7-4a4c-ae9a-e09bb4085f67",
          "fc04aa00-050c-44d4-96ab-07df8cbfeff2",
          "e31781b7-613a-4b28-a6df-b7e0c05fa82a",
          "a38b296e-83ea-4e76-896f-73b5e8efa0a1",
          "3f8b9efb-46a1-45c4-a468-e00d614b367f",
          "0bf9df0e-1398-4d73-9a4b-d7123314b2a0",
          "2075e98b-739d-4a85-83fd-62c9890a9b01",
          "c03b04be-33bc-4c6f-bea5-7e0242f886e6",
          "42812cb6-a53c-4aa5-b6e5-d6667d0dd39b",
          "ff838c2b-87cc-433b-8dfa-30bff809cdbb",
          "32c3f094-05a4-4f50-b1c6-a163390b4872",
          "68c86af8-4de3-48ba-9892-3f3ca5f5d56a",
          "c2a4fb73-32ba-43bf-8e3f-c3a0c2e1e15c",
          "9dbf5757-6884-415d-80a7-cf91ecbf5cb8"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 19,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "db88c340-f2dd-4ad2-a7dd-79cf981147a8",
        "title": "Testing XPriv Key",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "XPriv from seed 2fe98754525f698edcb6088bb2e992c32004acef0f3905a6fb0225971dea677860805bed284ee7e5f3cdf1bee691d04201ea11290d3091b81ceffa6fc39be5f7",
            "fullTitle": "Testing XPriv Key XPriv from seed 2fe98754525f698edcb6088bb2e992c32004acef0f3905a6fb0225971dea677860805bed284ee7e5f3cdf1bee691d04201ea11290d3091b81ceffa6fc39be5f7",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[108]++;const childKey=(cov_1y300ligpp.s[558]++,fromSeed(test[1],network$4));const xkey=(cov_1y300ligpp.s[559]++,toString$1(childKey));cov_1y300ligpp.s[560]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "08a1cff7-fe4b-4fad-b0ee-dda01b589dc3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from seed c651a27f6f4f5366999aa22271695f25a3fc28f979b138df471b869ab395961c8ba5347d43a52afbf331285add025b5c7d3eaea7ab883aba6f8b6c04f5f0dba0",
            "fullTitle": "Testing XPriv Key XPriv from seed c651a27f6f4f5366999aa22271695f25a3fc28f979b138df471b869ab395961c8ba5347d43a52afbf331285add025b5c7d3eaea7ab883aba6f8b6c04f5f0dba0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[108]++;const childKey=(cov_1y300ligpp.s[558]++,fromSeed(test[1],network$4));const xkey=(cov_1y300ligpp.s[559]++,toString$1(childKey));cov_1y300ligpp.s[560]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "830ce6a0-196a-456f-87cd-20db97d14436",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from seed 16d46953c56010aee578d33dc9326075cf79e13c9492f2bd277334414b8ad19e305892e8a6e230a4e40bab8b39be1d53055b23b4bebe8f6a521b30c821764332",
            "fullTitle": "Testing XPriv Key XPriv from seed 16d46953c56010aee578d33dc9326075cf79e13c9492f2bd277334414b8ad19e305892e8a6e230a4e40bab8b39be1d53055b23b4bebe8f6a521b30c821764332",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[108]++;const childKey=(cov_1y300ligpp.s[558]++,fromSeed(test[1],network$4));const xkey=(cov_1y300ligpp.s[559]++,toString$1(childKey));cov_1y300ligpp.s[560]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "ec8c0359-fd22-4cc6-9c3e-d9746fcc9cbe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from seed c094a23d338f64adde79314ecaa237cff218c8463bd10d61cc54928f2c636240319c17d3464c7104e3a7694fabfdcf84d37b9b1d97700772963777f7ff593c6a",
            "fullTitle": "Testing XPriv Key XPriv from seed c094a23d338f64adde79314ecaa237cff218c8463bd10d61cc54928f2c636240319c17d3464c7104e3a7694fabfdcf84d37b9b1d97700772963777f7ff593c6a",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[108]++;const childKey=(cov_1y300ligpp.s[558]++,fromSeed(test[1],network$4));const xkey=(cov_1y300ligpp.s[559]++,toString$1(childKey));cov_1y300ligpp.s[560]++;chai.assert.deepEqual(xkey,test[2]);",
            "err": {},
            "isRoot": false,
            "uuid": "1bf2d613-6b23-484d-81d7-bfb5319aa5c1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "69b18e72-2b77-431d-b0cf-b3e7c2ecd203",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35",
            "fullTitle": "Testing XPriv Key XPriv to string: e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "963c8698-0850-4101-ab7a-27523cd59a7a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9uHRZZhk6KAJC1avXpDAp4MDc3sQKNxDiPvvkX8Br5ngLNv1TxvUxt4cV1rGL5hj6KCesnDYUhd7oWgT11eZG7XnxHrnYeSvkzY7d2bhkJ7",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9uHRZZhk6KAJC1avXpDAp4MDc3sQKNxDiPvvkX8Br5ngLNv1TxvUxt4cV1rGL5hj6KCesnDYUhd7oWgT11eZG7XnxHrnYeSvkzY7d2bhkJ7",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "8d52d843-717a-4eaf-b5b5-f1f8dd388a4a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea",
            "fullTitle": "Testing XPriv Key XPriv to string: edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "14198522-44d1-48b3-98cb-253d6672e97a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9wTYmMFdV23N2TdNG573QoEsfRrWKQgWeibmLntzniatZvR9BmLnvSxqu53Kw1UmYPxLgboyZQaXwTCg8MSY3H2EU4pWcQDnRnrVA1xe8fs",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9wTYmMFdV23N2TdNG573QoEsfRrWKQgWeibmLntzniatZvR9BmLnvSxqu53Kw1UmYPxLgboyZQaXwTCg8MSY3H2EU4pWcQDnRnrVA1xe8fs",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "995f62b5-73f9-42c5-85fa-62371cd4f19e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368",
            "fullTitle": "Testing XPriv Key XPriv to string: 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "59a32eb2-83a7-4269-a567-6d371f141a26",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9z4pot5VBttmtdRTWfWQmoH1taj2axGVzFqSb8C9xaxKymcFzXBDptWmT7FwuEzG3ryjH4ktypQSAewRiNMjANTtpgP4mLTj34bhnZX7UiM",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9z4pot5VBttmtdRTWfWQmoH1taj2axGVzFqSb8C9xaxKymcFzXBDptWmT7FwuEzG3ryjH4ktypQSAewRiNMjANTtpgP4mLTj34bhnZX7UiM",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "db3ca38c-b20b-4b1d-98f0-7642393e4b52",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca",
            "fullTitle": "Testing XPriv Key XPriv to string: cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "b8ee9326-b40e-4f4d-9dda-cb390bc1cb24",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprvA2JDeKCSNNZky6uBCviVfJSKyQ1mDYahRjijr5idH2WwLsEd4Hsb2Tyh8RfQMuPh7f7RtyzTtdrbdqqsunu5Mm3wDvUAKRHSC34sJ7in334",
            "fullTitle": "Testing XPriv Key XPriv from string: xprvA2JDeKCSNNZky6uBCviVfJSKyQ1mDYahRjijr5idH2WwLsEd4Hsb2Tyh8RfQMuPh7f7RtyzTtdrbdqqsunu5Mm3wDvUAKRHSC34sJ7in334",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "98dff1c5-dbcf-4d89-aa73-8eff275b902b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: 0f479245fb19a38a1954c5c7c0ebab2f9bdfd96a17563ef28a6a4b1a2a764ef4",
            "fullTitle": "Testing XPriv Key XPriv to string: 0f479245fb19a38a1954c5c7c0ebab2f9bdfd96a17563ef28a6a4b1a2a764ef4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "21d8eb6f-3c26-4e08-8a01-135bb15ff4cd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprvA41z7zogVVwxVSgdKUHDy1SKmdb533PjDz7J6N6mV6uS3ze1ai8FHa8kmHScGpWmj4WggLyQjgPie1rFSruoUihUZREPSL39UNdE3BBDu76",
            "fullTitle": "Testing XPriv Key XPriv from string: xprvA41z7zogVVwxVSgdKUHDy1SKmdb533PjDz7J6N6mV6uS3ze1ai8FHa8kmHScGpWmj4WggLyQjgPie1rFSruoUihUZREPSL39UNdE3BBDu76",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "62b31018-163f-4a54-bd21-329f8031e3cc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: 471b76e389e528d6de6d816857e012c5455051cad6660850e58372a6c3e6e7c8",
            "fullTitle": "Testing XPriv Key XPriv to string: 471b76e389e528d6de6d816857e012c5455051cad6660850e58372a6c3e6e7c8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "a1ba103d-3c47-4f6c-ae07-6d4fc61da621",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b6a9405a-be76-4dc3-8fc0-6e014071abb7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e",
            "fullTitle": "Testing XPriv Key XPriv to string: 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "24906c66-b822-42da-8df0-2c8d99e54638",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "69fe0822-a886-4c00-bdab-cda50cb4cfc2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e",
            "fullTitle": "Testing XPriv Key XPriv to string: abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "934d5f43-28d5-497e-a5a7-db4f1c3bd05a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9wSp6B7kry3Vj9m1zSnLvN3xH8RdsPP1Mh7fAaR7aRLcQMKTR2vidYEeEg2mUCTAwCd6vnxVrcjfy2kRgVsFawNzmjuHc2YmYRmagcEPdU9",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9wSp6B7kry3Vj9m1zSnLvN3xH8RdsPP1Mh7fAaR7aRLcQMKTR2vidYEeEg2mUCTAwCd6vnxVrcjfy2kRgVsFawNzmjuHc2YmYRmagcEPdU9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "d314e16a-007d-4d83-9ef7-0f40e170ea78",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93",
            "fullTitle": "Testing XPriv Key XPriv to string: 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "8bfd874f-7c1b-4547-b9b6-7c5a9a629598",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9zFnWC6h2cLgpmSA46vutJzBcfJ8yaJGg8cX1e5StJh45BBciYTRXSd25UEPVuesF9yog62tGAQtHjXajPPdbRCHuWS6T8XA2ECKADdw4Ef",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9zFnWC6h2cLgpmSA46vutJzBcfJ8yaJGg8cX1e5StJh45BBciYTRXSd25UEPVuesF9yog62tGAQtHjXajPPdbRCHuWS6T8XA2ECKADdw4Ef",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "7b0610d4-c347-4d02-8930-2b90f4e7d3e2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7",
            "fullTitle": "Testing XPriv Key XPriv to string: 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "8ef6e46a-6695-497b-9e6b-c71426d3a365",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc",
            "fullTitle": "Testing XPriv Key XPriv from string: xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "a6c2e514-1ab9-4209-a45a-d7122858fd6b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d",
            "fullTitle": "Testing XPriv Key XPriv to string: f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "e31c0ba8-cd4a-451a-ab37-c3819283c74f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprvA2nrNbFZABcdryreWet9Ea4LvTJcGsqrMzxHx98MMrotbir7yrKCEXw7nadnHM8Dq38EGfSh6dqA9QWTyefMLEcBYJUuekgW4BYPJcr9E7j",
            "fullTitle": "Testing XPriv Key XPriv from string: xprvA2nrNbFZABcdryreWet9Ea4LvTJcGsqrMzxHx98MMrotbir7yrKCEXw7nadnHM8Dq38EGfSh6dqA9QWTyefMLEcBYJUuekgW4BYPJcr9E7j",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "7b1ac0d5-bf54-4132-b3a0-fd0bcedffdd9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: bb7d39bdb83ecf58f2fd82b6d918341cbef428661ef01ab97c28a4842125ac23",
            "fullTitle": "Testing XPriv Key XPriv to string: bb7d39bdb83ecf58f2fd82b6d918341cbef428661ef01ab97c28a4842125ac23",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "3e2d171a-2244-41f3-bfa9-9c1de9750599",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9s21ZrQH143K35zTejeVRhkXgegDFUVpoh8Mxs2BQmXEB4w9SZ1CuoJPuQ2KGQrS1ZF3Pk7V7KWHn7FqR2JbAE9Bh8PURnrFnrmArj4kxos",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9s21ZrQH143K35zTejeVRhkXgegDFUVpoh8Mxs2BQmXEB4w9SZ1CuoJPuQ2KGQrS1ZF3Pk7V7KWHn7FqR2JbAE9Bh8PURnrFnrmArj4kxos",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "6ca885b1-f0d1-4cc3-a0f1-ce4e0323764f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: 7bd083869bd02e57786d119a81d406ac1524a765470acee90834c60f841e6236",
            "fullTitle": "Testing XPriv Key XPriv to string: 7bd083869bd02e57786d119a81d406ac1524a765470acee90834c60f841e6236",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "321cee56-f8c3-4858-89f4-779a5cf0c976",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9v414VeuxMoGt3t7jzkPni79suCfkgFwjxG38X2wgfg2mrYtV4Bhj3prhDDCcBiJrz9n4xLYoDtBFRuQmreVLKzmiZAqvbGpx5q4yHfzfah",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9v414VeuxMoGt3t7jzkPni79suCfkgFwjxG38X2wgfg2mrYtV4Bhj3prhDDCcBiJrz9n4xLYoDtBFRuQmreVLKzmiZAqvbGpx5q4yHfzfah",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b55d91f0-b01b-48d7-96a7-a3207e9197b0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: 622c81feac4a3bf2d87578edeb3384b8b024184fbc515626c897ea452e7c8f96",
            "fullTitle": "Testing XPriv Key XPriv to string: 622c81feac4a3bf2d87578edeb3384b8b024184fbc515626c897ea452e7c8f96",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "04b8e06b-2666-4c3a-a529-b7ea8ba09c44",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9v414VeuxMoGusHLt8GowZuX6hn3Cp3qzAE6Cb2jKPH5MBgLJu2CWuiLKTdWV8WoNFYvpCcBfbpWfeyEQ8zytZW5qy39roTcugBGUkeAvCc",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9v414VeuxMoGusHLt8GowZuX6hn3Cp3qzAE6Cb2jKPH5MBgLJu2CWuiLKTdWV8WoNFYvpCcBfbpWfeyEQ8zytZW5qy39roTcugBGUkeAvCc",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "73afbd62-1ec7-4323-9611-7bce2a137228",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: da4b3947e054576f0f353d1a7f4eedd7dbca242a83cba29d3962a2ffd4e30ae5",
            "fullTitle": "Testing XPriv Key XPriv to string: da4b3947e054576f0f353d1a7f4eedd7dbca242a83cba29d3962a2ffd4e30ae5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "e4323c76-a521-46ac-a86e-7c4062d941d7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9v414VeuxMoGyViVYuzEN5vLDzff3nkrH5Bf4KzD1iTeY855Q4cCc6xPPNoc6MJcsqqRQiGqR977cEEGK2mhVp7ALKHqY1icEw3Q9UmfQ1v",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9v414VeuxMoGyViVYuzEN5vLDzff3nkrH5Bf4KzD1iTeY855Q4cCc6xPPNoc6MJcsqqRQiGqR977cEEGK2mhVp7ALKHqY1icEw3Q9UmfQ1v",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "4112bd7b-3013-4149-aa44-17525199bfc2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: b7aaa6c8f5b4013e7b1755ae877b9fad530e9b2e86f68cec7420a6cea38e81b0",
            "fullTitle": "Testing XPriv Key XPriv to string: b7aaa6c8f5b4013e7b1755ae877b9fad530e9b2e86f68cec7420a6cea38e81b0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "4b36128a-52af-4a73-9007-8a3c93377b98",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9xaK29Nm86ytEwsV9YSsL3jWYR6KtZYY3cKdjAbxHrwKyxH9YWoxvqKwtgQmExGpxAEDrwB4WK9YG1iukth3XiSgsxXLK1W3NB31gLee8fi",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9xaK29Nm86ytEwsV9YSsL3jWYR6KtZYY3cKdjAbxHrwKyxH9YWoxvqKwtgQmExGpxAEDrwB4WK9YG1iukth3XiSgsxXLK1W3NB31gLee8fi",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "fb621fe0-d53a-41fa-853a-8c89d1afd8a1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: c9ba3ede6230e80cb243e9b20a1bd4846165ea312fde7eafe56fc52dcd583899",
            "fullTitle": "Testing XPriv Key XPriv to string: c9ba3ede6230e80cb243e9b20a1bd4846165ea312fde7eafe56fc52dcd583899",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "5956e8bc-fafc-462e-8ac6-56ce2a55da3f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9xaK29Nm86ytGx9uDhNKUBjvbJ1sAEM11aYxGQS66Rmg6oHwy7HbB6kWwMHvukzdbPpGhfNXhZgePWFHm1DCh5PACPFywJJKr1AnUJTLjUc",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9xaK29Nm86ytGx9uDhNKUBjvbJ1sAEM11aYxGQS66Rmg6oHwy7HbB6kWwMHvukzdbPpGhfNXhZgePWFHm1DCh5PACPFywJJKr1AnUJTLjUc",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "7431ce8f-1436-47db-8967-a04c9cf2203e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: f2039f55285a430162c720126d26e96ec43e5b680a0d71cbabaa28dbea091f43",
            "fullTitle": "Testing XPriv Key XPriv to string: f2039f55285a430162c720126d26e96ec43e5b680a0d71cbabaa28dbea091f43",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "a8dab426-826d-4192-982b-24a94943ca2f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv from string: xprv9s21ZrQH143K3ckY9DgU79uMTJkQRLdbCCVDh81SnxTgPzLLGax6uHeBULTtaEtcAvKjXfT7ZWtHzKjTpujMkUd9dDb8msDeAfnJxrgAYhr",
            "fullTitle": "Testing XPriv Key XPriv from string: xprv9s21ZrQH143K3ckY9DgU79uMTJkQRLdbCCVDh81SnxTgPzLLGax6uHeBULTtaEtcAvKjXfT7ZWtHzKjTpujMkUd9dDb8msDeAfnJxrgAYhr",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[110]++;const resultedXkey=(cov_1y300ligpp.s[565]++,fromString$1(base58Key,network$4));cov_1y300ligpp.s[566]++;chai.assert.deepEqual(resultedXkey,privateKey);",
            "err": {},
            "isRoot": false,
            "uuid": "70aff6db-04fb-42d8-85fd-2681e239c461",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPriv to string: 00000055378cf5fafb56c711c674143f9b0ee82ab0ba2924f19b64f5ae7cdbfd",
            "fullTitle": "Testing XPriv Key XPriv to string: 00000055378cf5fafb56c711c674143f9b0ee82ab0ba2924f19b64f5ae7cdbfd",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[111]++;const resultedBase58Key=(cov_1y300ligpp.s[568]++,toString$1(privateKey,network$4));cov_1y300ligpp.s[569]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "d99d6e7b-4660-4cf9-a218-3f04d5b5203b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35 for index 2147483648",
            "fullTitle": "Testing XPriv Key Deriving XPriv e8f32e723decf4051aefac8e2c93c9c5b214313817cdb01a1494b917c8436b35 for index 2147483648",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[113]++;const privateKey=(cov_1y300ligpp.s[572]++,test[0]);const chainCode=(cov_1y300ligpp.s[573]++,test[1]);const index=(cov_1y300ligpp.s[574]++,test[2]);const publicKey=(cov_1y300ligpp.s[575]++,(cov_1y300ligpp.b[111][0]++,test[6])||(cov_1y300ligpp.b[111][1]++,null));const expectedChildKey=(cov_1y300ligpp.s[576]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[577]++,fromXPriv({privateKey,chainCode,publicKey}));const childKey=(cov_1y300ligpp.s[578]++,await toIndex(xKey,index));cov_1y300ligpp.s[579]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "a6b68b15-9b55-4e69-b048-1d7ff0583a9e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368 for index 2147483650",
            "fullTitle": "Testing XPriv Key Deriving XPriv 3c6cb8d0f6a264c91ea8b5030fadaa8e538b020f0a387421a12de9319dc93368 for index 2147483650",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[113]++;const privateKey=(cov_1y300ligpp.s[572]++,test[0]);const chainCode=(cov_1y300ligpp.s[573]++,test[1]);const index=(cov_1y300ligpp.s[574]++,test[2]);const publicKey=(cov_1y300ligpp.s[575]++,(cov_1y300ligpp.b[111][0]++,test[6])||(cov_1y300ligpp.b[111][1]++,null));const expectedChildKey=(cov_1y300ligpp.s[576]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[577]++,fromXPriv({privateKey,chainCode,publicKey}));const childKey=(cov_1y300ligpp.s[578]++,await toIndex(xKey,index));cov_1y300ligpp.s[579]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b70aa328-6724-4ea0-aee3-f14db1ebca99",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e for index 4294967295",
            "fullTitle": "Testing XPriv Key Deriving XPriv abe74a98f6c7eabee0428f53798f0ab8aa1bd37873999041703c742f15ac7e1e for index 4294967295",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[113]++;const privateKey=(cov_1y300ligpp.s[572]++,test[0]);const chainCode=(cov_1y300ligpp.s[573]++,test[1]);const index=(cov_1y300ligpp.s[574]++,test[2]);const publicKey=(cov_1y300ligpp.s[575]++,(cov_1y300ligpp.b[111][0]++,test[6])||(cov_1y300ligpp.b[111][1]++,null));const expectedChildKey=(cov_1y300ligpp.s[576]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[577]++,fromXPriv({privateKey,chainCode,publicKey}));const childKey=(cov_1y300ligpp.s[578]++,await toIndex(xKey,index));cov_1y300ligpp.s[579]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "21209c27-c83c-443a-a0b5-a2025732b7d9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7 for index 4294967294",
            "fullTitle": "Testing XPriv Key Deriving XPriv 704addf544a06e5ee4bea37098463c23613da32020d604506da8c0518e1da4b7 for index 4294967294",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[113]++;const privateKey=(cov_1y300ligpp.s[572]++,test[0]);const chainCode=(cov_1y300ligpp.s[573]++,test[1]);const index=(cov_1y300ligpp.s[574]++,test[2]);const publicKey=(cov_1y300ligpp.s[575]++,(cov_1y300ligpp.b[111][0]++,test[6])||(cov_1y300ligpp.b[111][1]++,null));const expectedChildKey=(cov_1y300ligpp.s[576]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[577]++,fromXPriv({privateKey,chainCode,publicKey}));const childKey=(cov_1y300ligpp.s[578]++,await toIndex(xKey,index));cov_1y300ligpp.s[579]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "601090a8-a055-4ce8-b65e-90e18922cfa4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea for index 1",
            "fullTitle": "Testing XPriv Key Deriving XPriv edb2e14f9ee77d26dd93b4ecede8d16ed408ce149b6cd80b0715a2d911a0afea for index 1",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[113]++;const privateKey=(cov_1y300ligpp.s[572]++,test[0]);const chainCode=(cov_1y300ligpp.s[573]++,test[1]);const index=(cov_1y300ligpp.s[574]++,test[2]);const publicKey=(cov_1y300ligpp.s[575]++,(cov_1y300ligpp.b[111][0]++,test[6])||(cov_1y300ligpp.b[111][1]++,null));const expectedChildKey=(cov_1y300ligpp.s[576]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[577]++,fromXPriv({privateKey,chainCode,publicKey}));const childKey=(cov_1y300ligpp.s[578]++,await toIndex(xKey,index));cov_1y300ligpp.s[579]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "8ae723cc-5f84-49b2-9227-9cac7feffe7a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca for index 2",
            "fullTitle": "Testing XPriv Key Deriving XPriv cbce0d719ecf7431d88e6a89fa1483e02e35092af60c042b1df2ff59fa424dca for index 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[113]++;const privateKey=(cov_1y300ligpp.s[572]++,test[0]);const chainCode=(cov_1y300ligpp.s[573]++,test[1]);const index=(cov_1y300ligpp.s[574]++,test[2]);const publicKey=(cov_1y300ligpp.s[575]++,(cov_1y300ligpp.b[111][0]++,test[6])||(cov_1y300ligpp.b[111][1]++,null));const expectedChildKey=(cov_1y300ligpp.s[576]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[577]++,fromXPriv({privateKey,chainCode,publicKey}));const childKey=(cov_1y300ligpp.s[578]++,await toIndex(xKey,index));cov_1y300ligpp.s[579]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "14870eb0-4343-4abd-b93a-64a683628c88",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e for index 0",
            "fullTitle": "Testing XPriv Key Deriving XPriv 4b03d6fc340455b363f51020ad3ecca4f0850280cf436c70c727923f6db46c3e for index 0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[113]++;const privateKey=(cov_1y300ligpp.s[572]++,test[0]);const chainCode=(cov_1y300ligpp.s[573]++,test[1]);const index=(cov_1y300ligpp.s[574]++,test[2]);const publicKey=(cov_1y300ligpp.s[575]++,(cov_1y300ligpp.b[111][0]++,test[6])||(cov_1y300ligpp.b[111][1]++,null));const expectedChildKey=(cov_1y300ligpp.s[576]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[577]++,fromXPriv({privateKey,chainCode,publicKey}));const childKey=(cov_1y300ligpp.s[578]++,await toIndex(xKey,index));cov_1y300ligpp.s[579]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "7a4e0c18-6980-4739-ac6c-6ec3c095ea16",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93 for index 1",
            "fullTitle": "Testing XPriv Key Deriving XPriv 877c779ad9687164e9c2f4f0f4ff0340814392330693ce95a58fe18fd52e6e93 for index 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[113]++;const privateKey=(cov_1y300ligpp.s[572]++,test[0]);const chainCode=(cov_1y300ligpp.s[573]++,test[1]);const index=(cov_1y300ligpp.s[574]++,test[2]);const publicKey=(cov_1y300ligpp.s[575]++,(cov_1y300ligpp.b[111][0]++,test[6])||(cov_1y300ligpp.b[111][1]++,null));const expectedChildKey=(cov_1y300ligpp.s[576]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[577]++,fromXPriv({privateKey,chainCode,publicKey}));const childKey=(cov_1y300ligpp.s[578]++,await toIndex(xKey,index));cov_1y300ligpp.s[579]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "bea49372-632e-49f0-8661-1562cd573e86",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d for index 2",
            "fullTitle": "Testing XPriv Key Deriving XPriv f1c7c871a54a804afe328b4c83a1c33b8e5ff48f5087273f04efa83b247d6a2d for index 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[113]++;const privateKey=(cov_1y300ligpp.s[572]++,test[0]);const chainCode=(cov_1y300ligpp.s[573]++,test[1]);const index=(cov_1y300ligpp.s[574]++,test[2]);const publicKey=(cov_1y300ligpp.s[575]++,(cov_1y300ligpp.b[111][0]++,test[6])||(cov_1y300ligpp.b[111][1]++,null));const expectedChildKey=(cov_1y300ligpp.s[576]++,{privateKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[577]++,fromXPriv({privateKey,chainCode,publicKey}));const childKey=(cov_1y300ligpp.s[578]++,await toIndex(xKey,index));cov_1y300ligpp.s[579]++;chai.assert.deepEqual({privateKey:childKey.privateKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "65b1c5e9-78a1-4561-91a4-fb0ede6000ec",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz for bips 32",
            "fullTitle": "Testing XPriv Key Deriving key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz for bips 32",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[115]++;const xkey=(cov_1y300ligpp.s[582]++,test[0]);const parentKey=(cov_1y300ligpp.s[583]++,fromString$1(xkey,network$4));let account=(cov_1y300ligpp.s[584]++,0);let coinType=(cov_1y300ligpp.s[585]++,0);let bips=(cov_1y300ligpp.s[586]++,test[2]);cov_1y300ligpp.s[587]++;if(!bips){cov_1y300ligpp.b[112][0]++;cov_1y300ligpp.s[588]++;bips=[84];}else{cov_1y300ligpp.b[112][1]++;}cov_1y300ligpp.s[589]++;if(test[1]){cov_1y300ligpp.b[113][0]++;cov_1y300ligpp.s[590]++;account=test[1][0];cov_1y300ligpp.s[591]++;coinType=test[1][1];}else{cov_1y300ligpp.b[113][1]++;}let testIndex=(cov_1y300ligpp.s[592]++,3);cov_1y300ligpp.s[593]++;const testPath=async path=>{cov_1y300ligpp.f[116]++;const hdKey=(cov_1y300ligpp.s[594]++,await toPath(parentKey,path));const xprivkey=(cov_1y300ligpp.s[595]++,toString$1(hdKey,network$4));const pubKey=(cov_1y300ligpp.s[596]++,await toXPub(hdKey));const xpubkey=(cov_1y300ligpp.s[597]++,toString$2(pubKey,network$4));cov_1y300ligpp.s[598]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_1y300ligpp.s[599]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');};cov_1y300ligpp.s[600]++;for(const purpose of bips){cov_1y300ligpp.s[601]++;if(purpose===32){cov_1y300ligpp.b[114][0]++;cov_1y300ligpp.s[602]++;await testPath(['m',`${account}`,0].join('/'));cov_1y300ligpp.s[603]++;testIndex-=2;cov_1y300ligpp.s[604]++;await testPath([account,0]);}else{cov_1y300ligpp.b[114][1]++;cov_1y300ligpp.s[605]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,0].join('/'));cov_1y300ligpp.s[606]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,1].join('/'));cov_1y300ligpp.s[607]++;testIndex-=4;cov_1y300ligpp.s[608]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,0]);cov_1y300ligpp.s[609]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,1]);}}",
            "err": {},
            "isRoot": false,
            "uuid": "378f1bcf-af16-4fab-bb88-94f1835389bb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz for bips 44",
            "fullTitle": "Testing XPriv Key Deriving key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz for bips 44",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[115]++;const xkey=(cov_1y300ligpp.s[582]++,test[0]);const parentKey=(cov_1y300ligpp.s[583]++,fromString$1(xkey,network$4));let account=(cov_1y300ligpp.s[584]++,0);let coinType=(cov_1y300ligpp.s[585]++,0);let bips=(cov_1y300ligpp.s[586]++,test[2]);cov_1y300ligpp.s[587]++;if(!bips){cov_1y300ligpp.b[112][0]++;cov_1y300ligpp.s[588]++;bips=[84];}else{cov_1y300ligpp.b[112][1]++;}cov_1y300ligpp.s[589]++;if(test[1]){cov_1y300ligpp.b[113][0]++;cov_1y300ligpp.s[590]++;account=test[1][0];cov_1y300ligpp.s[591]++;coinType=test[1][1];}else{cov_1y300ligpp.b[113][1]++;}let testIndex=(cov_1y300ligpp.s[592]++,3);cov_1y300ligpp.s[593]++;const testPath=async path=>{cov_1y300ligpp.f[116]++;const hdKey=(cov_1y300ligpp.s[594]++,await toPath(parentKey,path));const xprivkey=(cov_1y300ligpp.s[595]++,toString$1(hdKey,network$4));const pubKey=(cov_1y300ligpp.s[596]++,await toXPub(hdKey));const xpubkey=(cov_1y300ligpp.s[597]++,toString$2(pubKey,network$4));cov_1y300ligpp.s[598]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_1y300ligpp.s[599]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');};cov_1y300ligpp.s[600]++;for(const purpose of bips){cov_1y300ligpp.s[601]++;if(purpose===32){cov_1y300ligpp.b[114][0]++;cov_1y300ligpp.s[602]++;await testPath(['m',`${account}`,0].join('/'));cov_1y300ligpp.s[603]++;testIndex-=2;cov_1y300ligpp.s[604]++;await testPath([account,0]);}else{cov_1y300ligpp.b[114][1]++;cov_1y300ligpp.s[605]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,0].join('/'));cov_1y300ligpp.s[606]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,1].join('/'));cov_1y300ligpp.s[607]++;testIndex-=4;cov_1y300ligpp.s[608]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,0]);cov_1y300ligpp.s[609]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,1]);}}",
            "err": {},
            "isRoot": false,
            "uuid": "ae32efea-c00a-465f-a7d6-e92489c4975c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz for bips 44,84",
            "fullTitle": "Testing XPriv Key Deriving key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz for bips 44,84",
            "timedOut": false,
            "duration": 38,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[115]++;const xkey=(cov_1y300ligpp.s[582]++,test[0]);const parentKey=(cov_1y300ligpp.s[583]++,fromString$1(xkey,network$4));let account=(cov_1y300ligpp.s[584]++,0);let coinType=(cov_1y300ligpp.s[585]++,0);let bips=(cov_1y300ligpp.s[586]++,test[2]);cov_1y300ligpp.s[587]++;if(!bips){cov_1y300ligpp.b[112][0]++;cov_1y300ligpp.s[588]++;bips=[84];}else{cov_1y300ligpp.b[112][1]++;}cov_1y300ligpp.s[589]++;if(test[1]){cov_1y300ligpp.b[113][0]++;cov_1y300ligpp.s[590]++;account=test[1][0];cov_1y300ligpp.s[591]++;coinType=test[1][1];}else{cov_1y300ligpp.b[113][1]++;}let testIndex=(cov_1y300ligpp.s[592]++,3);cov_1y300ligpp.s[593]++;const testPath=async path=>{cov_1y300ligpp.f[116]++;const hdKey=(cov_1y300ligpp.s[594]++,await toPath(parentKey,path));const xprivkey=(cov_1y300ligpp.s[595]++,toString$1(hdKey,network$4));const pubKey=(cov_1y300ligpp.s[596]++,await toXPub(hdKey));const xpubkey=(cov_1y300ligpp.s[597]++,toString$2(pubKey,network$4));cov_1y300ligpp.s[598]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_1y300ligpp.s[599]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');};cov_1y300ligpp.s[600]++;for(const purpose of bips){cov_1y300ligpp.s[601]++;if(purpose===32){cov_1y300ligpp.b[114][0]++;cov_1y300ligpp.s[602]++;await testPath(['m',`${account}`,0].join('/'));cov_1y300ligpp.s[603]++;testIndex-=2;cov_1y300ligpp.s[604]++;await testPath([account,0]);}else{cov_1y300ligpp.b[114][1]++;cov_1y300ligpp.s[605]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,0].join('/'));cov_1y300ligpp.s[606]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,1].join('/'));cov_1y300ligpp.s[607]++;testIndex-=4;cov_1y300ligpp.s[608]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,0]);cov_1y300ligpp.s[609]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,1]);}}",
            "err": {},
            "isRoot": false,
            "uuid": "c8904b9e-bdcb-4235-b6c3-417ce1f7b375",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz for bips null",
            "fullTitle": "Testing XPriv Key Deriving key xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz for bips null",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[115]++;const xkey=(cov_1y300ligpp.s[582]++,test[0]);const parentKey=(cov_1y300ligpp.s[583]++,fromString$1(xkey,network$4));let account=(cov_1y300ligpp.s[584]++,0);let coinType=(cov_1y300ligpp.s[585]++,0);let bips=(cov_1y300ligpp.s[586]++,test[2]);cov_1y300ligpp.s[587]++;if(!bips){cov_1y300ligpp.b[112][0]++;cov_1y300ligpp.s[588]++;bips=[84];}else{cov_1y300ligpp.b[112][1]++;}cov_1y300ligpp.s[589]++;if(test[1]){cov_1y300ligpp.b[113][0]++;cov_1y300ligpp.s[590]++;account=test[1][0];cov_1y300ligpp.s[591]++;coinType=test[1][1];}else{cov_1y300ligpp.b[113][1]++;}let testIndex=(cov_1y300ligpp.s[592]++,3);cov_1y300ligpp.s[593]++;const testPath=async path=>{cov_1y300ligpp.f[116]++;const hdKey=(cov_1y300ligpp.s[594]++,await toPath(parentKey,path));const xprivkey=(cov_1y300ligpp.s[595]++,toString$1(hdKey,network$4));const pubKey=(cov_1y300ligpp.s[596]++,await toXPub(hdKey));const xpubkey=(cov_1y300ligpp.s[597]++,toString$2(pubKey,network$4));cov_1y300ligpp.s[598]++;chai.assert.equal(xprivkey,test[testIndex++],'xpriv');cov_1y300ligpp.s[599]++;chai.assert.equal(xpubkey,test[testIndex++],'xpub');};cov_1y300ligpp.s[600]++;for(const purpose of bips){cov_1y300ligpp.s[601]++;if(purpose===32){cov_1y300ligpp.b[114][0]++;cov_1y300ligpp.s[602]++;await testPath(['m',`${account}`,0].join('/'));cov_1y300ligpp.s[603]++;testIndex-=2;cov_1y300ligpp.s[604]++;await testPath([account,0]);}else{cov_1y300ligpp.b[114][1]++;cov_1y300ligpp.s[605]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,0].join('/'));cov_1y300ligpp.s[606]++;await testPath(['m',`${purpose}'`,`${coinType}'`,`${account}'`,1].join('/'));cov_1y300ligpp.s[607]++;testIndex-=4;cov_1y300ligpp.s[608]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,0]);cov_1y300ligpp.s[609]++;await testPath([purpose+HARDENED,coinType+HARDENED,account+HARDENED,1]);}}",
            "err": {},
            "isRoot": false,
            "uuid": "64cbe9a7-4ccd-4eca-ae19-4eb61f594b33",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/44'/0'/0'/0",
            "fullTitle": "Testing XPriv Key Deriving XPriv key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/44'/0'/0'/0",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[118]++;const path=(cov_1y300ligpp.s[612]++,fromString(test[1]));const parentKey=(cov_1y300ligpp.s[613]++,fromString$1(test[0]));let testIndex=(cov_1y300ligpp.s[614]++,2);cov_1y300ligpp.s[615]++;while(path.length){const hdKey=(cov_1y300ligpp.s[616]++,await toPath(parentKey,path));const xprivkey=(cov_1y300ligpp.s[617]++,toString$1(hdKey,network$4));const publicKey=(cov_1y300ligpp.s[618]++,await toXPub(hdKey,network$4));const xpubkey=(cov_1y300ligpp.s[619]++,toString$2(publicKey,network$4));cov_1y300ligpp.s[620]++;chai.assert.equal(xprivkey,test[testIndex][0],'xpriv');cov_1y300ligpp.s[621]++;chai.assert.equal(xpubkey,test[testIndex][1],'xpub');cov_1y300ligpp.s[622]++;path.pop();cov_1y300ligpp.s[623]++;testIndex++;}",
            "err": {},
            "isRoot": false,
            "uuid": "fee45e01-c415-420c-a3e4-5d79ffababf0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/84'/1'/185'/1",
            "fullTitle": "Testing XPriv Key Deriving XPriv key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/84'/1'/185'/1",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[118]++;const path=(cov_1y300ligpp.s[612]++,fromString(test[1]));const parentKey=(cov_1y300ligpp.s[613]++,fromString$1(test[0]));let testIndex=(cov_1y300ligpp.s[614]++,2);cov_1y300ligpp.s[615]++;while(path.length){const hdKey=(cov_1y300ligpp.s[616]++,await toPath(parentKey,path));const xprivkey=(cov_1y300ligpp.s[617]++,toString$1(hdKey,network$4));const publicKey=(cov_1y300ligpp.s[618]++,await toXPub(hdKey,network$4));const xpubkey=(cov_1y300ligpp.s[619]++,toString$2(publicKey,network$4));cov_1y300ligpp.s[620]++;chai.assert.equal(xprivkey,test[testIndex][0],'xpriv');cov_1y300ligpp.s[621]++;chai.assert.equal(xpubkey,test[testIndex][1],'xpub');cov_1y300ligpp.s[622]++;path.pop();cov_1y300ligpp.s[623]++;testIndex++;}",
            "err": {},
            "isRoot": false,
            "uuid": "aafac137-3adf-4f7a-b6a6-657bbd3d137f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPriv key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/32/0/1",
            "fullTitle": "Testing XPriv Key Deriving XPriv key from xkey xprv9s21ZrQH143K2n9Xc76gUieX7Nk6aj2v8YusPEPnuoZ6DFmRwkjox3u4istSoy4sS1KWj5QNPxQ8gokjxxX3ziSD5hMjdtGq23HLHWLcejz with path m/32/0/1",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[118]++;const path=(cov_1y300ligpp.s[612]++,fromString(test[1]));const parentKey=(cov_1y300ligpp.s[613]++,fromString$1(test[0]));let testIndex=(cov_1y300ligpp.s[614]++,2);cov_1y300ligpp.s[615]++;while(path.length){const hdKey=(cov_1y300ligpp.s[616]++,await toPath(parentKey,path));const xprivkey=(cov_1y300ligpp.s[617]++,toString$1(hdKey,network$4));const publicKey=(cov_1y300ligpp.s[618]++,await toXPub(hdKey,network$4));const xpubkey=(cov_1y300ligpp.s[619]++,toString$2(publicKey,network$4));cov_1y300ligpp.s[620]++;chai.assert.equal(xprivkey,test[testIndex][0],'xpriv');cov_1y300ligpp.s[621]++;chai.assert.equal(xpubkey,test[testIndex][1],'xpub');cov_1y300ligpp.s[622]++;path.pop();cov_1y300ligpp.s[623]++;testIndex++;}",
            "err": {},
            "isRoot": false,
            "uuid": "9baa1423-e3c4-4feb-88df-eb9fa5bb7ca7",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "08a1cff7-fe4b-4fad-b0ee-dda01b589dc3",
          "830ce6a0-196a-456f-87cd-20db97d14436",
          "ec8c0359-fd22-4cc6-9c3e-d9746fcc9cbe",
          "1bf2d613-6b23-484d-81d7-bfb5319aa5c1",
          "69b18e72-2b77-431d-b0cf-b3e7c2ecd203",
          "963c8698-0850-4101-ab7a-27523cd59a7a",
          "8d52d843-717a-4eaf-b5b5-f1f8dd388a4a",
          "14198522-44d1-48b3-98cb-253d6672e97a",
          "995f62b5-73f9-42c5-85fa-62371cd4f19e",
          "59a32eb2-83a7-4269-a567-6d371f141a26",
          "db3ca38c-b20b-4b1d-98f0-7642393e4b52",
          "b8ee9326-b40e-4f4d-9dda-cb390bc1cb24",
          "98dff1c5-dbcf-4d89-aa73-8eff275b902b",
          "21d8eb6f-3c26-4e08-8a01-135bb15ff4cd",
          "62b31018-163f-4a54-bd21-329f8031e3cc",
          "a1ba103d-3c47-4f6c-ae07-6d4fc61da621",
          "b6a9405a-be76-4dc3-8fc0-6e014071abb7",
          "24906c66-b822-42da-8df0-2c8d99e54638",
          "69fe0822-a886-4c00-bdab-cda50cb4cfc2",
          "934d5f43-28d5-497e-a5a7-db4f1c3bd05a",
          "d314e16a-007d-4d83-9ef7-0f40e170ea78",
          "8bfd874f-7c1b-4547-b9b6-7c5a9a629598",
          "7b0610d4-c347-4d02-8930-2b90f4e7d3e2",
          "8ef6e46a-6695-497b-9e6b-c71426d3a365",
          "a6c2e514-1ab9-4209-a45a-d7122858fd6b",
          "e31c0ba8-cd4a-451a-ab37-c3819283c74f",
          "7b1ac0d5-bf54-4132-b3a0-fd0bcedffdd9",
          "3e2d171a-2244-41f3-bfa9-9c1de9750599",
          "6ca885b1-f0d1-4cc3-a0f1-ce4e0323764f",
          "321cee56-f8c3-4858-89f4-779a5cf0c976",
          "b55d91f0-b01b-48d7-96a7-a3207e9197b0",
          "04b8e06b-2666-4c3a-a529-b7ea8ba09c44",
          "73afbd62-1ec7-4323-9611-7bce2a137228",
          "e4323c76-a521-46ac-a86e-7c4062d941d7",
          "4112bd7b-3013-4149-aa44-17525199bfc2",
          "4b36128a-52af-4a73-9007-8a3c93377b98",
          "fb621fe0-d53a-41fa-853a-8c89d1afd8a1",
          "5956e8bc-fafc-462e-8ac6-56ce2a55da3f",
          "7431ce8f-1436-47db-8967-a04c9cf2203e",
          "a8dab426-826d-4192-982b-24a94943ca2f",
          "70aff6db-04fb-42d8-85fd-2681e239c461",
          "d99d6e7b-4660-4cf9-a218-3f04d5b5203b",
          "a6b68b15-9b55-4e69-b048-1d7ff0583a9e",
          "b70aa328-6724-4ea0-aee3-f14db1ebca99",
          "21209c27-c83c-443a-a0b5-a2025732b7d9",
          "601090a8-a055-4ce8-b65e-90e18922cfa4",
          "8ae723cc-5f84-49b2-9227-9cac7feffe7a",
          "14870eb0-4343-4abd-b93a-64a683628c88",
          "7a4e0c18-6980-4739-ac6c-6ec3c095ea16",
          "bea49372-632e-49f0-8661-1562cd573e86",
          "65b1c5e9-78a1-4561-91a4-fb0ede6000ec",
          "378f1bcf-af16-4fab-bb88-94f1835389bb",
          "ae32efea-c00a-465f-a7d6-e92489c4975c",
          "c8904b9e-bdcb-4235-b6c3-417ce1f7b375",
          "64cbe9a7-4ccd-4eca-ae19-4eb61f594b33",
          "fee45e01-c415-420c-a3e4-5d79ffababf0",
          "aafac137-3adf-4f7a-b6a6-657bbd3d137f",
          "9baa1423-e3c4-4feb-88df-eb9fa5bb7ca7"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 124,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "78eb2c7b-b9b2-4b74-8f7b-3dbe7bf657fb",
        "title": "Testing XPub",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "XPub from string: xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8",
            "fullTitle": "Testing XPub XPub from string: xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "807de749-79f9-4d24-8d84-61153562e535",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 0339a36013301597daef41fbe593a02cc513d0b55527ec2df1050e2e8ff49c85c2",
            "fullTitle": "Testing XPub XPub to string: 0339a36013301597daef41fbe593a02cc513d0b55527ec2df1050e2e8ff49c85c2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "628726cf-ef54-47ab-a3f0-31c43a7239f7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw",
            "fullTitle": "Testing XPub XPub from string: xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "2e2f0f5f-53c0-4216-9545-d3c539598301",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56",
            "fullTitle": "Testing XPub XPub to string: 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "24f30ca8-beb0-44fd-af4b-8e66229dc592",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub6ASuArnXKPbfEwhqN6e3mwBcDTgzisQN1wXN9BJcM47sSikHjJf3UFHKkNAWbWMiGj7Wf5uMash7SyYq527Hqck2AxYysAA7xmALppuCkwQ",
            "fullTitle": "Testing XPub XPub from string: xpub6ASuArnXKPbfEwhqN6e3mwBcDTgzisQN1wXN9BJcM47sSikHjJf3UFHKkNAWbWMiGj7Wf5uMash7SyYq527Hqck2AxYysAA7xmALppuCkwQ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "1b9c729a-d691-4395-8b5e-19950a684616",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 03501e454bf00751f24b1b489aa925215d66af2234e3891c3b21a52bedb3cd711c",
            "fullTitle": "Testing XPub XPub to string: 03501e454bf00751f24b1b489aa925215d66af2234e3891c3b21a52bedb3cd711c",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "6eedb5ac-f451-498f-a643-2cd23e3b12db",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub6D4BDPcP2GT577Vvch3R8wDkScZWzQzMMUm3PWbmWvVJrZwQY4VUNgqFJPMM3No2dFDFGTsxxpG5uJh7n7epu4trkrX7x7DogT5Uv6fcLW5",
            "fullTitle": "Testing XPub XPub from string: xpub6D4BDPcP2GT577Vvch3R8wDkScZWzQzMMUm3PWbmWvVJrZwQY4VUNgqFJPMM3No2dFDFGTsxxpG5uJh7n7epu4trkrX7x7DogT5Uv6fcLW5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "773d2729-44a5-4a1f-b4b2-26ea4462e11d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2",
            "fullTitle": "Testing XPub XPub to string: 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "f4e1da7e-cc23-4cc3-8798-51f0c26e9c29",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub6FHa3pjLCk84BayeJxFW2SP4XRrFd1JYnxeLeU8EqN3vDfZmbqBqaGJAyiLjTAwm6ZLRQUMv1ZACTj37sR62cfN7fe5JnJ7dh8zL4fiyLHV",
            "fullTitle": "Testing XPub XPub from string: xpub6FHa3pjLCk84BayeJxFW2SP4XRrFd1JYnxeLeU8EqN3vDfZmbqBqaGJAyiLjTAwm6ZLRQUMv1ZACTj37sR62cfN7fe5JnJ7dh8zL4fiyLHV",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "ac4263eb-5340-494c-8c4c-7ec9348c65d3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29",
            "fullTitle": "Testing XPub XPub to string: 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "90ecca87-aa3e-4c8a-b84e-90773c4c46ff",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub6H1LXWLaKsWFhvm6RVpEL9P4KfRZSW7abD2ttkWP3SSQvnyA8FSVqNTEcYFgJS2UaFcxupHiYkro49S8yGasTvXEYBVPamhGW6cFJodrTHy",
            "fullTitle": "Testing XPub XPub from string: xpub6H1LXWLaKsWFhvm6RVpEL9P4KfRZSW7abD2ttkWP3SSQvnyA8FSVqNTEcYFgJS2UaFcxupHiYkro49S8yGasTvXEYBVPamhGW6cFJodrTHy",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "0db0aefc-cd85-49c3-a2b4-cc22e9ec0816",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 022a471424da5e657499d1ff51cb43c47481a03b1e77f951fe64cec9f5a48f7011",
            "fullTitle": "Testing XPub XPub to string: 022a471424da5e657499d1ff51cb43c47481a03b1e77f951fe64cec9f5a48f7011",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "e8d427bc-8345-4ca4-8bf5-68d328e55f91",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB",
            "fullTitle": "Testing XPub XPub from string: xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "45763d38-c883-41a2-9dfe-2108ff995cfc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7",
            "fullTitle": "Testing XPub XPub to string: 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "70d2da42-11b1-491b-adf6-92822a87e0f8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH",
            "fullTitle": "Testing XPub XPub from string: xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "2611c579-53e5-4c32-82a0-5ea68c683367",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 02fc9e5af0ac8d9b3cecfe2a888e2117ba3d089d8585886c9c826b6b22a98d12ea",
            "fullTitle": "Testing XPub XPub to string: 02fc9e5af0ac8d9b3cecfe2a888e2117ba3d089d8585886c9c826b6b22a98d12ea",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "4894d354-02a6-4412-8caa-88be95420453",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub6ASAVgeehLbnwdqV6UKMHVzgqAG8Gr6riv3Fxxpj8ksbH9ebxaEyBLZ85ySDhKiLDBrQSARLq1uNRts8RuJiHjaDMBU4Zn9h8LZNnBC5y4a",
            "fullTitle": "Testing XPub XPub from string: xpub6ASAVgeehLbnwdqV6UKMHVzgqAG8Gr6riv3Fxxpj8ksbH9ebxaEyBLZ85ySDhKiLDBrQSARLq1uNRts8RuJiHjaDMBU4Zn9h8LZNnBC5y4a",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "8d348207-accb-4b18-aa7a-458419960b9a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b",
            "fullTitle": "Testing XPub XPub to string: 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "31639c16-833e-4c7b-bd84-c73ab0668b0d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub6DF8uhdarytz3FWdA8TvFSvvAh8dP3283MY7p2V4SeE2wyWmG5mg5EwVvmdMVCQcoNJxGoWaU9DCWh89LojfZ537wTfunKau47EL2dhHKon",
            "fullTitle": "Testing XPub XPub from string: xpub6DF8uhdarytz3FWdA8TvFSvvAh8dP3283MY7p2V4SeE2wyWmG5mg5EwVvmdMVCQcoNJxGoWaU9DCWh89LojfZ537wTfunKau47EL2dhHKon",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "dedb8017-e63d-4b45-90ac-dfb3a14cc829",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 03a7d1d856deb74c508e05031f9895dab54626251b3806e16b4bd12e781a7df5b9",
            "fullTitle": "Testing XPub XPub to string: 03a7d1d856deb74c508e05031f9895dab54626251b3806e16b4bd12e781a7df5b9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "370603d8-b014-4188-8a04-c42ef98a0416",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL",
            "fullTitle": "Testing XPub XPub from string: xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b6a3ec26-969f-486f-a950-a59fce7c02f1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0",
            "fullTitle": "Testing XPub XPub to string: 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "37baeed1-6e5f-43c6-a2fd-6ef63c5fb4de",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub6FnCn6nSzZAw5Tw7cgR9bi15UV96gLZhjDstkXXxvCLsUXBGXPdSnLFbdpq8p9HmGsApME5hQTZ3emM2rnY5agb9rXpVGyy3bdW6EEgAtqt",
            "fullTitle": "Testing XPub XPub from string: xpub6FnCn6nSzZAw5Tw7cgR9bi15UV96gLZhjDstkXXxvCLsUXBGXPdSnLFbdpq8p9HmGsApME5hQTZ3emM2rnY5agb9rXpVGyy3bdW6EEgAtqt",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "ba7f59d0-f830-4145-8881-2f1df86ec8eb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 024d902e1a2fc7a8755ab5b694c575fce742c48d9ff192e63df5193e4c7afe1f9c",
            "fullTitle": "Testing XPub XPub to string: 024d902e1a2fc7a8755ab5b694c575fce742c48d9ff192e63df5193e4c7afe1f9c",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "5fc83548-f2ae-48a6-a584-1e95e2a87135",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub661MyMwAqRbcFa4vkmBVnqhGEgWhewDgAv3xmFRny74D3sGHz6KTTbcskg2vZEMbEwxc4oaR435oczhSu4GdNwhwiVewcewU8A1Rr6HehAU",
            "fullTitle": "Testing XPub XPub from string: xpub661MyMwAqRbcFa4vkmBVnqhGEgWhewDgAv3xmFRny74D3sGHz6KTTbcskg2vZEMbEwxc4oaR435oczhSu4GdNwhwiVewcewU8A1Rr6HehAU",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "3045b13b-1bf3-4ee0-a840-6b9582b9abbb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 02fce1b65c7470270fb89e5aa1dda253406b3370b948eae8a2a3539c4f25894283",
            "fullTitle": "Testing XPub XPub to string: 02fce1b65c7470270fb89e5aa1dda253406b3370b948eae8a2a3539c4f25894283",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "82511d2c-e51e-43bc-9ff2-024c7fb409e4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub693MU1BonjMa6Xxar2HQ9r3tRw3AA8yo7BBdvuSZF1D1eet32bVxGr9LYViWMtaLfQaa2StXeUmDG5VELFkU9pc3yfTzCk61WQJdR6ezj7a",
            "fullTitle": "Testing XPub XPub from string: xpub693MU1BonjMa6Xxar2HQ9r3tRw3AA8yo7BBdvuSZF1D1eet32bVxGr9LYViWMtaLfQaa2StXeUmDG5VELFkU9pc3yfTzCk61WQJdR6ezj7a",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "58cbe1f9-5846-415f-b187-48aea6c7cae4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 0324670e21612d0035d74563b25934ebfe0b1b1ea77ea18719029541aba107228a",
            "fullTitle": "Testing XPub XPub to string: 0324670e21612d0035d74563b25934ebfe0b1b1ea77ea18719029541aba107228a",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "12f42f6c-95d3-420c-a2b1-a193ee9a9bd2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "fullTitle": "Testing XPub XPub from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "c16f4770-2f1d-47df-ab27-76eb281d40a3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "fullTitle": "Testing XPub XPub to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "fdb11045-636f-41b3-88bc-7f0ba884f53e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "fullTitle": "Testing XPub XPub from string: xpub693MU1BonjMa8MMoz9opJhrFejcXcGmhMP9gzySLsip4Dz1UrSLT4i2pAimHDyM2onW2H2L2HkbwrZqoizQLMoErXu8mPYxDf8tJUBAfBuT",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "e26d0271-fa73-40ee-b338-d6240c1a951f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "fullTitle": "Testing XPub XPub to string: 02e7eddf4cfa267c3b33a7e9387f28c55b6e806a79824c797b0f5acdfcdccc73e8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "20611b31-de9d-416f-a29f-75893a9a4b49",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub693MU1BonjMaBynxewXEjDs4n2W9TFUheJ7FriPpa3zdQvQDwbvT9uGsEebvioAcYbtRUU7ge4yVgj8WDLrwtwuXKTWiieFoYX2B1JYUEfK",
            "fullTitle": "Testing XPub XPub from string: xpub693MU1BonjMaBynxewXEjDs4n2W9TFUheJ7FriPpa3zdQvQDwbvT9uGsEebvioAcYbtRUU7ge4yVgj8WDLrwtwuXKTWiieFoYX2B1JYUEfK",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "972fc88b-b2a7-44eb-9b82-006ab76c3c0a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 031cd583c3ffb87477c539012859195f821e33b16435e8f3da0b40247056158618",
            "fullTitle": "Testing XPub XPub to string: 031cd583c3ffb87477c539012859195f821e33b16435e8f3da0b40247056158618",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "fcdd2901-f13e-439c-a31f-4f764f8437d1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub6BZfReuexUYBTRwxFZyshBgF6SvpJ2GPQqFEXZ1ZrCUJrkcJ648DUdeRjx9QiNQxQvPcHYV3rGkvuExFQbVRS4kU5ynx4fAsWWhHgyPh1pP",
            "fullTitle": "Testing XPub XPub from string: xpub6BZfReuexUYBTRwxFZyshBgF6SvpJ2GPQqFEXZ1ZrCUJrkcJ648DUdeRjx9QiNQxQvPcHYV3rGkvuExFQbVRS4kU5ynx4fAsWWhHgyPh1pP",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "8f00f45c-8295-479c-a5c8-d72b73c46e6b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 03268cd9af10d8b9d36f9c5da10038286174afc654c06f6aacfeea306b0c7a7637",
            "fullTitle": "Testing XPub XPub to string: 03268cd9af10d8b9d36f9c5da10038286174afc654c06f6aacfeea306b0c7a7637",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "389fa2c1-77ee-42f9-ab8b-bc8c98f17e74",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub from string: xpub6BZfReuexUYBVSENKiuKqKgf9KrMZh4rNoUZ4nqhemJeybd6Webqiu4zndBwa9UB4Jvr5jB5Bcgng6reXAKCuDiVm7zhzJ13BUDBiM8HidZ",
            "fullTitle": "Testing XPub XPub from string: xpub6BZfReuexUYBVSENKiuKqKgf9KrMZh4rNoUZ4nqhemJeybd6Webqiu4zndBwa9UB4Jvr5jB5Bcgng6reXAKCuDiVm7zhzJ13BUDBiM8HidZ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[121]++;const resultedXkey=(cov_1y300ligpp.s[630]++,fromString$2(base58Key,network$5));cov_1y300ligpp.s[631]++;chai.assert.deepEqual(resultedXkey,publicKey);",
            "err": {},
            "isRoot": false,
            "uuid": "b7533f01-b866-45a7-bbfc-125801fbab1e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "XPub to string: 03641a1997a3538dd18036b941600b96e0c6229182c7089119894823324a5fff0c",
            "fullTitle": "Testing XPub XPub to string: 03641a1997a3538dd18036b941600b96e0c6229182c7089119894823324a5fff0c",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[122]++;const resultedBase58Key=(cov_1y300ligpp.s[633]++,toString$2(publicKey,network$5));cov_1y300ligpp.s[634]++;chai.assert.equal(resultedBase58Key,base58Key);",
            "err": {},
            "isRoot": false,
            "uuid": "5566d44f-28ca-4019-ab05-e3d3e2c924b8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPub 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56 for index 1",
            "fullTitle": "Testing XPub Deriving XPub 035a784662a4a20a65bf6aab9ae98a6c068a81c52e4b032c0fb5400c706cfccc56 for index 1",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[124]++;const publicKey=(cov_1y300ligpp.s[637]++,test[0]);const chainCode=(cov_1y300ligpp.s[638]++,test[1]);const index=(cov_1y300ligpp.s[639]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[640]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[641]++,fromXPub({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[642]++,await toIndex$1(xKey,index));cov_1y300ligpp.s[643]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "fc9f5985-807e-47ca-8a89-cc1418c8a670",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPub 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2 for index 2",
            "fullTitle": "Testing XPub Deriving XPub 0357bfe1e341d01c69fe5654309956cbea516822fba8a601743a012a7896ee8dc2 for index 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[124]++;const publicKey=(cov_1y300ligpp.s[637]++,test[0]);const chainCode=(cov_1y300ligpp.s[638]++,test[1]);const index=(cov_1y300ligpp.s[639]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[640]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[641]++,fromXPub({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[642]++,await toIndex$1(xKey,index));cov_1y300ligpp.s[643]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "5ce7a10d-dc7e-4eae-806e-86995f154e0c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPub 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29 for index 1000000000",
            "fullTitle": "Testing XPub Deriving XPub 02e8445082a72f29b75ca48748a914df60622a609cacfce8ed0e35804560741d29 for index 1000000000",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[124]++;const publicKey=(cov_1y300ligpp.s[637]++,test[0]);const chainCode=(cov_1y300ligpp.s[638]++,test[1]);const index=(cov_1y300ligpp.s[639]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[640]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[641]++,fromXPub({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[642]++,await toIndex$1(xKey,index));cov_1y300ligpp.s[643]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "cc44c481-4848-451a-a547-ea0bf359f57a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPub 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7 for index 0",
            "fullTitle": "Testing XPub Deriving XPub 03cbcaa9c98c877a26977d00825c956a238e8dddfbd322cce4f74b0b5bd6ace4a7 for index 0",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[124]++;const publicKey=(cov_1y300ligpp.s[637]++,test[0]);const chainCode=(cov_1y300ligpp.s[638]++,test[1]);const index=(cov_1y300ligpp.s[639]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[640]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[641]++,fromXPub({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[642]++,await toIndex$1(xKey,index));cov_1y300ligpp.s[643]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "d42c6425-a6ba-4e83-9acd-c49111848642",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPub 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b for index 1",
            "fullTitle": "Testing XPub Deriving XPub 03c01e7425647bdefa82b12d9bad5e3e6865bee0502694b94ca58b666abc0a5c3b for index 1",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[124]++;const publicKey=(cov_1y300ligpp.s[637]++,test[0]);const chainCode=(cov_1y300ligpp.s[638]++,test[1]);const index=(cov_1y300ligpp.s[639]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[640]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[641]++,fromXPub({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[642]++,await toIndex$1(xKey,index));cov_1y300ligpp.s[643]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "5c0dc08c-89b2-420e-878b-53bb7522477b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Deriving XPub 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0 for index 2",
            "fullTitle": "Testing XPub Deriving XPub 02d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0 for index 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[124]++;const publicKey=(cov_1y300ligpp.s[637]++,test[0]);const chainCode=(cov_1y300ligpp.s[638]++,test[1]);const index=(cov_1y300ligpp.s[639]++,test[2]);const expectedChildKey=(cov_1y300ligpp.s[640]++,{publicKey:test[3],chainCode:test[4],childNumber:test[5]});const xKey=(cov_1y300ligpp.s[641]++,fromXPub({publicKey,chainCode}));const childKey=(cov_1y300ligpp.s[642]++,await toIndex$1(xKey,index));cov_1y300ligpp.s[643]++;chai.assert.deepEqual({publicKey:childKey.publicKey,chainCode:childKey.chainCode,childNumber:childKey.childNumber},expectedChildKey);",
            "err": {},
            "isRoot": false,
            "uuid": "0c428eee-bbd3-4795-95bd-02563379b019",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "807de749-79f9-4d24-8d84-61153562e535",
          "628726cf-ef54-47ab-a3f0-31c43a7239f7",
          "2e2f0f5f-53c0-4216-9545-d3c539598301",
          "24f30ca8-beb0-44fd-af4b-8e66229dc592",
          "1b9c729a-d691-4395-8b5e-19950a684616",
          "6eedb5ac-f451-498f-a643-2cd23e3b12db",
          "773d2729-44a5-4a1f-b4b2-26ea4462e11d",
          "f4e1da7e-cc23-4cc3-8798-51f0c26e9c29",
          "ac4263eb-5340-494c-8c4c-7ec9348c65d3",
          "90ecca87-aa3e-4c8a-b84e-90773c4c46ff",
          "0db0aefc-cd85-49c3-a2b4-cc22e9ec0816",
          "e8d427bc-8345-4ca4-8bf5-68d328e55f91",
          "45763d38-c883-41a2-9dfe-2108ff995cfc",
          "70d2da42-11b1-491b-adf6-92822a87e0f8",
          "2611c579-53e5-4c32-82a0-5ea68c683367",
          "4894d354-02a6-4412-8caa-88be95420453",
          "8d348207-accb-4b18-aa7a-458419960b9a",
          "31639c16-833e-4c7b-bd84-c73ab0668b0d",
          "dedb8017-e63d-4b45-90ac-dfb3a14cc829",
          "370603d8-b014-4188-8a04-c42ef98a0416",
          "b6a3ec26-969f-486f-a950-a59fce7c02f1",
          "37baeed1-6e5f-43c6-a2fd-6ef63c5fb4de",
          "ba7f59d0-f830-4145-8881-2f1df86ec8eb",
          "5fc83548-f2ae-48a6-a584-1e95e2a87135",
          "3045b13b-1bf3-4ee0-a840-6b9582b9abbb",
          "82511d2c-e51e-43bc-9ff2-024c7fb409e4",
          "58cbe1f9-5846-415f-b187-48aea6c7cae4",
          "12f42f6c-95d3-420c-a2b1-a193ee9a9bd2",
          "c16f4770-2f1d-47df-ab27-76eb281d40a3",
          "fdb11045-636f-41b3-88bc-7f0ba884f53e",
          "e26d0271-fa73-40ee-b338-d6240c1a951f",
          "20611b31-de9d-416f-a29f-75893a9a4b49",
          "972fc88b-b2a7-44eb-9b82-006ab76c3c0a",
          "fcdd2901-f13e-439c-a31f-4f764f8437d1",
          "8f00f45c-8295-479c-a5c8-d72b73c46e6b",
          "389fa2c1-77ee-42f9-ab8b-bc8c98f17e74",
          "b7533f01-b866-45a7-bbfc-125801fbab1e",
          "5566d44f-28ca-4019-ab05-e3d3e2c924b8",
          "fc9f5985-807e-47ca-8a89-cc1418c8a670",
          "5ce7a10d-dc7e-4eae-806e-86995f154e0c",
          "cc44c481-4848-451a-a547-ea0bf359f57a",
          "d42c6425-a6ba-4e83-9acd-c49111848642",
          "5c0dc08c-89b2-420e-878b-53bb7522477b",
          "0c428eee-bbd3-4795-95bd-02563379b019"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 12,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "ca4834aa-d5ff-46d2-a1a7-d789a78e3085",
        "title": "Testing base 58",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Decode valid string: 1AGNa15ZQXAZUgFiqJ2i7Z2DPU2J6hW62i",
            "fullTitle": "Testing base 58 Decode valid string: 1AGNa15ZQXAZUgFiqJ2i7Z2DPU2J6hW62i",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "f16bd6dc-43d7-48e5-9c50-079d19154055",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 0065a16059864a2fdbc7c99a4723a8395bc6f188eb",
            "fullTitle": "Testing base 58 Encode valid payload: 0065a16059864a2fdbc7c99a4723a8395bc6f188eb",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "35aed91c-8736-4193-afcf-c74f691bdf2a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 3CMNFxN1oHBc4R1EpboAL5yzHGgE611Xou",
            "fullTitle": "Testing base 58 Decode valid string: 3CMNFxN1oHBc4R1EpboAL5yzHGgE611Xou",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "3db6b287-ba7d-4d8b-b400-6ec8f1c95947",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 0574f209f6ea907e2ea48f74fae05782ae8a665257",
            "fullTitle": "Testing base 58 Encode valid payload: 0574f209f6ea907e2ea48f74fae05782ae8a665257",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "92a1a4dc-ed93-47d3-9c22-cd877e0d9834",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: mo9ncXisMeAoXwqcV5EWuyncbmCcQN4rVs",
            "fullTitle": "Testing base 58 Decode valid string: mo9ncXisMeAoXwqcV5EWuyncbmCcQN4rVs",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "cb9b00d5-2360-4686-8de5-07d02a142661",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6f53c0307d6851aa0ce7825ba883c6bd9ad242b486",
            "fullTitle": "Testing base 58 Encode valid payload: 6f53c0307d6851aa0ce7825ba883c6bd9ad242b486",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "9703f920-0a24-4331-86e5-0024d7c313ca",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2N2JD6wb56AfK4tfmM6PwdVmoYk2dCKf4Br",
            "fullTitle": "Testing base 58 Decode valid string: 2N2JD6wb56AfK4tfmM6PwdVmoYk2dCKf4Br",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "59bfa814-c8e2-40a5-8526-b2bd381fac70",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c46349a418fc4578d10a372b54b45c280cc8c4382f",
            "fullTitle": "Testing base 58 Encode valid payload: c46349a418fc4578d10a372b54b45c280cc8c4382f",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "21a702cd-d8b6-4726-a4d1-39c2673c1ab4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5Kd3NBUAdUnhyzenEwVLy9pBKxSwXvE9FMPyR4UKZvpe6E3AgLr",
            "fullTitle": "Testing base 58 Decode valid string: 5Kd3NBUAdUnhyzenEwVLy9pBKxSwXvE9FMPyR4UKZvpe6E3AgLr",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "cc632bfa-75ce-4e1e-86e9-723334c98fb6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80eddbdc1168f1daeadbd3e44c1e3f8f5a284c2029f78ad26af98583a499de5b19",
            "fullTitle": "Testing base 58 Encode valid payload: 80eddbdc1168f1daeadbd3e44c1e3f8f5a284c2029f78ad26af98583a499de5b19",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "49aba950-fd72-4fe5-9615-f29590833f29",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: Kz6UJmQACJmLtaQj5A3JAge4kVTNQ8gbvXuwbmCj7bsaabudb3RD",
            "fullTitle": "Testing base 58 Decode valid string: Kz6UJmQACJmLtaQj5A3JAge4kVTNQ8gbvXuwbmCj7bsaabudb3RD",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "f25258c1-fc9c-4c8e-8d04-8f0769012ed3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 8055c9bccb9ed68446d1b75273bbce89d7fe013a8acd1625514420fb2aca1a21c401",
            "fullTitle": "Testing base 58 Encode valid payload: 8055c9bccb9ed68446d1b75273bbce89d7fe013a8acd1625514420fb2aca1a21c401",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "667c9409-4c43-4d69-9614-010b04565f21",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 9213qJab2HNEpMpYNBa7wHGFKKbkDn24jpANDs2huN3yi4J11ko",
            "fullTitle": "Testing base 58 Decode valid string: 9213qJab2HNEpMpYNBa7wHGFKKbkDn24jpANDs2huN3yi4J11ko",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "d221b4a0-2301-45a2-ab2c-4b16e5c57769",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: ef36cb93b9ab1bdabf7fb9f2c04f1b9cc879933530ae7842398eef5a63a56800c2",
            "fullTitle": "Testing base 58 Encode valid payload: ef36cb93b9ab1bdabf7fb9f2c04f1b9cc879933530ae7842398eef5a63a56800c2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "76bbfc80-c819-4bff-8f1f-3ec2778d47c6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cTpB4YiyKiBcPxnefsDpbnDxFDffjqJob8wGCEDXxgQ7zQoMXJdH",
            "fullTitle": "Testing base 58 Decode valid string: cTpB4YiyKiBcPxnefsDpbnDxFDffjqJob8wGCEDXxgQ7zQoMXJdH",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "c5a19634-c81b-4d99-9078-18d80a6dcd2b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efb9f4892c9e8282028fea1d2667c4dc5213564d41fc5783896a0d843fc15089f301",
            "fullTitle": "Testing base 58 Encode valid payload: efb9f4892c9e8282028fea1d2667c4dc5213564d41fc5783896a0d843fc15089f301",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "3e7fb382-f963-46e1-a4a6-521b78d6bdd9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 1Ax4gZtb7gAit2TivwejZHYtNNLT18PUXJ",
            "fullTitle": "Testing base 58 Decode valid string: 1Ax4gZtb7gAit2TivwejZHYtNNLT18PUXJ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "24d03c84-3e28-4643-978e-d80e46e531a5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 006d23156cbbdcc82a5a47eee4c2c7c583c18b6bf4",
            "fullTitle": "Testing base 58 Encode valid payload: 006d23156cbbdcc82a5a47eee4c2c7c583c18b6bf4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "3539d47b-e4b3-467e-952e-8cab2f63beed",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 3QjYXhTkvuj8qPaXHTTWb5wjXhdsLAAWVy",
            "fullTitle": "Testing base 58 Decode valid string: 3QjYXhTkvuj8qPaXHTTWb5wjXhdsLAAWVy",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "a752c9ca-23af-4b4e-8e4f-c610583dda99",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 05fcc5460dd6e2487c7d75b1963625da0e8f4c5975",
            "fullTitle": "Testing base 58 Encode valid payload: 05fcc5460dd6e2487c7d75b1963625da0e8f4c5975",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "5f614ed5-b347-4abe-b211-414c0e46f424",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: n3ZddxzLvAY9o7184TB4c6FJasAybsw4HZ",
            "fullTitle": "Testing base 58 Decode valid string: n3ZddxzLvAY9o7184TB4c6FJasAybsw4HZ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "d4592eb5-471e-44c7-8302-1a9d30760226",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6ff1d470f9b02370fdec2e6b708b08ac431bf7a5f7",
            "fullTitle": "Testing base 58 Encode valid payload: 6ff1d470f9b02370fdec2e6b708b08ac431bf7a5f7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "117279b4-f6c8-4d89-a45d-a1258d6d6013",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2NBFNJTktNa7GZusGbDbGKRZTxdK9VVez3n",
            "fullTitle": "Testing base 58 Decode valid string: 2NBFNJTktNa7GZusGbDbGKRZTxdK9VVez3n",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "e54b3a5b-6d52-421e-9c30-6cb4098ccc71",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c4c579342c2c4c9220205e2cdc285617040c924a0a",
            "fullTitle": "Testing base 58 Encode valid payload: c4c579342c2c4c9220205e2cdc285617040c924a0a",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "b4fa9f4f-07b5-4c0c-ad1a-732792db67fb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5K494XZwps2bGyeL71pWid4noiSNA2cfCibrvRWqcHSptoFn7rc",
            "fullTitle": "Testing base 58 Decode valid string: 5K494XZwps2bGyeL71pWid4noiSNA2cfCibrvRWqcHSptoFn7rc",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "15450ea2-ff8a-42d1-8be1-62037dcdb0f8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80a326b95ebae30164217d7a7f57d72ab2b54e3be64928a19da0210b9568d4015e",
            "fullTitle": "Testing base 58 Encode valid payload: 80a326b95ebae30164217d7a7f57d72ab2b54e3be64928a19da0210b9568d4015e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "b4d2e8a9-fb83-4e93-a8e7-311143a78c11",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: L1RrrnXkcKut5DEMwtDthjwRcTTwED36thyL1DebVrKuwvohjMNi",
            "fullTitle": "Testing base 58 Decode valid string: L1RrrnXkcKut5DEMwtDthjwRcTTwED36thyL1DebVrKuwvohjMNi",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "ed81e8a5-ad47-4969-9106-0cbce562a76b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 807d998b45c219a1e38e99e7cbd312ef67f77a455a9b50c730c27f02c6f730dfb401",
            "fullTitle": "Testing base 58 Encode valid payload: 807d998b45c219a1e38e99e7cbd312ef67f77a455a9b50c730c27f02c6f730dfb401",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "09bd373d-db52-4d0d-ad01-bad17bd0e8ca",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 93DVKyFYwSN6wEo3E2fCrFPUp17FtrtNi2Lf7n4G3garFb16CRj",
            "fullTitle": "Testing base 58 Decode valid string: 93DVKyFYwSN6wEo3E2fCrFPUp17FtrtNi2Lf7n4G3garFb16CRj",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "13a8a28f-985f-4466-89fa-926e970794c8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efd6bca256b5abc5602ec2e1c121a08b0da2556587430bcf7e1898af2224885203",
            "fullTitle": "Testing base 58 Encode valid payload: efd6bca256b5abc5602ec2e1c121a08b0da2556587430bcf7e1898af2224885203",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "aa524501-560a-4e27-a82f-996cfec6f365",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cTDVKtMGVYWTHCb1AFjmVbEbWjvKpKqKgMaR3QJxToMSQAhmCeTN",
            "fullTitle": "Testing base 58 Decode valid string: cTDVKtMGVYWTHCb1AFjmVbEbWjvKpKqKgMaR3QJxToMSQAhmCeTN",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "0714fedc-458e-4e74-af8a-8b6878595d60",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efa81ca4e8f90181ec4b61b6a7eb998af17b2cb04de8a03b504b9e34c4c61db7d901",
            "fullTitle": "Testing base 58 Encode valid payload: efa81ca4e8f90181ec4b61b6a7eb998af17b2cb04de8a03b504b9e34c4c61db7d901",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "c46a51f8-a36d-4ffa-8d14-73f7a259cc9a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 1C5bSj1iEGUgSTbziymG7Cn18ENQuT36vv",
            "fullTitle": "Testing base 58 Decode valid string: 1C5bSj1iEGUgSTbziymG7Cn18ENQuT36vv",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "d2e999ec-a120-41dc-ac71-1e1e2823184d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 007987ccaa53d02c8873487ef919677cd3db7a6912",
            "fullTitle": "Testing base 58 Encode valid payload: 007987ccaa53d02c8873487ef919677cd3db7a6912",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "c229969b-18ed-4d54-9b42-e424bee5607d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 3AnNxabYGoTxYiTEZwFEnerUoeFXK2Zoks",
            "fullTitle": "Testing base 58 Decode valid string: 3AnNxabYGoTxYiTEZwFEnerUoeFXK2Zoks",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "b2011145-6fc3-410d-b5c9-a9d368a5a3ff",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 0563bcc565f9e68ee0189dd5cc67f1b0e5f02f45cb",
            "fullTitle": "Testing base 58 Encode valid payload: 0563bcc565f9e68ee0189dd5cc67f1b0e5f02f45cb",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "e901d840-4b75-435b-8f2e-9ceb80f94d63",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: n3LnJXCqbPjghuVs8ph9CYsAe4Sh4j97wk",
            "fullTitle": "Testing base 58 Decode valid string: n3LnJXCqbPjghuVs8ph9CYsAe4Sh4j97wk",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "68339af4-6747-4a8c-8ba9-74c7a8d376f0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6fef66444b5b17f14e8fae6e7e19b045a78c54fd79",
            "fullTitle": "Testing base 58 Encode valid payload: 6fef66444b5b17f14e8fae6e7e19b045a78c54fd79",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "3e2cdcea-f9f9-4d5e-8d61-421e0534a7ce",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2NB72XtkjpnATMggui83aEtPawyyKvnbX2o",
            "fullTitle": "Testing base 58 Decode valid string: 2NB72XtkjpnATMggui83aEtPawyyKvnbX2o",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "61f64ca0-7834-4c5b-aff4-07b66e789d99",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c4c3e55fceceaa4391ed2a9677f4a4d34eacd021a0",
            "fullTitle": "Testing base 58 Encode valid payload: c4c3e55fceceaa4391ed2a9677f4a4d34eacd021a0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "86e934b1-463e-47fe-9184-f7c38713b805",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5KaBW9vNtWNhc3ZEDyNCiXLPdVPHCikRxSBWwV9NrpLLa4LsXi9",
            "fullTitle": "Testing base 58 Decode valid string: 5KaBW9vNtWNhc3ZEDyNCiXLPdVPHCikRxSBWwV9NrpLLa4LsXi9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "58117d6f-2146-4bb4-8ea0-d7189b79077a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80e75d936d56377f432f404aabb406601f892fd49da90eb6ac558a733c93b47252",
            "fullTitle": "Testing base 58 Encode valid payload: 80e75d936d56377f432f404aabb406601f892fd49da90eb6ac558a733c93b47252",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "5c327b91-10af-4ec5-a5bd-ccf888a09371",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: L1axzbSyynNYA8mCAhzxkipKkfHtAXYF4YQnhSKcLV8YXA874fgT",
            "fullTitle": "Testing base 58 Decode valid string: L1axzbSyynNYA8mCAhzxkipKkfHtAXYF4YQnhSKcLV8YXA874fgT",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "a9397663-42fe-4a18-a572-7f64353f5ca7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 808248bd0375f2f75d7e274ae544fb920f51784480866b102384190b1addfbaa5c01",
            "fullTitle": "Testing base 58 Encode valid payload: 808248bd0375f2f75d7e274ae544fb920f51784480866b102384190b1addfbaa5c01",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "11398dfc-73c5-4b0f-aa8c-09b3bf70cb75",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 927CnUkUbasYtDwYwVn2j8GdTuACNnKkjZ1rpZd2yBB1CLcnXpo",
            "fullTitle": "Testing base 58 Decode valid string: 927CnUkUbasYtDwYwVn2j8GdTuACNnKkjZ1rpZd2yBB1CLcnXpo",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "7812ea6a-5465-40e4-bf64-4f383d919d27",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: ef44c4f6a096eac5238291a94cc24c01e3b19b8d8cef72874a079e00a242237a52",
            "fullTitle": "Testing base 58 Encode valid payload: ef44c4f6a096eac5238291a94cc24c01e3b19b8d8cef72874a079e00a242237a52",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "0193135d-de9f-4b44-b202-9f2ac5b10335",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cUcfCMRjiQf85YMzzQEk9d1s5A4K7xL5SmBCLrezqXFuTVefyhY7",
            "fullTitle": "Testing base 58 Decode valid string: cUcfCMRjiQf85YMzzQEk9d1s5A4K7xL5SmBCLrezqXFuTVefyhY7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "94913c8e-a882-4db1-b6c8-81328d5b810b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efd1de707020a9059d6d3abaf85e17967c6555151143db13dbb06db78df0f15c6901",
            "fullTitle": "Testing base 58 Encode valid payload: efd1de707020a9059d6d3abaf85e17967c6555151143db13dbb06db78df0f15c6901",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "7167dea0-18fd-4705-9d6b-1e711661d17b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 1Gqk4Tv79P91Cc1STQtU3s1W6277M2CVWu",
            "fullTitle": "Testing base 58 Decode valid string: 1Gqk4Tv79P91Cc1STQtU3s1W6277M2CVWu",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "3d5264bc-38ac-4ac5-8514-4ef877c97c66",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 00adc1cc2081a27206fae25792f28bbc55b831549d",
            "fullTitle": "Testing base 58 Encode valid payload: 00adc1cc2081a27206fae25792f28bbc55b831549d",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "4030ced9-bb95-4f15-8a30-86c9dd45e2a7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 33vt8ViH5jsr115AGkW6cEmEz9MpvJSwDk",
            "fullTitle": "Testing base 58 Decode valid string: 33vt8ViH5jsr115AGkW6cEmEz9MpvJSwDk",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "fd325ff9-df10-41a3-92cb-49af9126a048",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 05188f91a931947eddd7432d6e614387e32b244709",
            "fullTitle": "Testing base 58 Encode valid payload: 05188f91a931947eddd7432d6e614387e32b244709",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "e2f32997-12c0-4d48-8320-22aee509e4bc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: mhaMcBxNh5cqXm4aTQ6EcVbKtfL6LGyK2H",
            "fullTitle": "Testing base 58 Decode valid string: mhaMcBxNh5cqXm4aTQ6EcVbKtfL6LGyK2H",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "ab430b0f-8fc6-45d5-8f5b-1320c905ea3a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6f1694f5bc1a7295b600f40018a618a6ea48eeb498",
            "fullTitle": "Testing base 58 Encode valid payload: 6f1694f5bc1a7295b600f40018a618a6ea48eeb498",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "9e32ca14-3c1a-4290-8fb7-71ceb8184304",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2MxgPqX1iThW3oZVk9KoFcE5M4JpiETssVN",
            "fullTitle": "Testing base 58 Decode valid string: 2MxgPqX1iThW3oZVk9KoFcE5M4JpiETssVN",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "f479d663-d3eb-432f-82f8-48e269acf207",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c43b9b3fd7a50d4f08d1a5b0f62f644fa7115ae2f3",
            "fullTitle": "Testing base 58 Encode valid payload: c43b9b3fd7a50d4f08d1a5b0f62f644fa7115ae2f3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "e344ab1b-7bd6-4c0d-bfef-8a4bc279720c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5HtH6GdcwCJA4ggWEL1B3jzBBUB8HPiBi9SBc5h9i4Wk4PSeApR",
            "fullTitle": "Testing base 58 Decode valid string: 5HtH6GdcwCJA4ggWEL1B3jzBBUB8HPiBi9SBc5h9i4Wk4PSeApR",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "63022ed4-308f-40bf-8680-4d661910390b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80091035445ef105fa1bb125eccfb1882f3fe69592265956ade751fd095033d8d0",
            "fullTitle": "Testing base 58 Encode valid payload: 80091035445ef105fa1bb125eccfb1882f3fe69592265956ade751fd095033d8d0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "e21382e6-532c-4923-a4c7-5bc68ec0ac80",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: L2xSYmMeVo3Zek3ZTsv9xUrXVAmrWxJ8Ua4cw8pkfbQhcEFhkXT8",
            "fullTitle": "Testing base 58 Decode valid string: L2xSYmMeVo3Zek3ZTsv9xUrXVAmrWxJ8Ua4cw8pkfbQhcEFhkXT8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "89b37a38-58ec-411f-9e0c-cd7604dfb30f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80ab2b4bcdfc91d34dee0ae2a8c6b6668dadaeb3a88b9859743156f462325187af01",
            "fullTitle": "Testing base 58 Encode valid payload: 80ab2b4bcdfc91d34dee0ae2a8c6b6668dadaeb3a88b9859743156f462325187af01",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "95335240-725b-4ad7-96da-8501641fa8d3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 92xFEve1Z9N8Z641KQQS7ByCSb8kGjsDzw6fAmjHN1LZGKQXyMq",
            "fullTitle": "Testing base 58 Decode valid string: 92xFEve1Z9N8Z641KQQS7ByCSb8kGjsDzw6fAmjHN1LZGKQXyMq",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "75a1dd85-5c57-4f2e-b3d0-b6b34be8b35d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efb4204389cef18bbe2b353623cbf93e8678fbc92a475b664ae98ed594e6cf0856",
            "fullTitle": "Testing base 58 Encode valid payload: efb4204389cef18bbe2b353623cbf93e8678fbc92a475b664ae98ed594e6cf0856",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "083e37da-c267-4a29-a223-7895cefab85c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cVM65tdYu1YK37tNoAyGoJTR13VBYFva1vg9FLuPAsJijGvG6NEA",
            "fullTitle": "Testing base 58 Decode valid string: cVM65tdYu1YK37tNoAyGoJTR13VBYFva1vg9FLuPAsJijGvG6NEA",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "91544b44-e964-410a-a511-f40c9fcce2ed",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efe7b230133f1b5489843260236b06edca25f66adb1be455fbd38d4010d48faeef01",
            "fullTitle": "Testing base 58 Encode valid payload: efe7b230133f1b5489843260236b06edca25f66adb1be455fbd38d4010d48faeef01",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "d72a7e8d-1097-455c-b7d1-f91e82729087",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 1JwMWBVLtiqtscbaRHai4pqHokhFCbtoB4",
            "fullTitle": "Testing base 58 Decode valid string: 1JwMWBVLtiqtscbaRHai4pqHokhFCbtoB4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "121436e6-4966-4171-805c-2b2d363b6dd1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 00c4c1b72491ede1eedaca00618407ee0b772cad0d",
            "fullTitle": "Testing base 58 Encode valid payload: 00c4c1b72491ede1eedaca00618407ee0b772cad0d",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "7882f2d2-2698-4fc8-bb40-964a2ed95dd0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 3QCzvfL4ZRvmJFiWWBVwxfdaNBT8EtxB5y",
            "fullTitle": "Testing base 58 Decode valid string: 3QCzvfL4ZRvmJFiWWBVwxfdaNBT8EtxB5y",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "90bdc9e7-b364-49f6-9039-906da8934221",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 05f6fe69bcb548a829cce4c57bf6fff8af3a5981f9",
            "fullTitle": "Testing base 58 Encode valid payload: 05f6fe69bcb548a829cce4c57bf6fff8af3a5981f9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "d91c263b-b256-4540-a131-0f630db80836",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: mizXiucXRCsEriQCHUkCqef9ph9qtPbZZ6",
            "fullTitle": "Testing base 58 Decode valid string: mizXiucXRCsEriQCHUkCqef9ph9qtPbZZ6",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "000e2ea1-b93f-44c6-9382-de73f86e2367",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6f261f83568a098a8638844bd7aeca039d5f2352c0",
            "fullTitle": "Testing base 58 Encode valid payload: 6f261f83568a098a8638844bd7aeca039d5f2352c0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "ab54ab27-38a4-4319-8149-d0100ee8239c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2NEWDzHWwY5ZZp8CQWbB7ouNMLqCia6YRda",
            "fullTitle": "Testing base 58 Decode valid string: 2NEWDzHWwY5ZZp8CQWbB7ouNMLqCia6YRda",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "5507ca0f-7c73-4bb3-8974-a1c7f645ecb0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c4e930e1834a4d234702773951d627cce82fbb5d2e",
            "fullTitle": "Testing base 58 Encode valid payload: c4e930e1834a4d234702773951d627cce82fbb5d2e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "67653f62-c38a-4e6f-b17b-69a8e6ad39d2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5KQmDryMNDcisTzRp3zEq9e4awRmJrEVU1j5vFRTKpRNYPqYrMg",
            "fullTitle": "Testing base 58 Decode valid string: 5KQmDryMNDcisTzRp3zEq9e4awRmJrEVU1j5vFRTKpRNYPqYrMg",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "057b1588-883a-400a-80ea-8d7924e8c57d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80d1fab7ab7385ad26872237f1eb9789aa25cc986bacc695e07ac571d6cdac8bc0",
            "fullTitle": "Testing base 58 Encode valid payload: 80d1fab7ab7385ad26872237f1eb9789aa25cc986bacc695e07ac571d6cdac8bc0",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "692013e5-7380-4253-8c13-25e8e6f30d56",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: L39Fy7AC2Hhj95gh3Yb2AU5YHh1mQSAHgpNixvm27poizcJyLtUi",
            "fullTitle": "Testing base 58 Decode valid string: L39Fy7AC2Hhj95gh3Yb2AU5YHh1mQSAHgpNixvm27poizcJyLtUi",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "5a42b9a1-aa73-4471-b9f0-4cf594cd4ccd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80b0bbede33ef254e8376aceb1510253fc3550efd0fcf84dcd0c9998b288f166b301",
            "fullTitle": "Testing base 58 Encode valid payload: 80b0bbede33ef254e8376aceb1510253fc3550efd0fcf84dcd0c9998b288f166b301",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "c4c92c33-ac36-4d5a-bb9d-a65a77a923e6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 91cTVUcgydqyZLgaANpf1fvL55FH53QMm4BsnCADVNYuWuqdVys",
            "fullTitle": "Testing base 58 Decode valid string: 91cTVUcgydqyZLgaANpf1fvL55FH53QMm4BsnCADVNYuWuqdVys",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "1570c06e-60de-4012-8586-e3f0d1818a63",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: ef037f4192c630f399d9271e26c575269b1d15be553ea1a7217f0cb8513cef41cb",
            "fullTitle": "Testing base 58 Encode valid payload: ef037f4192c630f399d9271e26c575269b1d15be553ea1a7217f0cb8513cef41cb",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "65987b2a-2b93-41ec-8e5f-a8aee11a0d6c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cQspfSzsgLeiJGB2u8vrAiWpCU4MxUT6JseWo2SjXy4Qbzn2fwDw",
            "fullTitle": "Testing base 58 Decode valid string: cQspfSzsgLeiJGB2u8vrAiWpCU4MxUT6JseWo2SjXy4Qbzn2fwDw",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "54d06682-8686-4904-9570-d38e4919e6b2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: ef6251e205e8ad508bab5596bee086ef16cd4b239e0cc0c5d7c4e6035441e7d5de01",
            "fullTitle": "Testing base 58 Encode valid payload: ef6251e205e8ad508bab5596bee086ef16cd4b239e0cc0c5d7c4e6035441e7d5de01",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "af7c1b9a-e904-42b7-aeac-1339039e3635",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 19dcawoKcZdQz365WpXWMhX6QCUpR9SY4r",
            "fullTitle": "Testing base 58 Decode valid string: 19dcawoKcZdQz365WpXWMhX6QCUpR9SY4r",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "2f86a23c-b0ee-4f5c-a625-be1fef171187",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 005eadaf9bb7121f0f192561a5a62f5e5f54210292",
            "fullTitle": "Testing base 58 Encode valid payload: 005eadaf9bb7121f0f192561a5a62f5e5f54210292",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "6bd7c38a-f4dc-4702-84a2-611e85dc58a8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 37Sp6Rv3y4kVd1nQ1JV5pfqXccHNyZm1x3",
            "fullTitle": "Testing base 58 Decode valid string: 37Sp6Rv3y4kVd1nQ1JV5pfqXccHNyZm1x3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "50d3d27e-7903-41b7-9683-ed992ca41100",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 053f210e7277c899c3a155cc1c90f4106cbddeec6e",
            "fullTitle": "Testing base 58 Encode valid payload: 053f210e7277c899c3a155cc1c90f4106cbddeec6e",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "00ece1bb-4c8d-4700-97ff-4538ad3c3777",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: myoqcgYiehufrsnnkqdqbp69dddVDMopJu",
            "fullTitle": "Testing base 58 Decode valid string: myoqcgYiehufrsnnkqdqbp69dddVDMopJu",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "ef7a6f68-6849-498e-913e-d75348f6294e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 6fc8a3c2a09a298592c3e180f02487cd91ba3400b5",
            "fullTitle": "Testing base 58 Encode valid payload: 6fc8a3c2a09a298592c3e180f02487cd91ba3400b5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "21f4562d-a865-4e4b-96d5-6f160fc08e2e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 2N7FuwuUuoTBrDFdrAZ9KxBmtqMLxce9i1C",
            "fullTitle": "Testing base 58 Decode valid string: 2N7FuwuUuoTBrDFdrAZ9KxBmtqMLxce9i1C",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "6eef3239-f09e-4d97-9fad-099c880a684a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: c499b31df7c9068d1481b596578ddbb4d3bd90baeb",
            "fullTitle": "Testing base 58 Encode valid payload: c499b31df7c9068d1481b596578ddbb4d3bd90baeb",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "64ad2ff4-52ae-4f36-abcd-d0da2ed087b3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 5KL6zEaMtPRXZKo1bbMq7JDjjo1bJuQcsgL33je3oY8uSJCR5b4",
            "fullTitle": "Testing base 58 Decode valid string: 5KL6zEaMtPRXZKo1bbMq7JDjjo1bJuQcsgL33je3oY8uSJCR5b4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "8f7c5808-02e5-413b-98df-07acff2225b1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 80c7666842503db6dc6ea061f092cfb9c388448629a6fe868d068c42a488b478ae",
            "fullTitle": "Testing base 58 Encode valid payload: 80c7666842503db6dc6ea061f092cfb9c388448629a6fe868d068c42a488b478ae",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "5487f015-1d1e-4051-b72f-3b8ed045a2ea",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: KwV9KAfwbwt51veZWNscRTeZs9CKpojyu1MsPnaKTF5kz69H1UN2",
            "fullTitle": "Testing base 58 Decode valid string: KwV9KAfwbwt51veZWNscRTeZs9CKpojyu1MsPnaKTF5kz69H1UN2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "53bceed6-31c3-4ed0-bff6-1ad7acf15c80",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 8007f0803fc5399e773555ab1e8939907e9badacc17ca129e67a2f5f2ff84351dd01",
            "fullTitle": "Testing base 58 Encode valid payload: 8007f0803fc5399e773555ab1e8939907e9badacc17ca129e67a2f5f2ff84351dd01",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "0172dc81-945a-4a26-81b7-0b893a5248dd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 93N87D6uxSBzwXvpokpzg8FFmfQPmvX4xHoWQe3pLdYpbiwT5YV",
            "fullTitle": "Testing base 58 Decode valid string: 93N87D6uxSBzwXvpokpzg8FFmfQPmvX4xHoWQe3pLdYpbiwT5YV",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "9b10b14f-739e-4a15-8719-7c7db5b04906",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: efea577acfb5d1d14d3b7b195c321566f12f87d2b77ea3a53f68df7ebf8604a801",
            "fullTitle": "Testing base 58 Encode valid payload: efea577acfb5d1d14d3b7b195c321566f12f87d2b77ea3a53f68df7ebf8604a801",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "e4a5649f-03be-4d4b-8a51-e49bbb72f967",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: cMxXusSihaX58wpJ3tNuuUcZEQGt6DKJ1wEpxys88FFaQCYjku9h",
            "fullTitle": "Testing base 58 Decode valid string: cMxXusSihaX58wpJ3tNuuUcZEQGt6DKJ1wEpxys88FFaQCYjku9h",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "3a2e4245-88e5-48f2-b671-151ceca0af0a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: ef0b3b34f0958d8a268193a9814da92c3e8b58b4a4378a542863e34ac289cd830c01",
            "fullTitle": "Testing base 58 Encode valid payload: ef0b3b34f0958d8a268193a9814da92c3e8b58b4a4378a542863e34ac289cd830c01",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "932b06ed-66e1-4890-8aec-494b25b1b666",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 13p1ijLwsnrcuyqcTvJXkq2ASdXqcnEBLE",
            "fullTitle": "Testing base 58 Decode valid string: 13p1ijLwsnrcuyqcTvJXkq2ASdXqcnEBLE",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "b2dcaba0-1d71-4431-aa11-f823641f1b5a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 001ed467017f043e91ed4c44b4e8dd674db211c4e6",
            "fullTitle": "Testing base 58 Encode valid payload: 001ed467017f043e91ed4c44b4e8dd674db211c4e6",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "cbb652c1-3cd4-4709-8503-6c6e82f53584",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Decode valid string: 3ALJH9Y951VCGcVZYAdpA3KchoP9McEj1G",
            "fullTitle": "Testing base 58 Decode valid string: 3ALJH9Y951VCGcVZYAdpA3KchoP9McEj1G",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[127]++;const resultedPaylod=(cov_1y300ligpp.s[670]++,fixtureBase.decode(string));cov_1y300ligpp.s[671]++;chai.assert.equal(resultedPaylod,payload);",
            "err": {},
            "isRoot": false,
            "uuid": "52a7ee01-b03c-4298-927b-dcde7bf8b29a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Encode valid payload: 055ece0cadddc415b1980f001785947120acdb36fc",
            "fullTitle": "Testing base 58 Encode valid payload: 055ece0cadddc415b1980f001785947120acdb36fc",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[128]++;const resultedString=(cov_1y300ligpp.s[673]++,fixtureBase.encode(payload));cov_1y300ligpp.s[674]++;chai.assert.equal(resultedString,string);",
            "err": {},
            "isRoot": false,
            "uuid": "0fc7298b-b1ad-440c-8fc4-1fa0a50a2378",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test invalid string: Z9inZq4e2HGQRZQezDjFMmqgUE8NwMRok",
            "fullTitle": "Testing base 58 Test invalid string: Z9inZq4e2HGQRZQezDjFMmqgUE8NwMRok",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[130]++;cov_1y300ligpp.s[677]++;try{cov_1y300ligpp.s[678]++;fixtureBase.decode(string);}catch(e){cov_1y300ligpp.s[679]++;chai.assert.equal(e.message,exception);}",
            "err": {},
            "isRoot": false,
            "uuid": "a4d12907-7a88-43e8-961b-c74de8ac4867",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test invalid string: 3HK7MezAm6qEZQUMPRf8jX7wDv6zig6Ky8",
            "fullTitle": "Testing base 58 Test invalid string: 3HK7MezAm6qEZQUMPRf8jX7wDv6zig6Ky8",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[130]++;cov_1y300ligpp.s[677]++;try{cov_1y300ligpp.s[678]++;fixtureBase.decode(string);}catch(e){cov_1y300ligpp.s[679]++;chai.assert.equal(e.message,exception);}",
            "err": {},
            "isRoot": false,
            "uuid": "adbb1178-c545-4091-847d-1526b433eedb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test invalid string: 3AW8j12DUk8mgA7kkfZ1BrrzCVFuH1LsXS",
            "fullTitle": "Testing base 58 Test invalid string: 3AW8j12DUk8mgA7kkfZ1BrrzCVFuH1LsXS",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[130]++;cov_1y300ligpp.s[677]++;try{cov_1y300ligpp.s[678]++;fixtureBase.decode(string);}catch(e){cov_1y300ligpp.s[679]++;chai.assert.equal(e.message,exception);}",
            "err": {},
            "isRoot": false,
            "uuid": "f9983cd8-e047-42fd-8ab9-264942ad0430",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test invalid string: #####",
            "fullTitle": "Testing base 58 Test invalid string: #####",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[130]++;cov_1y300ligpp.s[677]++;try{cov_1y300ligpp.s[678]++;fixtureBase.decode(string);}catch(e){cov_1y300ligpp.s[679]++;chai.assert.equal(e.message,exception);}",
            "err": {},
            "isRoot": false,
            "uuid": "8c4bd42b-4523-4424-b69d-6e6e00a9cd53",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f16bd6dc-43d7-48e5-9c50-079d19154055",
          "35aed91c-8736-4193-afcf-c74f691bdf2a",
          "3db6b287-ba7d-4d8b-b400-6ec8f1c95947",
          "92a1a4dc-ed93-47d3-9c22-cd877e0d9834",
          "cb9b00d5-2360-4686-8de5-07d02a142661",
          "9703f920-0a24-4331-86e5-0024d7c313ca",
          "59bfa814-c8e2-40a5-8526-b2bd381fac70",
          "21a702cd-d8b6-4726-a4d1-39c2673c1ab4",
          "cc632bfa-75ce-4e1e-86e9-723334c98fb6",
          "49aba950-fd72-4fe5-9615-f29590833f29",
          "f25258c1-fc9c-4c8e-8d04-8f0769012ed3",
          "667c9409-4c43-4d69-9614-010b04565f21",
          "d221b4a0-2301-45a2-ab2c-4b16e5c57769",
          "76bbfc80-c819-4bff-8f1f-3ec2778d47c6",
          "c5a19634-c81b-4d99-9078-18d80a6dcd2b",
          "3e7fb382-f963-46e1-a4a6-521b78d6bdd9",
          "24d03c84-3e28-4643-978e-d80e46e531a5",
          "3539d47b-e4b3-467e-952e-8cab2f63beed",
          "a752c9ca-23af-4b4e-8e4f-c610583dda99",
          "5f614ed5-b347-4abe-b211-414c0e46f424",
          "d4592eb5-471e-44c7-8302-1a9d30760226",
          "117279b4-f6c8-4d89-a45d-a1258d6d6013",
          "e54b3a5b-6d52-421e-9c30-6cb4098ccc71",
          "b4fa9f4f-07b5-4c0c-ad1a-732792db67fb",
          "15450ea2-ff8a-42d1-8be1-62037dcdb0f8",
          "b4d2e8a9-fb83-4e93-a8e7-311143a78c11",
          "ed81e8a5-ad47-4969-9106-0cbce562a76b",
          "09bd373d-db52-4d0d-ad01-bad17bd0e8ca",
          "13a8a28f-985f-4466-89fa-926e970794c8",
          "aa524501-560a-4e27-a82f-996cfec6f365",
          "0714fedc-458e-4e74-af8a-8b6878595d60",
          "c46a51f8-a36d-4ffa-8d14-73f7a259cc9a",
          "d2e999ec-a120-41dc-ac71-1e1e2823184d",
          "c229969b-18ed-4d54-9b42-e424bee5607d",
          "b2011145-6fc3-410d-b5c9-a9d368a5a3ff",
          "e901d840-4b75-435b-8f2e-9ceb80f94d63",
          "68339af4-6747-4a8c-8ba9-74c7a8d376f0",
          "3e2cdcea-f9f9-4d5e-8d61-421e0534a7ce",
          "61f64ca0-7834-4c5b-aff4-07b66e789d99",
          "86e934b1-463e-47fe-9184-f7c38713b805",
          "58117d6f-2146-4bb4-8ea0-d7189b79077a",
          "5c327b91-10af-4ec5-a5bd-ccf888a09371",
          "a9397663-42fe-4a18-a572-7f64353f5ca7",
          "11398dfc-73c5-4b0f-aa8c-09b3bf70cb75",
          "7812ea6a-5465-40e4-bf64-4f383d919d27",
          "0193135d-de9f-4b44-b202-9f2ac5b10335",
          "94913c8e-a882-4db1-b6c8-81328d5b810b",
          "7167dea0-18fd-4705-9d6b-1e711661d17b",
          "3d5264bc-38ac-4ac5-8514-4ef877c97c66",
          "4030ced9-bb95-4f15-8a30-86c9dd45e2a7",
          "fd325ff9-df10-41a3-92cb-49af9126a048",
          "e2f32997-12c0-4d48-8320-22aee509e4bc",
          "ab430b0f-8fc6-45d5-8f5b-1320c905ea3a",
          "9e32ca14-3c1a-4290-8fb7-71ceb8184304",
          "f479d663-d3eb-432f-82f8-48e269acf207",
          "e344ab1b-7bd6-4c0d-bfef-8a4bc279720c",
          "63022ed4-308f-40bf-8680-4d661910390b",
          "e21382e6-532c-4923-a4c7-5bc68ec0ac80",
          "89b37a38-58ec-411f-9e0c-cd7604dfb30f",
          "95335240-725b-4ad7-96da-8501641fa8d3",
          "75a1dd85-5c57-4f2e-b3d0-b6b34be8b35d",
          "083e37da-c267-4a29-a223-7895cefab85c",
          "91544b44-e964-410a-a511-f40c9fcce2ed",
          "d72a7e8d-1097-455c-b7d1-f91e82729087",
          "121436e6-4966-4171-805c-2b2d363b6dd1",
          "7882f2d2-2698-4fc8-bb40-964a2ed95dd0",
          "90bdc9e7-b364-49f6-9039-906da8934221",
          "d91c263b-b256-4540-a131-0f630db80836",
          "000e2ea1-b93f-44c6-9382-de73f86e2367",
          "ab54ab27-38a4-4319-8149-d0100ee8239c",
          "5507ca0f-7c73-4bb3-8974-a1c7f645ecb0",
          "67653f62-c38a-4e6f-b17b-69a8e6ad39d2",
          "057b1588-883a-400a-80ea-8d7924e8c57d",
          "692013e5-7380-4253-8c13-25e8e6f30d56",
          "5a42b9a1-aa73-4471-b9f0-4cf594cd4ccd",
          "c4c92c33-ac36-4d5a-bb9d-a65a77a923e6",
          "1570c06e-60de-4012-8586-e3f0d1818a63",
          "65987b2a-2b93-41ec-8e5f-a8aee11a0d6c",
          "54d06682-8686-4904-9570-d38e4919e6b2",
          "af7c1b9a-e904-42b7-aeac-1339039e3635",
          "2f86a23c-b0ee-4f5c-a625-be1fef171187",
          "6bd7c38a-f4dc-4702-84a2-611e85dc58a8",
          "50d3d27e-7903-41b7-9683-ed992ca41100",
          "00ece1bb-4c8d-4700-97ff-4538ad3c3777",
          "ef7a6f68-6849-498e-913e-d75348f6294e",
          "21f4562d-a865-4e4b-96d5-6f160fc08e2e",
          "6eef3239-f09e-4d97-9fad-099c880a684a",
          "64ad2ff4-52ae-4f36-abcd-d0da2ed087b3",
          "8f7c5808-02e5-413b-98df-07acff2225b1",
          "5487f015-1d1e-4051-b72f-3b8ed045a2ea",
          "53bceed6-31c3-4ed0-bff6-1ad7acf15c80",
          "0172dc81-945a-4a26-81b7-0b893a5248dd",
          "9b10b14f-739e-4a15-8719-7c7db5b04906",
          "e4a5649f-03be-4d4b-8a51-e49bbb72f967",
          "3a2e4245-88e5-48f2-b671-151ceca0af0a",
          "932b06ed-66e1-4890-8aec-494b25b1b666",
          "b2dcaba0-1d71-4431-aa11-f823641f1b5a",
          "cbb652c1-3cd4-4709-8503-6c6e82f53584",
          "52a7ee01-b03c-4298-927b-dcde7bf8b29a",
          "0fc7298b-b1ad-440c-8fc4-1fa0a50a2378",
          "a4d12907-7a88-43e8-961b-c74de8ac4867",
          "adbb1178-c545-4091-847d-1526b433eedb",
          "f9983cd8-e047-42fd-8ab9-264942ad0430",
          "8c4bd42b-4523-4424-b69d-6e6e00a9cd53"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 7,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "1245b268-4453-495d-a8ff-16283c53665a",
        "title": "Testing Json Search",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Testing search with: [] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [] and no limit",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "66fdf8b4-09c8-4f89-9447-5a921016e537",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "2fa94057-bf98-4d33-8b17-dcc6d3f3196a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.lima\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$.lima\"] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "93e4d2a1-0272-42cc-a129-76c643157269",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"lima\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"lima\"] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "40b1cdc1-e8f6-43c6-b368-c111f60b6309",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\"] and no limit",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "ce3046ac-20a2-4dab-82b5-2382745fa6d8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\"] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\"] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "278593e0-1d86-4a96-8682-ac80834a9ae0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\"] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\"] and limit 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "1c333032-f109-4f10-be45-4aa3e05bf105",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\"] and limit 3",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\"] and limit 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "40ea714d-df4c-47a0-a80c-b1a89115c893",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\"] and limit 4",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\"] and limit 4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "71ec484d-fd39-47b7-9072-bd17e44a1ae8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\"] and limit 5",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\"] and limit 5",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "d1555d63-968d-4917-84f7-f787f33b8491",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\"] and limit 6",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\"] and limit 6",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "04c73eaa-4723-40d1-9350-8f508d041137",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\"] and limit 7",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\"] and limit 7",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "c928e7d5-c891-4162-aede-4743bfd76458",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..charlie\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..charlie\"] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "01b7e86a-3e95-4b09-a7f5-8bd6e113bbf2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..charlie\"] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..charlie\"] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "9624be63-efbc-457c-adbc-7cbe5cde623e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..charlie\"] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$..charlie\"] and limit 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "3cb92b4d-fb62-4cea-b839-f95b8626f671",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.charlie.delta\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$.charlie.delta\",1] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "66b14af3-2d24-46ee-b98b-ce2f17dd5467",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.charlie.delta\",1] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$.charlie.delta\",1] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "200ba73e-83ee-4c05-9587-30626172fdac",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"charlie.delta\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"charlie.delta\",1] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "41667e2b-5c37-4119-be82-162fb6b9a862",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"charlie.delta\",1] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"charlie.delta\",1] and limit 1",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "78ae2f7f-58a8-41e0-9720-c70d5f52aff9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"echo.golf.india.kilo\",4] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"echo.golf.india.kilo\",4] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "2e029a53-450d-45fc-a5b4-d29a4b9e9e8a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"echo.golf.india.kilo\",4] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"echo.golf.india.kilo\",4] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "8d90291a-3ee9-4aea-8604-1aae92e82910",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.lima\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$.lima\",1] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "a1705f6e-1edf-47e7-875c-68aa0aa1e777",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"lima\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"lima\",1] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "edd35dfa-ab13-464c-b374-82cf6ef4d462",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..alpha\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..alpha\",1] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "4444fc56-438f-487b-9d92-2e75ccd49bf6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..alpha\",1] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..alpha\",1] and limit 1",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "d341db3e-9f5b-4a72-9ee0-01b82baf99f7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..alpha\",1] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$..alpha\",1] and limit 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "c6720b88-ec41-443a-b155-1b962f9af7be",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..alpha\",2] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..alpha\",2] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "149251c9-635c-446d-a2b8-130f341be125",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..charlie\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..charlie\",1] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "322af666-e868-4e24-947e-43624d2cbd0b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..delta\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..delta\",1] and no limit",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "09e9a889-6a48-4119-ac73-baf937be98b8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..delta\",1] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..delta\",1] and limit 1",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "11c989e5-088a-42e5-ac40-e5483afcaa4a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..delta\",1] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$..delta\",1] and limit 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "860f9082-2942-4c59-8252-f01f9db3ba73",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..charlie.delta\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..charlie.delta\",1] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "e1c089f3-43b5-49a8-818f-fd8fce45776b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..charlie.delta\",1] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..charlie.delta\",1] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "eeb2aabc-e907-4ca5-8329-7b205e6f6a49",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..charlie.delta\",1] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$..charlie.delta\",1] and limit 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "4d9d908c-bbd0-44bd-9117-ce2a06b3b8ae",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..india.kilo\",5] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..india.kilo\",5] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "c70cbe7d-5c99-42ff-8eef-bbbf67dbe977",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..india.lima\",5] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..india.lima\",5] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "d1263290-e63a-4ce6-9347-47e6ee69cbfb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..echo.golf.india.kilo\",4] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..echo.golf.india.kilo\",4] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "4c9b72d7-bccb-4cb5-a76e-8d392bff99c7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..echo.golf.india.kilo\",4] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..echo.golf.india.kilo\",4] and limit 1",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "c6fd9918-7bab-41a4-a4af-d55d938f26a7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..echo.golf.india.kilo\",5] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..echo.golf.india.kilo\",5] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "e65d6dff-0f1e-42d4-a254-c348766b8e91",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..echo.golf.november\",8] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..echo.golf.november\",8] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "290c2aa3-241a-4821-a403-ff3cae2e1a97",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..echo.golf.november\",8] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..echo.golf.november\",8] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "055cc841-e590-48d7-a3dd-f37b59363128",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..india.kilo\",4] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..india.kilo\",4] and no limit",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "c0136d24-2ec0-431a-bdc5-323730f42fb4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..india.kilo\",4] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..india.kilo\",4] and limit 1",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "b8ddf16d-b5da-4cda-8c0c-10ccba812dcb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..india.kilo\",4] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$..india.kilo\",4] and limit 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "484aad1c-5c6e-4dbb-878d-0135a4ef2bf7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\",5] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\",5] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "ba972bc0-dfd4-4a9b-8254-053228ee46d8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\",5] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\",5] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "e522676a-9a2c-4e4b-b90e-5441d17c032b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\",5] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\",5] and limit 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "2c4b0762-d794-48c0-88d0-c81af70d10ac",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\",5] and limit 3",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\",5] and limit 3",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "83c8d25d-2ea0-468d-acc9-6618b8ca67e8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\",4] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\",4] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "ecf2d19d-04af-4623-afa1-0c7133964788",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\",4] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\",4] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "2ebbbad1-9682-4daf-b451-6f72903dab32",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\",4] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\",4] and limit 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "5d970923-a5c5-4f8f-a2e2-f36d26b7240c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..lima\",4] and limit 3",
            "fullTitle": "Testing Json Search Testing search with: [\"$..lima\",4] and limit 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "acd30115-3528-40dc-8c44-19d0091feb38",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..kilo\",4] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..kilo\",4] and no limit",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "197c0e51-7067-4e83-a0d9-deeffc0ac62e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..kilo\",4] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..kilo\",4] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "cd4a77b5-a8dd-4d49-a5fd-023a950b9dda",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..kilo\",4] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$..kilo\",4] and limit 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "93a3c5e2-d264-4933-bcdf-9ff7429c2eac",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..kilo\",4] and limit 3",
            "fullTitle": "Testing Json Search Testing search with: [\"$..kilo\",4] and limit 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "82c01f8c-050c-47eb-bc9e-26b6fbce6de5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..kilo\",4] and limit 4",
            "fullTitle": "Testing Json Search Testing search with: [\"$..kilo\",4] and limit 4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "54acb8d1-6fa5-4280-8fcf-0bb0648ad240",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..kilo\",4] and limit 5",
            "fullTitle": "Testing Json Search Testing search with: [\"$..kilo\",4] and limit 5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "f774a2ae-a9c5-4830-946b-f4eba504bdca",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..golf..delta\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..golf..delta\",1] and no limit",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "e0901aec-b3b1-4a6d-99d0-d4e7c45e115e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..golf..delta\",1] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..golf..delta\",1] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "3cc0398a-3c51-4256-a9f6-598d3f142155",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..mike..delta\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..mike..delta\",1] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "3d8ccc51-7f02-4483-88de-88374c049df4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..mike..delta\",1] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..mike..delta\",1] and limit 1",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "444c7e4c-2677-45bd-9452-0e2fe68d83a1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..echo.foxtrot\",2] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..echo.foxtrot\",2] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "f1820c46-9afc-4f1d-bb6a-db4b887624d1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..echo.foxtrot\",2] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..echo.foxtrot\",2] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "0845b16f-25ae-4aa9-b3e4-35a673beaa54",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..bravo\",0] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..bravo\",0] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "38f10bbe-0831-44c5-8137-6316530bae0f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..bravo\",1] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..bravo\",1] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "067c1b2f-4f3b-4f22-9906-644a4538ddfa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..bravo\",1] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..bravo\",1] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "be017f73-1809-4200-b2b3-1ba965117ca3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..bravo\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..bravo\"] and no limit",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "17bb85c5-b455-4520-83ff-c61cee8feba8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..bravo\"] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..bravo\"] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "207ae227-3a78-4aae-ade5-86f0e43429c5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"bravo\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"bravo\"] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "8d063223-e93e-4a69-8896-f070f6e452f1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"bravo\"] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"bravo\"] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "f6f42350-7fa2-421f-976f-eba8cf482ad1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.bravo\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$.bravo\"] and no limit",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "a46cdf22-3d35-4f4b-b033-7b63d50aa27d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.bravo\"] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$.bravo\"] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "dea09d6f-cf61-471d-9afd-01f2494f11b3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.echo.foxtrot\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$.echo.foxtrot\"] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "5fc234c1-3629-4da7-b24e-3b1a7a238702",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.echo.foxtrot\"] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$.echo.foxtrot\"] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "9c22642f-72cb-46a9-bae8-8e62bed14162",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..mike\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$..mike\"] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "f17ab487-2696-44a3-8328-099300083d51",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$..mike\"] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$..mike\"] and limit 1",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "cc339264-6420-4566-9923-9c2718fb7e37",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.echo.golf.*\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$.echo.golf.*\"] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "61172df3-b13f-4aa6-8781-c889cbba9454",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.echo.golf.*\"] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$.echo.golf.*\"] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "ac3aaa65-edc6-44a9-a3e6-c93ba2f98e9d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.echo.golf.*\"] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$.echo.golf.*\"] and limit 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "05216905-bcd2-4961-8e50-a84c60f5aeb5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.echo.golf.*\"] and limit 3",
            "fullTitle": "Testing Json Search Testing search with: [\"$.echo.golf.*\"] and limit 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "b15cf1c6-7f52-4ff6-b492-38e20379969e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.echo.golf.*\"] and limit 4",
            "fullTitle": "Testing Json Search Testing search with: [\"$.echo.golf.*\"] and limit 4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "91dfd2a7-0478-42bb-9b93-94704c585582",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.*\"] and no limit",
            "fullTitle": "Testing Json Search Testing search with: [\"$.*\"] and no limit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[136]++;const searchParams=(cov_1y300ligpp.s[721]++,{path:test[0],value:test[1]});const results=(cov_1y300ligpp.s[722]++,search(searchParams,jsonObj));cov_1y300ligpp.s[723]++;chai.assert.deepEqual(results,expected);",
            "err": {},
            "isRoot": false,
            "uuid": "d65cebe8-0809-4cb7-897b-bb236bfbedf8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.*\"] and limit 1",
            "fullTitle": "Testing Json Search Testing search with: [\"$.*\"] and limit 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "1d96aab2-0de9-4255-8b66-ea9a42e6006a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.*\"] and limit 2",
            "fullTitle": "Testing Json Search Testing search with: [\"$.*\"] and limit 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "760490a8-e780-4b49-a1ec-cd89b060ba72",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.*\"] and limit 3",
            "fullTitle": "Testing Json Search Testing search with: [\"$.*\"] and limit 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "56b8e858-a1ae-4d0e-982c-36086b9d714f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.*\"] and limit 4",
            "fullTitle": "Testing Json Search Testing search with: [\"$.*\"] and limit 4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "e0dcecc5-6123-465d-a7a1-240e94d98603",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.*\"] and limit 5",
            "fullTitle": "Testing Json Search Testing search with: [\"$.*\"] and limit 5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "8082e8d1-3c97-401b-afe3-8f32f2410014",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing search with: [\"$.*\"] and limit 6",
            "fullTitle": "Testing Json Search Testing search with: [\"$.*\"] and limit 6",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[137]++;const searchParams=(cov_1y300ligpp.s[726]++,{path:test[0],value:test[1],limit:i});const results=(cov_1y300ligpp.s[727]++,search(searchParams,jsonObj));cov_1y300ligpp.s[728]++;chai.assert.deepEqual(results,expected.slice(0,i));",
            "err": {},
            "isRoot": false,
            "uuid": "79e0dca8-4f21-401e-80a1-f8e0bcfb9428",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "66fdf8b4-09c8-4f89-9447-5a921016e537",
          "2fa94057-bf98-4d33-8b17-dcc6d3f3196a",
          "93e4d2a1-0272-42cc-a129-76c643157269",
          "40b1cdc1-e8f6-43c6-b368-c111f60b6309",
          "ce3046ac-20a2-4dab-82b5-2382745fa6d8",
          "278593e0-1d86-4a96-8682-ac80834a9ae0",
          "1c333032-f109-4f10-be45-4aa3e05bf105",
          "40ea714d-df4c-47a0-a80c-b1a89115c893",
          "71ec484d-fd39-47b7-9072-bd17e44a1ae8",
          "d1555d63-968d-4917-84f7-f787f33b8491",
          "04c73eaa-4723-40d1-9350-8f508d041137",
          "c928e7d5-c891-4162-aede-4743bfd76458",
          "01b7e86a-3e95-4b09-a7f5-8bd6e113bbf2",
          "9624be63-efbc-457c-adbc-7cbe5cde623e",
          "3cb92b4d-fb62-4cea-b839-f95b8626f671",
          "66b14af3-2d24-46ee-b98b-ce2f17dd5467",
          "200ba73e-83ee-4c05-9587-30626172fdac",
          "41667e2b-5c37-4119-be82-162fb6b9a862",
          "78ae2f7f-58a8-41e0-9720-c70d5f52aff9",
          "2e029a53-450d-45fc-a5b4-d29a4b9e9e8a",
          "8d90291a-3ee9-4aea-8604-1aae92e82910",
          "a1705f6e-1edf-47e7-875c-68aa0aa1e777",
          "edd35dfa-ab13-464c-b374-82cf6ef4d462",
          "4444fc56-438f-487b-9d92-2e75ccd49bf6",
          "d341db3e-9f5b-4a72-9ee0-01b82baf99f7",
          "c6720b88-ec41-443a-b155-1b962f9af7be",
          "149251c9-635c-446d-a2b8-130f341be125",
          "322af666-e868-4e24-947e-43624d2cbd0b",
          "09e9a889-6a48-4119-ac73-baf937be98b8",
          "11c989e5-088a-42e5-ac40-e5483afcaa4a",
          "860f9082-2942-4c59-8252-f01f9db3ba73",
          "e1c089f3-43b5-49a8-818f-fd8fce45776b",
          "eeb2aabc-e907-4ca5-8329-7b205e6f6a49",
          "4d9d908c-bbd0-44bd-9117-ce2a06b3b8ae",
          "c70cbe7d-5c99-42ff-8eef-bbbf67dbe977",
          "d1263290-e63a-4ce6-9347-47e6ee69cbfb",
          "4c9b72d7-bccb-4cb5-a76e-8d392bff99c7",
          "c6fd9918-7bab-41a4-a4af-d55d938f26a7",
          "e65d6dff-0f1e-42d4-a254-c348766b8e91",
          "290c2aa3-241a-4821-a403-ff3cae2e1a97",
          "055cc841-e590-48d7-a3dd-f37b59363128",
          "c0136d24-2ec0-431a-bdc5-323730f42fb4",
          "b8ddf16d-b5da-4cda-8c0c-10ccba812dcb",
          "484aad1c-5c6e-4dbb-878d-0135a4ef2bf7",
          "ba972bc0-dfd4-4a9b-8254-053228ee46d8",
          "e522676a-9a2c-4e4b-b90e-5441d17c032b",
          "2c4b0762-d794-48c0-88d0-c81af70d10ac",
          "83c8d25d-2ea0-468d-acc9-6618b8ca67e8",
          "ecf2d19d-04af-4623-afa1-0c7133964788",
          "2ebbbad1-9682-4daf-b451-6f72903dab32",
          "5d970923-a5c5-4f8f-a2e2-f36d26b7240c",
          "acd30115-3528-40dc-8c44-19d0091feb38",
          "197c0e51-7067-4e83-a0d9-deeffc0ac62e",
          "cd4a77b5-a8dd-4d49-a5fd-023a950b9dda",
          "93a3c5e2-d264-4933-bcdf-9ff7429c2eac",
          "82c01f8c-050c-47eb-bc9e-26b6fbce6de5",
          "54acb8d1-6fa5-4280-8fcf-0bb0648ad240",
          "f774a2ae-a9c5-4830-946b-f4eba504bdca",
          "e0901aec-b3b1-4a6d-99d0-d4e7c45e115e",
          "3cc0398a-3c51-4256-a9f6-598d3f142155",
          "3d8ccc51-7f02-4483-88de-88374c049df4",
          "444c7e4c-2677-45bd-9452-0e2fe68d83a1",
          "f1820c46-9afc-4f1d-bb6a-db4b887624d1",
          "0845b16f-25ae-4aa9-b3e4-35a673beaa54",
          "38f10bbe-0831-44c5-8137-6316530bae0f",
          "067c1b2f-4f3b-4f22-9906-644a4538ddfa",
          "be017f73-1809-4200-b2b3-1ba965117ca3",
          "17bb85c5-b455-4520-83ff-c61cee8feba8",
          "207ae227-3a78-4aae-ade5-86f0e43429c5",
          "8d063223-e93e-4a69-8896-f070f6e452f1",
          "f6f42350-7fa2-421f-976f-eba8cf482ad1",
          "a46cdf22-3d35-4f4b-b033-7b63d50aa27d",
          "dea09d6f-cf61-471d-9afd-01f2494f11b3",
          "5fc234c1-3629-4da7-b24e-3b1a7a238702",
          "9c22642f-72cb-46a9-bae8-8e62bed14162",
          "f17ab487-2696-44a3-8328-099300083d51",
          "cc339264-6420-4566-9923-9c2718fb7e37",
          "61172df3-b13f-4aa6-8781-c889cbba9454",
          "ac3aaa65-edc6-44a9-a3e6-c93ba2f98e9d",
          "05216905-bcd2-4961-8e50-a84c60f5aeb5",
          "b15cf1c6-7f52-4ff6-b492-38e20379969e",
          "91dfd2a7-0478-42bb-9b93-94704c585582",
          "d65cebe8-0809-4cb7-897b-bb236bfbedf8",
          "1d96aab2-0de9-4255-8b66-ea9a42e6006a",
          "760490a8-e780-4b49-a1ec-cd89b060ba72",
          "56b8e858-a1ae-4d0e-982c-36086b9d714f",
          "e0dcecc5-6123-465d-a7a1-240e94d98603",
          "8082e8d1-3c97-401b-afe3-8f32f2410014",
          "79e0dca8-4f21-401e-80a1-f8e0bcfb9428"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 19,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "81500d1b-0161-474b-8469-c17e01733f37",
        "title": "Testing persister for scenario 1 with delay of 50ms",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Test using cache as a function",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms \"before all\" hook: Test using cache as a function",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[149]++;cov_1y300ligpp.s[805]++;cbs.stop=false;cov_1y300ligpp.s[806]++;await persistedCache({});cov_1y300ligpp.s[807]++;await persistedCache(cache);",
            "err": {},
            "isRoot": false,
            "uuid": "9f6411ee-a393-40b7-b3b5-00f32c508816",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Stop the caceh using cache as a function",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms \"after all\" hook: Stop the caceh using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[153]++;cov_1y300ligpp.s[825]++;cbs.stop=true;cov_1y300ligpp.s[826]++;await persistedCache('stop');",
            "err": {},
            "isRoot": false,
            "uuid": "6649eb81-b888-4828-9eac-d4369507a38e",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Set 'a' to 5, after 50 milliseconds",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms Set 'a' to 5, after 50 milliseconds",
            "timedOut": false,
            "duration": 51,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "ec6ad981-e922-4353-a946-723da5e23356",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 4, after 100 milliseconds",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms Set 'b' to 4, after 100 milliseconds",
            "timedOut": false,
            "duration": 55,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "4bb112da-8fd7-4421-9ebd-6134a660cc2e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 3, after 150 milliseconds",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms Set 'c' to 3, after 150 milliseconds",
            "timedOut": false,
            "duration": 50,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "6e651c01-335b-42e1-8ce6-872d02429ec2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'd' to 2, after 200 milliseconds",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms Set 'd' to 2, after 200 milliseconds",
            "timedOut": false,
            "duration": 50,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "e5c39951-0cf9-4891-87f5-bf6c4ae412a6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'e' to 1, after 250 milliseconds",
            "fullTitle": "Testing persister for scenario 1 with delay of 50ms Set 'e' to 1, after 250 milliseconds",
            "timedOut": false,
            "duration": 52,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "74d5b33d-c5d3-4c6f-9350-1c4d57febe1d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ec6ad981-e922-4353-a946-723da5e23356",
          "4bb112da-8fd7-4421-9ebd-6134a660cc2e",
          "6e651c01-335b-42e1-8ce6-872d02429ec2",
          "e5c39951-0cf9-4891-87f5-bf6c4ae412a6",
          "74d5b33d-c5d3-4c6f-9350-1c4d57febe1d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 258,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      },
      {
        "uuid": "1039629f-98a5-48d7-8914-9e31bbe847d4",
        "title": "Testing persister for scenario 2 with delay of 50ms",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Test using cache as a function",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms \"before all\" hook: Test using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[149]++;cov_1y300ligpp.s[805]++;cbs.stop=false;cov_1y300ligpp.s[806]++;await persistedCache({});cov_1y300ligpp.s[807]++;await persistedCache(cache);",
            "err": {},
            "isRoot": false,
            "uuid": "1ed39f99-f7b5-40fd-9bfe-36ff49fff564",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Stop the caceh using cache as a function",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms \"after all\" hook: Stop the caceh using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[153]++;cov_1y300ligpp.s[825]++;cbs.stop=true;cov_1y300ligpp.s[826]++;await persistedCache('stop');",
            "err": {},
            "isRoot": false,
            "uuid": "b66a9162-49ba-48af-a061-bbe1756ec78e",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Set 'a' to 1, after 50 milliseconds",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms Set 'a' to 1, after 50 milliseconds",
            "timedOut": false,
            "duration": 53,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "23ad5520-8498-427b-9f41-4980f4799ba4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 1, after 100 milliseconds",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms Set 'b' to 1, after 100 milliseconds",
            "timedOut": false,
            "duration": 52,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "bfc162ae-b99f-4c4f-b1e7-2f1adc8d036b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 1, after 150 milliseconds",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms Set 'a' to 1, after 150 milliseconds",
            "timedOut": false,
            "duration": 55,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "7f4ee5ad-1a66-4343-903f-141187d511ea",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 2, after 200 milliseconds",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms Set 'b' to 2, after 200 milliseconds",
            "timedOut": false,
            "duration": 55,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "5c7c2170-9305-45c3-a907-44821d476c16",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 3, after 250 milliseconds",
            "fullTitle": "Testing persister for scenario 2 with delay of 50ms Set 'c' to 3, after 250 milliseconds",
            "timedOut": false,
            "duration": 51,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "63dccef4-cab2-4700-a1e8-d563aecfc807",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "23ad5520-8498-427b-9f41-4980f4799ba4",
          "bfc162ae-b99f-4c4f-b1e7-2f1adc8d036b",
          "7f4ee5ad-1a66-4343-903f-141187d511ea",
          "5c7c2170-9305-45c3-a907-44821d476c16",
          "63dccef4-cab2-4700-a1e8-d563aecfc807"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 266,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      },
      {
        "uuid": "b2cca1fc-07c9-4339-be6b-9b291296430a",
        "title": "Testing persister for scenario 3 with delay of 100ms",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Test using cache as a function",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms \"before all\" hook: Test using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[149]++;cov_1y300ligpp.s[805]++;cbs.stop=false;cov_1y300ligpp.s[806]++;await persistedCache({});cov_1y300ligpp.s[807]++;await persistedCache(cache);",
            "err": {},
            "isRoot": false,
            "uuid": "bad80b77-d8c4-4615-8652-e7a6e14776d5",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Stop the caceh using cache as a function",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms \"after all\" hook: Stop the caceh using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[153]++;cov_1y300ligpp.s[825]++;cbs.stop=true;cov_1y300ligpp.s[826]++;await persistedCache('stop');",
            "err": {},
            "isRoot": false,
            "uuid": "9c1ba5ec-e947-4ab5-86c0-ea8574a6dc1f",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Set 'a' to 10000, after 6 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 10000, after 6 milliseconds",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "5e018da8-748f-4c41-bc9a-bae6e06f3ff2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 1000, after 12 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 1000, after 12 milliseconds",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "0887bc7b-ec4e-4e84-88dc-dc7625af4483",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 100, after 18 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 100, after 18 milliseconds",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "cdb0f309-2ed0-4e81-8f52-d97d7b5fec1d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 10, after 24 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 10, after 24 milliseconds",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "90e1e0da-3dc1-4bc7-9156-cbeb718eeead",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 1, after 30 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 1, after 30 milliseconds",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "6ce238df-c96a-4332-9649-9a7e94434c3f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 2, after 40 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'b' to 2, after 40 milliseconds",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "11742145-4a18-4747-a6d4-c4021c4f56b1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 3, after 60 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'c' to 3, after 60 milliseconds",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "81086ec4-4681-4c21-960b-6865c0888932",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'd' to 4, after 80 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'd' to 4, after 80 milliseconds",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "2a812296-6e0d-478d-a5aa-84034492b1e6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 10, after 110 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 10, after 110 milliseconds",
            "timedOut": false,
            "duration": 34,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "f07b5a9d-a289-483c-b18f-b6b234b50dbc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'e' to 5, after 120 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'e' to 5, after 120 milliseconds",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "cc2218d4-6f12-401a-84bd-e00e377f66bc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'z.a' to 200, after 150 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'z.a' to 200, after 150 milliseconds",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "257671ce-9de5-47ec-a29c-e2d29ec15d7c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'f' to 6, after 170 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'f' to 6, after 170 milliseconds",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "01c96a6a-c266-451b-a5d4-d627969bf284",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'f' to 6, after 300 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'f' to 6, after 300 milliseconds",
            "timedOut": false,
            "duration": 133,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "0a302e92-ae18-4bb4-aad8-52fa185e3a07",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 2, after 360 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'b' to 2, after 360 milliseconds",
            "timedOut": false,
            "duration": 65,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "105803f2-f8a3-47ca-84d6-865379527097",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'f' to 6, after 380 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'f' to 6, after 380 milliseconds",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "a41762e8-503b-41db-bd10-5fca691a46fe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'f' to 6, after 420 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'f' to 6, after 420 milliseconds",
            "timedOut": false,
            "duration": 45,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "6c0e8542-ebe6-427b-8a08-489aa2c4c768",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 't' to 7, after 540 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 't' to 7, after 540 milliseconds",
            "timedOut": false,
            "duration": 121,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "5a653ea8-13b9-4ecd-8d76-ce30a85b8c25",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'z.a' to 200, after 560 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'z.a' to 200, after 560 milliseconds",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "04ac972c-1beb-4f22-8705-750e9e756cc2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'z.a' to 1000, after 640 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'z.a' to 1000, after 640 milliseconds",
            "timedOut": false,
            "duration": 85,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "3a84a8d9-fafc-4498-8e0e-ff60df4b2ec8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 3, after 680 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'c' to 3, after 680 milliseconds",
            "timedOut": false,
            "duration": 41,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "db143135-10e4-495b-988e-dc57d0592e52",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'z.a' to 1000, after 720 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'z.a' to 1000, after 720 milliseconds",
            "timedOut": false,
            "duration": 44,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "9f7624d2-b880-4239-ac1f-184a02973df9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'a' to 1000, after 780 milliseconds",
            "fullTitle": "Testing persister for scenario 3 with delay of 100ms Set 'a' to 1000, after 780 milliseconds",
            "timedOut": false,
            "duration": 62,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "014b693c-5e4e-4b58-bffd-03c2c7dd3e3d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5e018da8-748f-4c41-bc9a-bae6e06f3ff2",
          "0887bc7b-ec4e-4e84-88dc-dc7625af4483",
          "cdb0f309-2ed0-4e81-8f52-d97d7b5fec1d",
          "90e1e0da-3dc1-4bc7-9156-cbeb718eeead",
          "6ce238df-c96a-4332-9649-9a7e94434c3f",
          "11742145-4a18-4747-a6d4-c4021c4f56b1",
          "81086ec4-4681-4c21-960b-6865c0888932",
          "2a812296-6e0d-478d-a5aa-84034492b1e6",
          "f07b5a9d-a289-483c-b18f-b6b234b50dbc",
          "cc2218d4-6f12-401a-84bd-e00e377f66bc",
          "257671ce-9de5-47ec-a29c-e2d29ec15d7c",
          "01c96a6a-c266-451b-a5d4-d627969bf284",
          "0a302e92-ae18-4bb4-aad8-52fa185e3a07",
          "105803f2-f8a3-47ca-84d6-865379527097",
          "a41762e8-503b-41db-bd10-5fca691a46fe",
          "6c0e8542-ebe6-427b-8a08-489aa2c4c768",
          "5a653ea8-13b9-4ecd-8d76-ce30a85b8c25",
          "04ac972c-1beb-4f22-8705-750e9e756cc2",
          "3a84a8d9-fafc-4498-8e0e-ff60df4b2ec8",
          "db143135-10e4-495b-988e-dc57d0592e52",
          "9f7624d2-b880-4239-ac1f-184a02973df9",
          "014b693c-5e4e-4b58-bffd-03c2c7dd3e3d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 836,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      },
      {
        "uuid": "3b950646-3511-4825-aa44-c21785c03b70",
        "title": "Testing persister for scenario 4 with delay of 50ms",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Test using cache as a function",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms \"before all\" hook: Test using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[149]++;cov_1y300ligpp.s[805]++;cbs.stop=false;cov_1y300ligpp.s[806]++;await persistedCache({});cov_1y300ligpp.s[807]++;await persistedCache(cache);",
            "err": {},
            "isRoot": false,
            "uuid": "7579a652-6532-4cdb-8db3-f6df36e37807",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Stop the caceh using cache as a function",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms \"after all\" hook: Stop the caceh using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[153]++;cov_1y300ligpp.s[825]++;cbs.stop=true;cov_1y300ligpp.s[826]++;await persistedCache('stop');",
            "err": {},
            "isRoot": false,
            "uuid": "e4d83f0e-7bd7-43ae-95cf-99dfe909e752",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Set 'a' to 10, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms Set 'a' to 10, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "c92f8210-2ebc-466c-a3a1-651ad45c4de2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 20, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms Set 'b' to 20, after 0 milliseconds",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "f2604dae-7bf8-47be-90c9-def4b76567b3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 30, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms Set 'c' to 30, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "0aecda7f-375b-458e-b471-6094ebda4150",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'd' to 40, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms Set 'd' to 40, after 0 milliseconds",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "3ee5b540-a5cc-4f19-a4fe-95ad2203a578",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'e' to 50, after 100 milliseconds",
            "fullTitle": "Testing persister for scenario 4 with delay of 50ms Set 'e' to 50, after 100 milliseconds",
            "timedOut": false,
            "duration": 101,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "8979abbe-d4fd-4af8-87f9-b6196186e2c9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c92f8210-2ebc-466c-a3a1-651ad45c4de2",
          "f2604dae-7bf8-47be-90c9-def4b76567b3",
          "0aecda7f-375b-458e-b471-6094ebda4150",
          "3ee5b540-a5cc-4f19-a4fe-95ad2203a578",
          "8979abbe-d4fd-4af8-87f9-b6196186e2c9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 107,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      },
      {
        "uuid": "0b7f5902-f3b9-4f65-8471-9df3d1556aef",
        "title": "Testing persister for scenario 5 with delay of 100ms",
        "fullFile": "/Users/thehobbit85/Developer/Airbitz/edge-currency-bitcoin/packages/nidavellir/build/tests.cjs.js",
        "file": "/build/tests.cjs.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Test using cache as a function",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms \"before all\" hook: Test using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[149]++;cov_1y300ligpp.s[805]++;cbs.stop=false;cov_1y300ligpp.s[806]++;await persistedCache({});cov_1y300ligpp.s[807]++;await persistedCache(cache);",
            "err": {},
            "isRoot": false,
            "uuid": "b5679f9b-dda9-404b-b9a0-3635edee8c99",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Stop the caceh using cache as a function",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms \"after all\" hook: Stop the caceh using cache as a function",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[153]++;cov_1y300ligpp.s[825]++;cbs.stop=true;cov_1y300ligpp.s[826]++;await persistedCache('stop');",
            "err": {},
            "isRoot": false,
            "uuid": "e80be447-0be9-4a04-b66f-59bbd4b16fea",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Set 'a' to 10, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms Set 'a' to 10, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "ab7d3852-2f1f-4148-ada0-b2e3d035a50d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'b' to 20, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms Set 'b' to 20, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "fdd9a7c6-d607-4f26-91a0-84da44e87f9b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'c' to 30, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms Set 'c' to 30, after 0 milliseconds",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "3e4322ef-557d-4814-87c4-a2840be7c293",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'd' to 40, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms Set 'd' to 40, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "63156100-3bf9-419d-bfcc-688a94804a59",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Set 'e' to 50, after 0 milliseconds",
            "fullTitle": "Testing persister for scenario 5 with delay of 100ms Set 'e' to 50, after 0 milliseconds",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cov_1y300ligpp.f[151]++;let child=(cov_1y300ligpp.s[810]++,persistedCache);let expectedChild=(cov_1y300ligpp.s[811]++,expected);cov_1y300ligpp.s[812]++;param=param.split('.');cov_1y300ligpp.s[813]++;while(param.length>1){const key=(cov_1y300ligpp.s[814]++,param.shift());cov_1y300ligpp.s[815]++;child=child[key];cov_1y300ligpp.s[816]++;expectedChild=expectedChild[key];}const key=(cov_1y300ligpp.s[817]++,param[0]);const interval=(cov_1y300ligpp.s[818]++,!i?(cov_1y300ligpp.b[152][0]++,saveTime):(cov_1y300ligpp.b[152][1]++,saveTime-sets[i-1][2]));cov_1y300ligpp.s[819]++;setTimeout(()=>{cov_1y300ligpp.f[152]++;cov_1y300ligpp.s[820]++;expectedChild[key]=value;cov_1y300ligpp.s[821]++;child[key]=value;cov_1y300ligpp.s[822]++;chai.assert.equal(expectedChild[key],child[key]);cov_1y300ligpp.s[823]++;done(cbs.e);},interval);",
            "err": {},
            "isRoot": false,
            "uuid": "c58dadfa-7b4d-4bea-8105-5e1350613464",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ab7d3852-2f1f-4148-ada0-b2e3d035a50d",
          "fdd9a7c6-d607-4f26-91a0-84da44e87f9b",
          "3e4322ef-557d-4814-87c4-a2840be7c293",
          "63156100-3bf9-419d-bfcc-688a94804a59",
          "c58dadfa-7b4d-4bea-8105-5e1350613464"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 9,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}